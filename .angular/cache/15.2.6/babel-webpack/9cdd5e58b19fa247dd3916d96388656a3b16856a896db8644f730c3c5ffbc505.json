{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _CDPPage_instances, _CDPPage_closed, _CDPPage_client, _CDPPage_target, _CDPPage_keyboard, _CDPPage_mouse, _CDPPage_timeoutSettings, _CDPPage_touchscreen, _CDPPage_accessibility, _CDPPage_frameManager, _CDPPage_emulationManager, _CDPPage_tracing, _CDPPage_bindings, _CDPPage_coverage, _CDPPage_javascriptEnabled, _CDPPage_viewport, _CDPPage_screenshotTaskQueue, _CDPPage_workers, _CDPPage_fileChooserPromises, _CDPPage_disconnectPromise, _CDPPage_userDragInterceptionEnabled, _CDPPage_onDetachedFromTarget, _CDPPage_onAttachedToTarget, _CDPPage_initialize, _CDPPage_onFileChooser, _CDPPage_onTargetCrashed, _CDPPage_onLogEntryAdded, _CDPPage_emitMetrics, _CDPPage_buildMetricsObject, _CDPPage_handleException, _CDPPage_onConsoleAPI, _CDPPage_onBindingCalled, _CDPPage_addConsoleMessage, _CDPPage_onDialog, _CDPPage_resetDefaultBackgroundColor, _CDPPage_setTransparentBackgroundColor, _CDPPage_sessionClosePromise, _CDPPage_go, _CDPPage_screenshotTask;\nimport { Page } from '../api/Page.js';\nimport { assert } from '../util/assert.js';\nimport { createDeferredPromise } from '../util/DeferredPromise.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { Accessibility } from './Accessibility.js';\nimport { Binding } from './Binding.js';\nimport { CDPSessionEmittedEvents, isTargetClosedError } from './Connection.js';\nimport { ConsoleMessage } from './ConsoleMessage.js';\nimport { Coverage } from './Coverage.js';\nimport { Dialog } from './Dialog.js';\nimport { EmulationManager } from './EmulationManager.js';\nimport { FileChooser } from './FileChooser.js';\nimport { FrameManager, FrameManagerEmittedEvents } from './FrameManager.js';\nimport { Keyboard, Mouse, Touchscreen } from './Input.js';\nimport { MAIN_WORLD } from './IsolatedWorlds.js';\nimport { NetworkManagerEmittedEvents } from './NetworkManager.js';\nimport { TimeoutSettings } from './TimeoutSettings.js';\nimport { Tracing } from './Tracing.js';\nimport { createJSHandle, debugError, evaluationString, getExceptionMessage, getReadableAsBuffer, getReadableFromProtocolStream, isString, pageBindingInitString, releaseObject, valueFromRemoteObject, waitForEvent, waitWithTimeout } from './util.js';\nimport { WebWorker } from './WebWorker.js';\n/**\n * @internal\n */\nexport class CDPPage extends Page {\n  /**\n   * @internal\n   */\n  static _create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n    return _asyncToGenerator(function* () {\n      const page = new CDPPage(client, target, ignoreHTTPSErrors, screenshotTaskQueue);\n      yield __classPrivateFieldGet(page, _CDPPage_instances, \"m\", _CDPPage_initialize).call(page);\n      if (defaultViewport) {\n        try {\n          yield page.setViewport(defaultViewport);\n        } catch (err) {\n          if (isErrorLike(err) && isTargetClosedError(err)) {\n            debugError(err);\n          } else {\n            throw err;\n          }\n        }\n      }\n      return page;\n    })();\n  }\n  /**\n   * @internal\n   */\n  constructor(client, target, ignoreHTTPSErrors, screenshotTaskQueue) {\n    super();\n    _CDPPage_instances.add(this);\n    _CDPPage_closed.set(this, false);\n    _CDPPage_client.set(this, void 0);\n    _CDPPage_target.set(this, void 0);\n    _CDPPage_keyboard.set(this, void 0);\n    _CDPPage_mouse.set(this, void 0);\n    _CDPPage_timeoutSettings.set(this, new TimeoutSettings());\n    _CDPPage_touchscreen.set(this, void 0);\n    _CDPPage_accessibility.set(this, void 0);\n    _CDPPage_frameManager.set(this, void 0);\n    _CDPPage_emulationManager.set(this, void 0);\n    _CDPPage_tracing.set(this, void 0);\n    _CDPPage_bindings.set(this, new Map());\n    _CDPPage_coverage.set(this, void 0);\n    _CDPPage_javascriptEnabled.set(this, true);\n    _CDPPage_viewport.set(this, void 0);\n    _CDPPage_screenshotTaskQueue.set(this, void 0);\n    _CDPPage_workers.set(this, new Map());\n    _CDPPage_fileChooserPromises.set(this, new Set());\n    _CDPPage_disconnectPromise.set(this, void 0);\n    _CDPPage_userDragInterceptionEnabled.set(this, false);\n    _CDPPage_onDetachedFromTarget.set(this, target => {\n      var _a;\n      const sessionId = (_a = target._session()) === null || _a === void 0 ? void 0 : _a.id();\n      const worker = __classPrivateFieldGet(this, _CDPPage_workers, \"f\").get(sessionId);\n      if (!worker) {\n        return;\n      }\n      __classPrivateFieldGet(this, _CDPPage_workers, \"f\").delete(sessionId);\n      this.emit(\"workerdestroyed\" /* PageEmittedEvents.WorkerDestroyed */, worker);\n    });\n    _CDPPage_onAttachedToTarget.set(this, createdTarget => {\n      __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").onAttachedToTarget(createdTarget);\n      if (createdTarget._getTargetInfo().type === 'worker') {\n        const session = createdTarget._session();\n        assert(session);\n        const worker = new WebWorker(session, createdTarget.url(), __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_addConsoleMessage).bind(this), __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_handleException).bind(this));\n        __classPrivateFieldGet(this, _CDPPage_workers, \"f\").set(session.id(), worker);\n        this.emit(\"workercreated\" /* PageEmittedEvents.WorkerCreated */, worker);\n      }\n      if (createdTarget._session()) {\n        __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetManager().addTargetInterceptor(createdTarget._session(), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n      }\n    });\n    __classPrivateFieldSet(this, _CDPPage_client, client, \"f\");\n    __classPrivateFieldSet(this, _CDPPage_target, target, \"f\");\n    __classPrivateFieldSet(this, _CDPPage_keyboard, new Keyboard(client), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_mouse, new Mouse(client, __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_touchscreen, new Touchscreen(client, __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_accessibility, new Accessibility(client), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_frameManager, new FrameManager(client, this, ignoreHTTPSErrors, __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\")), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_emulationManager, new EmulationManager(client), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_tracing, new Tracing(client), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_coverage, new Coverage(client), \"f\");\n    __classPrivateFieldSet(this, _CDPPage_screenshotTaskQueue, screenshotTaskQueue, \"f\");\n    __classPrivateFieldSet(this, _CDPPage_viewport, null, \"f\");\n    __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetManager().addTargetInterceptor(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n    __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetManager().on(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, __classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, \"f\"));\n    __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameAttached, event => {\n      return this.emit(\"frameattached\" /* PageEmittedEvents.FrameAttached */, event);\n    });\n    __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameDetached, event => {\n      return this.emit(\"framedetached\" /* PageEmittedEvents.FrameDetached */, event);\n    });\n    __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameNavigated, event => {\n      return this.emit(\"framenavigated\" /* PageEmittedEvents.FrameNavigated */, event);\n    });\n    const networkManager = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager;\n    networkManager.on(NetworkManagerEmittedEvents.Request, event => {\n      return this.emit(\"request\" /* PageEmittedEvents.Request */, event);\n    });\n    networkManager.on(NetworkManagerEmittedEvents.RequestServedFromCache, event => {\n      return this.emit(\"requestservedfromcache\" /* PageEmittedEvents.RequestServedFromCache */, event);\n    });\n    networkManager.on(NetworkManagerEmittedEvents.Response, event => {\n      return this.emit(\"response\" /* PageEmittedEvents.Response */, event);\n    });\n    networkManager.on(NetworkManagerEmittedEvents.RequestFailed, event => {\n      return this.emit(\"requestfailed\" /* PageEmittedEvents.RequestFailed */, event);\n    });\n    networkManager.on(NetworkManagerEmittedEvents.RequestFinished, event => {\n      return this.emit(\"requestfinished\" /* PageEmittedEvents.RequestFinished */, event);\n    });\n    client.on('Page.domContentEventFired', () => {\n      return this.emit(\"domcontentloaded\" /* PageEmittedEvents.DOMContentLoaded */);\n    });\n\n    client.on('Page.loadEventFired', () => {\n      return this.emit(\"load\" /* PageEmittedEvents.Load */);\n    });\n\n    client.on('Runtime.consoleAPICalled', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onConsoleAPI).call(this, event);\n    });\n    client.on('Runtime.bindingCalled', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onBindingCalled).call(this, event);\n    });\n    client.on('Page.javascriptDialogOpening', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onDialog).call(this, event);\n    });\n    client.on('Runtime.exceptionThrown', exception => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_handleException).call(this, exception.exceptionDetails);\n    });\n    client.on('Inspector.targetCrashed', () => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onTargetCrashed).call(this);\n    });\n    client.on('Performance.metrics', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_emitMetrics).call(this, event);\n    });\n    client.on('Log.entryAdded', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onLogEntryAdded).call(this, event);\n    });\n    client.on('Page.fileChooserOpened', event => {\n      return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onFileChooser).call(this, event);\n    });\n    __classPrivateFieldGet(this, _CDPPage_target, \"f\")._isClosedPromise.then(() => {\n      __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetManager().removeTargetInterceptor(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n      __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetManager().off(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, __classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, \"f\"));\n      this.emit(\"close\" /* PageEmittedEvents.Close */);\n      __classPrivateFieldSet(this, _CDPPage_closed, true, \"f\");\n    });\n  }\n  /**\n   * @internal\n   */\n  _client() {\n    return __classPrivateFieldGet(this, _CDPPage_client, \"f\");\n  }\n  isDragInterceptionEnabled() {\n    return __classPrivateFieldGet(this, _CDPPage_userDragInterceptionEnabled, \"f\");\n  }\n  isJavaScriptEnabled() {\n    return __classPrivateFieldGet(this, _CDPPage_javascriptEnabled, \"f\");\n  }\n  waitForFileChooser(options = {}) {\n    const needsEnable = __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").size === 0;\n    const {\n      timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout()\n    } = options;\n    const promise = createDeferredPromise({\n      message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n      timeout\n    });\n    __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").add(promise);\n    let enablePromise;\n    if (needsEnable) {\n      enablePromise = __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.setInterceptFileChooserDialog', {\n        enabled: true\n      });\n    }\n    return Promise.all([promise, enablePromise]).then(([result]) => {\n      return result;\n    }).catch(error => {\n      __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").delete(promise);\n      throw error;\n    });\n  }\n  setGeolocation(options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        longitude,\n        latitude,\n        accuracy = 0\n      } = options;\n      if (longitude < -180 || longitude > 180) {\n        throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n      }\n      if (latitude < -90 || latitude > 90) {\n        throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n      }\n      if (accuracy < 0) {\n        throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n      }\n      yield __classPrivateFieldGet(_this, _CDPPage_client, \"f\").send('Emulation.setGeolocationOverride', {\n        longitude,\n        latitude,\n        accuracy\n      });\n    })();\n  }\n  target() {\n    return __classPrivateFieldGet(this, _CDPPage_target, \"f\");\n  }\n  browser() {\n    return __classPrivateFieldGet(this, _CDPPage_target, \"f\").browser();\n  }\n  browserContext() {\n    return __classPrivateFieldGet(this, _CDPPage_target, \"f\").browserContext();\n  }\n  mainFrame() {\n    return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame();\n  }\n  get keyboard() {\n    return __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\");\n  }\n  get touchscreen() {\n    return __classPrivateFieldGet(this, _CDPPage_touchscreen, \"f\");\n  }\n  get coverage() {\n    return __classPrivateFieldGet(this, _CDPPage_coverage, \"f\");\n  }\n  get tracing() {\n    return __classPrivateFieldGet(this, _CDPPage_tracing, \"f\");\n  }\n  get accessibility() {\n    return __classPrivateFieldGet(this, _CDPPage_accessibility, \"f\");\n  }\n  frames() {\n    return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").frames();\n  }\n  workers() {\n    return Array.from(__classPrivateFieldGet(this, _CDPPage_workers, \"f\").values());\n  }\n  setRequestInterception(value) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this2, _CDPPage_frameManager, \"f\").networkManager.setRequestInterception(value);\n    })();\n  }\n  setDragInterception(enabled) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      __classPrivateFieldSet(_this3, _CDPPage_userDragInterceptionEnabled, enabled, \"f\");\n      return __classPrivateFieldGet(_this3, _CDPPage_client, \"f\").send('Input.setInterceptDrags', {\n        enabled\n      });\n    })();\n  }\n  setOfflineMode(enabled) {\n    return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setOfflineMode(enabled);\n  }\n  emulateNetworkConditions(networkConditions) {\n    return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.emulateNetworkConditions(networkConditions);\n  }\n  setDefaultNavigationTimeout(timeout) {\n    __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").setDefaultNavigationTimeout(timeout);\n  }\n  setDefaultTimeout(timeout) {\n    __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").setDefaultTimeout(timeout);\n  }\n  getDefaultTimeout() {\n    return __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout();\n  }\n  $(selector) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      return _this4.mainFrame().$(selector);\n    })();\n  }\n  $$(selector) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      return _this5.mainFrame().$$(selector);\n    })();\n  }\n  evaluateHandle(pageFunction, ...args) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const context = yield _this6.mainFrame().executionContext();\n      return context.evaluateHandle(pageFunction, ...args);\n    })();\n  }\n  queryObjects(prototypeHandle) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const context = yield _this7.mainFrame().executionContext();\n      assert(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n      assert(prototypeHandle.id, 'Prototype JSHandle must not be referencing primitive value');\n      const response = yield context._client.send('Runtime.queryObjects', {\n        prototypeObjectId: prototypeHandle.id\n      });\n      return createJSHandle(context, response.objects);\n    })();\n  }\n  $eval(selector, pageFunction, ...args) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return _this8.mainFrame().$eval(selector, pageFunction, ...args);\n    })();\n  }\n  $$eval(selector, pageFunction, ...args) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return _this9.mainFrame().$$eval(selector, pageFunction, ...args);\n    })();\n  }\n  $x(expression) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      return _this10.mainFrame().$x(expression);\n    })();\n  }\n  cookies(...urls) {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const originalCookies = (yield __classPrivateFieldGet(_this11, _CDPPage_client, \"f\").send('Network.getCookies', {\n        urls: urls.length ? urls : [_this11.url()]\n      })).cookies;\n      const unsupportedCookieAttributes = ['priority'];\n      const filterUnsupportedAttributes = cookie => {\n        for (const attr of unsupportedCookieAttributes) {\n          delete cookie[attr];\n        }\n        return cookie;\n      };\n      return originalCookies.map(filterUnsupportedAttributes);\n    })();\n  }\n  deleteCookie(...cookies) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      const pageURL = _this12.url();\n      for (const cookie of cookies) {\n        const item = Object.assign({}, cookie);\n        if (!cookie.url && pageURL.startsWith('http')) {\n          item.url = pageURL;\n        }\n        yield __classPrivateFieldGet(_this12, _CDPPage_client, \"f\").send('Network.deleteCookies', item);\n      }\n    })();\n  }\n  setCookie(...cookies) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      const pageURL = _this13.url();\n      const startsWithHTTP = pageURL.startsWith('http');\n      const items = cookies.map(cookie => {\n        const item = Object.assign({}, cookie);\n        if (!item.url && startsWithHTTP) {\n          item.url = pageURL;\n        }\n        assert(item.url !== 'about:blank', `Blank page can not have cookie \"${item.name}\"`);\n        assert(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie \"${item.name}\"`);\n        return item;\n      });\n      yield _this13.deleteCookie(...items);\n      if (items.length) {\n        yield __classPrivateFieldGet(_this13, _CDPPage_client, \"f\").send('Network.setCookies', {\n          cookies: items\n        });\n      }\n    })();\n  }\n  addScriptTag(options) {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      return _this14.mainFrame().addScriptTag(options);\n    })();\n  }\n  addStyleTag(options) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      return _this15.mainFrame().addStyleTag(options);\n    })();\n  }\n  exposeFunction(name, pptrFunction) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      if (__classPrivateFieldGet(_this16, _CDPPage_bindings, \"f\").has(name)) {\n        throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n      }\n      let binding;\n      switch (typeof pptrFunction) {\n        case 'function':\n          binding = new Binding(name, pptrFunction);\n          break;\n        default:\n          binding = new Binding(name, pptrFunction.default);\n          break;\n      }\n      __classPrivateFieldGet(_this16, _CDPPage_bindings, \"f\").set(name, binding);\n      const expression = pageBindingInitString('exposedFun', name);\n      yield __classPrivateFieldGet(_this16, _CDPPage_client, \"f\").send('Runtime.addBinding', {\n        name: name\n      });\n      yield __classPrivateFieldGet(_this16, _CDPPage_client, \"f\").send('Page.addScriptToEvaluateOnNewDocument', {\n        source: expression\n      });\n      yield Promise.all(_this16.frames().map(frame => {\n        return frame.evaluate(expression).catch(debugError);\n      }));\n    })();\n  }\n  authenticate(credentials) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this17, _CDPPage_frameManager, \"f\").networkManager.authenticate(credentials);\n    })();\n  }\n  setExtraHTTPHeaders(headers) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this18, _CDPPage_frameManager, \"f\").networkManager.setExtraHTTPHeaders(headers);\n    })();\n  }\n  setUserAgent(userAgent, userAgentMetadata) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this19, _CDPPage_frameManager, \"f\").networkManager.setUserAgent(userAgent, userAgentMetadata);\n    })();\n  }\n  metrics() {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      const response = yield __classPrivateFieldGet(_this20, _CDPPage_client, \"f\").send('Performance.getMetrics');\n      return __classPrivateFieldGet(_this20, _CDPPage_instances, \"m\", _CDPPage_buildMetricsObject).call(_this20, response.metrics);\n    })();\n  }\n  url() {\n    return this.mainFrame().url();\n  }\n  content() {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      return yield __classPrivateFieldGet(_this21, _CDPPage_frameManager, \"f\").mainFrame().content();\n    })();\n  }\n  setContent(html, options = {}) {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this22, _CDPPage_frameManager, \"f\").mainFrame().setContent(html, options);\n    })();\n  }\n  goto(url, options = {}) {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      return yield __classPrivateFieldGet(_this23, _CDPPage_frameManager, \"f\").mainFrame().goto(url, options);\n    })();\n  }\n  reload(options) {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield Promise.all([_this24.waitForNavigation(options), __classPrivateFieldGet(_this24, _CDPPage_client, \"f\").send('Page.reload')]);\n      return result[0];\n    })();\n  }\n  waitForNavigation(options = {}) {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      return yield __classPrivateFieldGet(_this25, _CDPPage_frameManager, \"f\").mainFrame().waitForNavigation(options);\n    })();\n  }\n  waitForRequest(urlOrPredicate, options = {}) {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        timeout = __classPrivateFieldGet(_this26, _CDPPage_timeoutSettings, \"f\").timeout()\n      } = options;\n      return waitForEvent(__classPrivateFieldGet(_this26, _CDPPage_frameManager, \"f\").networkManager, NetworkManagerEmittedEvents.Request, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (request) {\n          if (isString(urlOrPredicate)) {\n            return urlOrPredicate === request.url();\n          }\n          if (typeof urlOrPredicate === 'function') {\n            return !!(yield urlOrPredicate(request));\n          }\n          return false;\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), timeout, __classPrivateFieldGet(_this26, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(_this26));\n    })();\n  }\n  waitForResponse(urlOrPredicate, options = {}) {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        timeout = __classPrivateFieldGet(_this27, _CDPPage_timeoutSettings, \"f\").timeout()\n      } = options;\n      return waitForEvent(__classPrivateFieldGet(_this27, _CDPPage_frameManager, \"f\").networkManager, NetworkManagerEmittedEvents.Response, /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (response) {\n          if (isString(urlOrPredicate)) {\n            return urlOrPredicate === response.url();\n          }\n          if (typeof urlOrPredicate === 'function') {\n            return !!(yield urlOrPredicate(response));\n          }\n          return false;\n        });\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }(), timeout, __classPrivateFieldGet(_this27, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(_this27));\n    })();\n  }\n  waitForNetworkIdle(options = {}) {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        idleTime = 500,\n        timeout = __classPrivateFieldGet(_this28, _CDPPage_timeoutSettings, \"f\").timeout()\n      } = options;\n      const networkManager = __classPrivateFieldGet(_this28, _CDPPage_frameManager, \"f\").networkManager;\n      const idlePromise = createDeferredPromise();\n      let abortRejectCallback;\n      const abortPromise = new Promise((_, reject) => {\n        abortRejectCallback = reject;\n      });\n      let idleTimer;\n      const cleanup = () => {\n        idleTimer && clearTimeout(idleTimer);\n        abortRejectCallback(new Error('abort'));\n      };\n      const evaluate = () => {\n        idleTimer && clearTimeout(idleTimer);\n        if (networkManager.numRequestsInProgress() === 0) {\n          idleTimer = setTimeout(idlePromise.resolve, idleTime);\n        }\n      };\n      evaluate();\n      const eventHandler = () => {\n        evaluate();\n        return false;\n      };\n      const listenToEvent = event => {\n        return waitForEvent(networkManager, event, eventHandler, timeout, abortPromise);\n      };\n      const eventPromises = [listenToEvent(NetworkManagerEmittedEvents.Request), listenToEvent(NetworkManagerEmittedEvents.Response), listenToEvent(NetworkManagerEmittedEvents.RequestFailed)];\n      yield Promise.race([idlePromise, ...eventPromises, __classPrivateFieldGet(_this28, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(_this28)]).then(r => {\n        cleanup();\n        return r;\n      }, error => {\n        cleanup();\n        throw error;\n      });\n    })();\n  }\n  waitForFrame(urlOrPredicate, options = {}) {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        timeout = __classPrivateFieldGet(_this29, _CDPPage_timeoutSettings, \"f\").timeout()\n      } = options;\n      let predicate;\n      if (isString(urlOrPredicate)) {\n        predicate = frame => {\n          return Promise.resolve(urlOrPredicate === frame.url());\n        };\n      } else {\n        predicate = frame => {\n          const value = urlOrPredicate(frame);\n          if (typeof value === 'boolean') {\n            return Promise.resolve(value);\n          }\n          return value;\n        };\n      }\n      const eventRace = Promise.race([waitForEvent(__classPrivateFieldGet(_this29, _CDPPage_frameManager, \"f\"), FrameManagerEmittedEvents.FrameAttached, predicate, timeout, __classPrivateFieldGet(_this29, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(_this29)), waitForEvent(__classPrivateFieldGet(_this29, _CDPPage_frameManager, \"f\"), FrameManagerEmittedEvents.FrameNavigated, predicate, timeout, __classPrivateFieldGet(_this29, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(_this29)), ..._this29.frames().map( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (frame) {\n          if (yield predicate(frame)) {\n            return frame;\n          }\n          return yield eventRace;\n        });\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }())]);\n      return eventRace;\n    })();\n  }\n  goBack(options = {}) {\n    var _this30 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this30, _CDPPage_instances, \"m\", _CDPPage_go).call(_this30, -1, options);\n    })();\n  }\n  goForward(options = {}) {\n    var _this31 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this31, _CDPPage_instances, \"m\", _CDPPage_go).call(_this31, +1, options);\n    })();\n  }\n  bringToFront() {\n    var _this32 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this32, _CDPPage_client, \"f\").send('Page.bringToFront');\n    })();\n  }\n  setJavaScriptEnabled(enabled) {\n    var _this33 = this;\n    return _asyncToGenerator(function* () {\n      if (__classPrivateFieldGet(_this33, _CDPPage_javascriptEnabled, \"f\") === enabled) {\n        return;\n      }\n      __classPrivateFieldSet(_this33, _CDPPage_javascriptEnabled, enabled, \"f\");\n      yield __classPrivateFieldGet(_this33, _CDPPage_client, \"f\").send('Emulation.setScriptExecutionDisabled', {\n        value: !enabled\n      });\n    })();\n  }\n  setBypassCSP(enabled) {\n    var _this34 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this34, _CDPPage_client, \"f\").send('Page.setBypassCSP', {\n        enabled\n      });\n    })();\n  }\n  emulateMediaType(type) {\n    var _this35 = this;\n    return _asyncToGenerator(function* () {\n      assert(type === 'screen' || type === 'print' || (type !== null && type !== void 0 ? type : undefined) === undefined, 'Unsupported media type: ' + type);\n      yield __classPrivateFieldGet(_this35, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {\n        media: type || ''\n      });\n    })();\n  }\n  emulateCPUThrottling(factor) {\n    var _this36 = this;\n    return _asyncToGenerator(function* () {\n      assert(factor === null || factor >= 1, 'Throttling rate should be greater or equal to 1');\n      yield __classPrivateFieldGet(_this36, _CDPPage_client, \"f\").send('Emulation.setCPUThrottlingRate', {\n        rate: factor !== null ? factor : 1\n      });\n    })();\n  }\n  emulateMediaFeatures(features) {\n    var _this37 = this;\n    return _asyncToGenerator(function* () {\n      if (!features) {\n        yield __classPrivateFieldGet(_this37, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {});\n      }\n      if (Array.isArray(features)) {\n        for (const mediaFeature of features) {\n          const name = mediaFeature.name;\n          assert(/^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(name), 'Unsupported media feature: ' + name);\n        }\n        yield __classPrivateFieldGet(_this37, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {\n          features: features\n        });\n      }\n    })();\n  }\n  emulateTimezone(timezoneId) {\n    var _this38 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield __classPrivateFieldGet(_this38, _CDPPage_client, \"f\").send('Emulation.setTimezoneOverride', {\n          timezoneId: timezoneId || ''\n        });\n      } catch (error) {\n        if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n          throw new Error(`Invalid timezone ID: ${timezoneId}`);\n        }\n        throw error;\n      }\n    })();\n  }\n  emulateIdleState(overrides) {\n    var _this39 = this;\n    return _asyncToGenerator(function* () {\n      if (overrides) {\n        yield __classPrivateFieldGet(_this39, _CDPPage_client, \"f\").send('Emulation.setIdleOverride', {\n          isUserActive: overrides.isUserActive,\n          isScreenUnlocked: overrides.isScreenUnlocked\n        });\n      } else {\n        yield __classPrivateFieldGet(_this39, _CDPPage_client, \"f\").send('Emulation.clearIdleOverride');\n      }\n    })();\n  }\n  emulateVisionDeficiency(type) {\n    var _this40 = this;\n    return _asyncToGenerator(function* () {\n      const visionDeficiencies = new Set(['none', 'achromatopsia', 'blurredVision', 'deuteranopia', 'protanopia', 'tritanopia']);\n      try {\n        assert(!type || visionDeficiencies.has(type), `Unsupported vision deficiency: ${type}`);\n        yield __classPrivateFieldGet(_this40, _CDPPage_client, \"f\").send('Emulation.setEmulatedVisionDeficiency', {\n          type: type || 'none'\n        });\n      } catch (error) {\n        throw error;\n      }\n    })();\n  }\n  setViewport(viewport) {\n    var _this41 = this;\n    return _asyncToGenerator(function* () {\n      const needsReload = yield __classPrivateFieldGet(_this41, _CDPPage_emulationManager, \"f\").emulateViewport(viewport);\n      __classPrivateFieldSet(_this41, _CDPPage_viewport, viewport, \"f\");\n      if (needsReload) {\n        yield _this41.reload();\n      }\n    })();\n  }\n  viewport() {\n    return __classPrivateFieldGet(this, _CDPPage_viewport, \"f\");\n  }\n  evaluate(pageFunction, ...args) {\n    var _this42 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this42, _CDPPage_frameManager, \"f\").mainFrame().evaluate(pageFunction, ...args);\n    })();\n  }\n  evaluateOnNewDocument(pageFunction, ...args) {\n    var _this43 = this;\n    return _asyncToGenerator(function* () {\n      const source = evaluationString(pageFunction, ...args);\n      yield __classPrivateFieldGet(_this43, _CDPPage_client, \"f\").send('Page.addScriptToEvaluateOnNewDocument', {\n        source\n      });\n    })();\n  }\n  setCacheEnabled(enabled = true) {\n    var _this44 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this44, _CDPPage_frameManager, \"f\").networkManager.setCacheEnabled(enabled);\n    })();\n  }\n  screenshot(options = {}) {\n    var _this45 = this;\n    return _asyncToGenerator(function* () {\n      let screenshotType = \"png\" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;\n      // options.type takes precedence over inferring the type from options.path\n      // because it may be a 0-length file with no extension created beforehand\n      // (i.e. as a temp file).\n      if (options.type) {\n        screenshotType = options.type;\n      } else if (options.path) {\n        const filePath = options.path;\n        const extension = filePath.slice(filePath.lastIndexOf('.') + 1).toLowerCase();\n        switch (extension) {\n          case 'png':\n            screenshotType = \"png\" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;\n            break;\n          case 'jpeg':\n          case 'jpg':\n            screenshotType = \"jpeg\" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */;\n            break;\n          case 'webp':\n            screenshotType = \"webp\" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */;\n            break;\n          default:\n            throw new Error(`Unsupported screenshot type for extension \\`.${extension}\\``);\n        }\n      }\n      if (options.quality) {\n        assert(screenshotType === \"jpeg\" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */ || screenshotType === \"webp\" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */, 'options.quality is unsupported for the ' + screenshotType + ' screenshots');\n        assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' + typeof options.quality);\n        assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n        assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' + options.quality);\n      }\n      assert(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');\n      if (options.clip) {\n        assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' + typeof options.clip.x);\n        assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' + typeof options.clip.y);\n        assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' + typeof options.clip.width);\n        assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' + typeof options.clip.height);\n        assert(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');\n        assert(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');\n      }\n      return __classPrivateFieldGet(_this45, _CDPPage_screenshotTaskQueue, \"f\").postTask(() => {\n        return __classPrivateFieldGet(_this45, _CDPPage_instances, \"m\", _CDPPage_screenshotTask).call(_this45, screenshotType, options);\n      });\n    })();\n  }\n  createPDFStream(options = {}) {\n    var _this46 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        landscape,\n        displayHeaderFooter,\n        headerTemplate,\n        footerTemplate,\n        printBackground,\n        scale,\n        width: paperWidth,\n        height: paperHeight,\n        margin,\n        pageRanges,\n        preferCSSPageSize,\n        omitBackground,\n        timeout\n      } = _this46._getPDFOptions(options);\n      if (omitBackground) {\n        yield __classPrivateFieldGet(_this46, _CDPPage_instances, \"m\", _CDPPage_setTransparentBackgroundColor).call(_this46);\n      }\n      const printCommandPromise = __classPrivateFieldGet(_this46, _CDPPage_client, \"f\").send('Page.printToPDF', {\n        transferMode: 'ReturnAsStream',\n        landscape,\n        displayHeaderFooter,\n        headerTemplate,\n        footerTemplate,\n        printBackground,\n        scale,\n        paperWidth,\n        paperHeight,\n        marginTop: margin.top,\n        marginBottom: margin.bottom,\n        marginLeft: margin.left,\n        marginRight: margin.right,\n        pageRanges,\n        preferCSSPageSize\n      });\n      const result = yield waitWithTimeout(printCommandPromise, 'Page.printToPDF', timeout);\n      if (omitBackground) {\n        yield __classPrivateFieldGet(_this46, _CDPPage_instances, \"m\", _CDPPage_resetDefaultBackgroundColor).call(_this46);\n      }\n      assert(result.stream, '`stream` is missing from `Page.printToPDF');\n      return getReadableFromProtocolStream(__classPrivateFieldGet(_this46, _CDPPage_client, \"f\"), result.stream);\n    })();\n  }\n  pdf(options = {}) {\n    var _this47 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        path = undefined\n      } = options;\n      const readable = yield _this47.createPDFStream(options);\n      const buffer = yield getReadableAsBuffer(readable, path);\n      assert(buffer, 'Could not create buffer');\n      return buffer;\n    })();\n  }\n  title() {\n    var _this48 = this;\n    return _asyncToGenerator(function* () {\n      return _this48.mainFrame().title();\n    })();\n  }\n  close(options = {\n    runBeforeUnload: undefined\n  }) {\n    var _this49 = this;\n    return _asyncToGenerator(function* () {\n      const connection = __classPrivateFieldGet(_this49, _CDPPage_client, \"f\").connection();\n      assert(connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n      const runBeforeUnload = !!options.runBeforeUnload;\n      if (runBeforeUnload) {\n        yield __classPrivateFieldGet(_this49, _CDPPage_client, \"f\").send('Page.close');\n      } else {\n        yield connection.send('Target.closeTarget', {\n          targetId: __classPrivateFieldGet(_this49, _CDPPage_target, \"f\")._targetId\n        });\n        yield __classPrivateFieldGet(_this49, _CDPPage_target, \"f\")._isClosedPromise;\n      }\n    })();\n  }\n  isClosed() {\n    return __classPrivateFieldGet(this, _CDPPage_closed, \"f\");\n  }\n  get mouse() {\n    return __classPrivateFieldGet(this, _CDPPage_mouse, \"f\");\n  }\n  click(selector, options = {}) {\n    return this.mainFrame().click(selector, options);\n  }\n  focus(selector) {\n    return this.mainFrame().focus(selector);\n  }\n  hover(selector) {\n    return this.mainFrame().hover(selector);\n  }\n  select(selector, ...values) {\n    return this.mainFrame().select(selector, ...values);\n  }\n  tap(selector) {\n    return this.mainFrame().tap(selector);\n  }\n  type(selector, text, options) {\n    return this.mainFrame().type(selector, text, options);\n  }\n  waitForTimeout(milliseconds) {\n    return this.mainFrame().waitForTimeout(milliseconds);\n  }\n  waitForSelector(selector, options = {}) {\n    var _this50 = this;\n    return _asyncToGenerator(function* () {\n      return yield _this50.mainFrame().waitForSelector(selector, options);\n    })();\n  }\n  waitForXPath(xpath, options = {}) {\n    return this.mainFrame().waitForXPath(xpath, options);\n  }\n  waitForFunction(pageFunction, options = {}, ...args) {\n    return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n  }\n  /**\n   * This method is typically coupled with an action that triggers a device\n   * request from an api such as WebBluetooth.\n   *\n   * :::caution\n   *\n   * This must be called before the device request is made. It will not return a\n   * currently active device prompt.\n   *\n   * :::\n   *\n   * @example\n   *\n   * ```ts\n   * const [devicePrompt] = Promise.all([\n   *   page.waitForDevicePrompt(),\n   *   page.click('#connect-bluetooth'),\n   * ]);\n   * await devicePrompt.select(\n   *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n   * );\n   * ```\n   */\n  waitForDevicePrompt(options = {}) {\n    return this.mainFrame().waitForDevicePrompt(options);\n  }\n}\n_CDPPage_closed = new WeakMap(), _CDPPage_client = new WeakMap(), _CDPPage_target = new WeakMap(), _CDPPage_keyboard = new WeakMap(), _CDPPage_mouse = new WeakMap(), _CDPPage_timeoutSettings = new WeakMap(), _CDPPage_touchscreen = new WeakMap(), _CDPPage_accessibility = new WeakMap(), _CDPPage_frameManager = new WeakMap(), _CDPPage_emulationManager = new WeakMap(), _CDPPage_tracing = new WeakMap(), _CDPPage_bindings = new WeakMap(), _CDPPage_coverage = new WeakMap(), _CDPPage_javascriptEnabled = new WeakMap(), _CDPPage_viewport = new WeakMap(), _CDPPage_screenshotTaskQueue = new WeakMap(), _CDPPage_workers = new WeakMap(), _CDPPage_fileChooserPromises = new WeakMap(), _CDPPage_disconnectPromise = new WeakMap(), _CDPPage_userDragInterceptionEnabled = new WeakMap(), _CDPPage_onDetachedFromTarget = new WeakMap(), _CDPPage_onAttachedToTarget = new WeakMap(), _CDPPage_instances = new WeakSet(), _CDPPage_initialize = /*#__PURE__*/function () {\n  var _CDPPage_initialize2 = _asyncToGenerator(function* () {\n    try {\n      yield Promise.all([__classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").initialize(), __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Performance.enable'), __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Log.enable')]);\n    } catch (err) {\n      if (isErrorLike(err) && isTargetClosedError(err)) {\n        debugError(err);\n      } else {\n        throw err;\n      }\n    }\n  });\n  function _CDPPage_initialize() {\n    return _CDPPage_initialize2.apply(this, arguments);\n  }\n  return _CDPPage_initialize;\n}(), _CDPPage_onFileChooser = /*#__PURE__*/function () {\n  var _CDPPage_onFileChooser2 = _asyncToGenerator(function* (event) {\n    if (!__classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").size) {\n      return;\n    }\n    const frame = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").frame(event.frameId);\n    assert(frame, 'This should never happen.');\n    // This is guaranteed to be an HTMLInputElement handle by the event.\n    const handle = yield frame.worlds[MAIN_WORLD].adoptBackendNode(event.backendNodeId);\n    const fileChooser = new FileChooser(handle, event);\n    for (const promise of __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\")) {\n      promise.resolve(fileChooser);\n    }\n    __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").clear();\n  });\n  function _CDPPage_onFileChooser(_x4) {\n    return _CDPPage_onFileChooser2.apply(this, arguments);\n  }\n  return _CDPPage_onFileChooser;\n}(), _CDPPage_onTargetCrashed = function _CDPPage_onTargetCrashed() {\n  this.emit('error', new Error('Page crashed!'));\n}, _CDPPage_onLogEntryAdded = function _CDPPage_onLogEntryAdded(event) {\n  const {\n    level,\n    text,\n    args,\n    source,\n    url,\n    lineNumber\n  } = event.entry;\n  if (args) {\n    args.map(arg => {\n      return releaseObject(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), arg);\n    });\n  }\n  if (source !== 'worker') {\n    this.emit(\"console\" /* PageEmittedEvents.Console */, new ConsoleMessage(level, text, [], [{\n      url,\n      lineNumber\n    }]));\n  }\n}, _CDPPage_emitMetrics = function _CDPPage_emitMetrics(event) {\n  this.emit(\"metrics\" /* PageEmittedEvents.Metrics */, {\n    title: event.title,\n    metrics: __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_buildMetricsObject).call(this, event.metrics)\n  });\n}, _CDPPage_buildMetricsObject = function _CDPPage_buildMetricsObject(metrics) {\n  const result = {};\n  for (const metric of metrics || []) {\n    if (supportedMetrics.has(metric.name)) {\n      result[metric.name] = metric.value;\n    }\n  }\n  return result;\n}, _CDPPage_handleException = function _CDPPage_handleException(exceptionDetails) {\n  const message = getExceptionMessage(exceptionDetails);\n  const err = new Error(message);\n  err.stack = ''; // Don't report clientside error with a node stack attached\n  this.emit(\"pageerror\" /* PageEmittedEvents.PageError */, err);\n}, _CDPPage_onConsoleAPI = /*#__PURE__*/function () {\n  var _CDPPage_onConsoleAPI2 = _asyncToGenerator(function* (event) {\n    if (event.executionContextId === 0) {\n      // DevTools protocol stores the last 1000 console messages. These\n      // messages are always reported even for removed execution contexts. In\n      // this case, they are marked with executionContextId = 0 and are\n      // reported upon enabling Runtime agent.\n      //\n      // Ignore these messages since:\n      // - there's no execution context we can use to operate with message\n      //   arguments\n      // - these messages are reported before Puppeteer clients can subscribe\n      //   to the 'console'\n      //   page event.\n      //\n      // @see https://github.com/puppeteer/puppeteer/issues/3865\n      return;\n    }\n    const context = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").getExecutionContextById(event.executionContextId, __classPrivateFieldGet(this, _CDPPage_client, \"f\"));\n    if (!context) {\n      debugError(new Error(`ExecutionContext not found for a console message: ${JSON.stringify(event)}`));\n      return;\n    }\n    const values = event.args.map(arg => {\n      return createJSHandle(context, arg);\n    });\n    __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_addConsoleMessage).call(this, event.type, values, event.stackTrace);\n  });\n  function _CDPPage_onConsoleAPI(_x5) {\n    return _CDPPage_onConsoleAPI2.apply(this, arguments);\n  }\n  return _CDPPage_onConsoleAPI;\n}(), _CDPPage_onBindingCalled = /*#__PURE__*/function () {\n  var _CDPPage_onBindingCalled2 = _asyncToGenerator(function* (event) {\n    let payload;\n    try {\n      payload = JSON.parse(event.payload);\n    } catch {\n      // The binding was either called by something in the page or it was\n      // called before our wrapper was initialized.\n      return;\n    }\n    const {\n      type,\n      name,\n      seq,\n      args,\n      isTrivial\n    } = payload;\n    if (type !== 'exposedFun') {\n      return;\n    }\n    const context = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").executionContextById(event.executionContextId, __classPrivateFieldGet(this, _CDPPage_client, \"f\"));\n    if (!context) {\n      return;\n    }\n    const binding = __classPrivateFieldGet(this, _CDPPage_bindings, \"f\").get(name);\n    yield binding === null || binding === void 0 ? void 0 : binding.run(context, seq, args, isTrivial);\n  });\n  function _CDPPage_onBindingCalled(_x6) {\n    return _CDPPage_onBindingCalled2.apply(this, arguments);\n  }\n  return _CDPPage_onBindingCalled;\n}(), _CDPPage_addConsoleMessage = function _CDPPage_addConsoleMessage(eventType, args, stackTrace) {\n  if (!this.listenerCount(\"console\" /* PageEmittedEvents.Console */)) {\n    args.forEach(arg => {\n      return arg.dispose();\n    });\n    return;\n  }\n  const textTokens = [];\n  for (const arg of args) {\n    const remoteObject = arg.remoteObject();\n    if (remoteObject.objectId) {\n      textTokens.push(arg.toString());\n    } else {\n      textTokens.push(valueFromRemoteObject(remoteObject));\n    }\n  }\n  const stackTraceLocations = [];\n  if (stackTrace) {\n    for (const callFrame of stackTrace.callFrames) {\n      stackTraceLocations.push({\n        url: callFrame.url,\n        lineNumber: callFrame.lineNumber,\n        columnNumber: callFrame.columnNumber\n      });\n    }\n  }\n  const message = new ConsoleMessage(eventType, textTokens.join(' '), args, stackTraceLocations);\n  this.emit(\"console\" /* PageEmittedEvents.Console */, message);\n}, _CDPPage_onDialog = function _CDPPage_onDialog(event) {\n  let dialogType = null;\n  const validDialogTypes = new Set(['alert', 'confirm', 'prompt', 'beforeunload']);\n  if (validDialogTypes.has(event.type)) {\n    dialogType = event.type;\n  }\n  assert(dialogType, 'Unknown javascript dialog type: ' + event.type);\n  const dialog = new Dialog(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), dialogType, event.message, event.defaultPrompt);\n  this.emit(\"dialog\" /* PageEmittedEvents.Dialog */, dialog);\n}, _CDPPage_resetDefaultBackgroundColor =\n/*#__PURE__*/\n/**\n * Resets default white background\n */\nfunction () {\n  var _CDPPage_resetDefaultBackgroundColor2 = _asyncToGenerator(function* () {\n    yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDefaultBackgroundColorOverride');\n  });\n  function _CDPPage_resetDefaultBackgroundColor() {\n    return _CDPPage_resetDefaultBackgroundColor2.apply(this, arguments);\n  }\n  return _CDPPage_resetDefaultBackgroundColor;\n}(), _CDPPage_setTransparentBackgroundColor =\n/*#__PURE__*/\n/**\n * Hides default white background\n */\nfunction () {\n  var _CDPPage_setTransparentBackgroundColor2 = _asyncToGenerator(function* () {\n    yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDefaultBackgroundColorOverride', {\n      color: {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0\n      }\n    });\n  });\n  function _CDPPage_setTransparentBackgroundColor() {\n    return _CDPPage_setTransparentBackgroundColor2.apply(this, arguments);\n  }\n  return _CDPPage_setTransparentBackgroundColor;\n}(), _CDPPage_sessionClosePromise = function _CDPPage_sessionClosePromise() {\n  if (!__classPrivateFieldGet(this, _CDPPage_disconnectPromise, \"f\")) {\n    __classPrivateFieldSet(this, _CDPPage_disconnectPromise, new Promise(fulfill => {\n      return __classPrivateFieldGet(this, _CDPPage_client, \"f\").once(CDPSessionEmittedEvents.Disconnected, () => {\n        return fulfill(new Error('Target closed'));\n      });\n    }), \"f\");\n  }\n  return __classPrivateFieldGet(this, _CDPPage_disconnectPromise, \"f\");\n}, _CDPPage_go = /*#__PURE__*/function () {\n  var _CDPPage_go2 = _asyncToGenerator(function* (delta, options) {\n    const history = yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n      return null;\n    }\n    const result = yield Promise.all([this.waitForNavigation(options), __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.navigateToHistoryEntry', {\n      entryId: entry.id\n    })]);\n    return result[0];\n  });\n  function _CDPPage_go(_x7, _x8) {\n    return _CDPPage_go2.apply(this, arguments);\n  }\n  return _CDPPage_go;\n}(), _CDPPage_screenshotTask = /*#__PURE__*/function () {\n  var _CDPPage_screenshotTask2 = _asyncToGenerator(function* (format, options = {}) {\n    var _a, _b;\n    yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Target.activateTarget', {\n      targetId: __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetId\n    });\n    let clip = options.clip ? processClip(options.clip) : undefined;\n    let captureBeyondViewport = (_a = options.captureBeyondViewport) !== null && _a !== void 0 ? _a : true;\n    const fromSurface = options.fromSurface;\n    if (options.fullPage) {\n      // Overwrite clip for full page.\n      clip = undefined;\n      if (!captureBeyondViewport) {\n        const metrics = yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.getLayoutMetrics');\n        // Fallback to `contentSize` in case of using Firefox.\n        const {\n          width,\n          height\n        } = metrics.cssContentSize || metrics.contentSize;\n        const {\n          isMobile = false,\n          deviceScaleFactor = 1,\n          isLandscape = false\n        } = __classPrivateFieldGet(this, _CDPPage_viewport, \"f\") || {};\n        const screenOrientation = isLandscape ? {\n          angle: 90,\n          type: 'landscapePrimary'\n        } : {\n          angle: 0,\n          type: 'portraitPrimary'\n        };\n        yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDeviceMetricsOverride', {\n          mobile: isMobile,\n          width,\n          height,\n          deviceScaleFactor,\n          screenOrientation\n        });\n      }\n    } else if (!clip) {\n      captureBeyondViewport = false;\n    }\n    const shouldSetDefaultBackground = options.omitBackground && (format === 'png' || format === 'webp');\n    if (shouldSetDefaultBackground) {\n      yield __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_setTransparentBackgroundColor).call(this);\n    }\n    const result = yield __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.captureScreenshot', {\n      format,\n      quality: options.quality,\n      clip: clip && {\n        ...clip,\n        scale: (_b = clip.scale) !== null && _b !== void 0 ? _b : 1\n      },\n      captureBeyondViewport,\n      fromSurface\n    });\n    if (shouldSetDefaultBackground) {\n      yield __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_resetDefaultBackgroundColor).call(this);\n    }\n    if (options.fullPage && __classPrivateFieldGet(this, _CDPPage_viewport, \"f\")) {\n      yield this.setViewport(__classPrivateFieldGet(this, _CDPPage_viewport, \"f\"));\n    }\n    if (options.encoding === 'base64') {\n      return result.data;\n    }\n    const buffer = Buffer.from(result.data, 'base64');\n    yield this._maybeWriteBufferToFile(options.path, buffer);\n    return buffer;\n    function processClip(clip) {\n      const x = Math.round(clip.x);\n      const y = Math.round(clip.y);\n      const width = Math.round(clip.width + clip.x - x);\n      const height = Math.round(clip.height + clip.y - y);\n      return {\n        x,\n        y,\n        width,\n        height,\n        scale: clip.scale\n      };\n    }\n  });\n  function _CDPPage_screenshotTask(_x9) {\n    return _CDPPage_screenshotTask2.apply(this, arguments);\n  }\n  return _CDPPage_screenshotTask;\n}();\nconst supportedMetrics = new Set(['Timestamp', 'Documents', 'Frames', 'JSEventListeners', 'Nodes', 'LayoutCount', 'RecalcStyleCount', 'LayoutDuration', 'RecalcStyleDuration', 'ScriptDuration', 'TaskDuration', 'JSHeapUsedSize', 'JSHeapTotalSize']);","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","_CDPPage_instances","_CDPPage_closed","_CDPPage_client","_CDPPage_target","_CDPPage_keyboard","_CDPPage_mouse","_CDPPage_timeoutSettings","_CDPPage_touchscreen","_CDPPage_accessibility","_CDPPage_frameManager","_CDPPage_emulationManager","_CDPPage_tracing","_CDPPage_bindings","_CDPPage_coverage","_CDPPage_javascriptEnabled","_CDPPage_viewport","_CDPPage_screenshotTaskQueue","_CDPPage_workers","_CDPPage_fileChooserPromises","_CDPPage_disconnectPromise","_CDPPage_userDragInterceptionEnabled","_CDPPage_onDetachedFromTarget","_CDPPage_onAttachedToTarget","_CDPPage_initialize","_CDPPage_onFileChooser","_CDPPage_onTargetCrashed","_CDPPage_onLogEntryAdded","_CDPPage_emitMetrics","_CDPPage_buildMetricsObject","_CDPPage_handleException","_CDPPage_onConsoleAPI","_CDPPage_onBindingCalled","_CDPPage_addConsoleMessage","_CDPPage_onDialog","_CDPPage_resetDefaultBackgroundColor","_CDPPage_setTransparentBackgroundColor","_CDPPage_sessionClosePromise","_CDPPage_go","_CDPPage_screenshotTask","Page","assert","createDeferredPromise","isErrorLike","Accessibility","Binding","CDPSessionEmittedEvents","isTargetClosedError","ConsoleMessage","Coverage","Dialog","EmulationManager","FileChooser","FrameManager","FrameManagerEmittedEvents","Keyboard","Mouse","Touchscreen","MAIN_WORLD","NetworkManagerEmittedEvents","TimeoutSettings","Tracing","createJSHandle","debugError","evaluationString","getExceptionMessage","getReadableAsBuffer","getReadableFromProtocolStream","isString","pageBindingInitString","releaseObject","valueFromRemoteObject","waitForEvent","waitWithTimeout","WebWorker","CDPPage","_create","client","target","ignoreHTTPSErrors","defaultViewport","screenshotTaskQueue","page","setViewport","err","constructor","add","Map","Set","_a","sessionId","_session","id","worker","delete","emit","createdTarget","onAttachedToTarget","_getTargetInfo","type","session","url","bind","_targetManager","addTargetInterceptor","on","FrameAttached","event","FrameDetached","FrameNavigated","networkManager","Request","RequestServedFromCache","Response","RequestFailed","RequestFinished","exception","exceptionDetails","_isClosedPromise","then","removeTargetInterceptor","off","_client","isDragInterceptionEnabled","isJavaScriptEnabled","waitForFileChooser","options","needsEnable","size","timeout","promise","message","enablePromise","send","enabled","Promise","all","result","catch","error","setGeolocation","longitude","latitude","accuracy","Error","browser","browserContext","mainFrame","keyboard","touchscreen","coverage","tracing","accessibility","frames","workers","Array","from","values","setRequestInterception","setDragInterception","setOfflineMode","emulateNetworkConditions","networkConditions","setDefaultNavigationTimeout","setDefaultTimeout","getDefaultTimeout","$","selector","$$","evaluateHandle","pageFunction","args","context","executionContext","queryObjects","prototypeHandle","disposed","response","prototypeObjectId","objects","$eval","$$eval","$x","expression","cookies","urls","originalCookies","length","unsupportedCookieAttributes","filterUnsupportedAttributes","cookie","attr","map","deleteCookie","pageURL","item","Object","assign","startsWith","setCookie","startsWithHTTP","items","name","String","prototype","addScriptTag","addStyleTag","exposeFunction","pptrFunction","binding","default","source","frame","evaluate","authenticate","credentials","setExtraHTTPHeaders","headers","setUserAgent","userAgent","userAgentMetadata","metrics","content","setContent","html","goto","reload","waitForNavigation","waitForRequest","urlOrPredicate","request","waitForResponse","waitForNetworkIdle","idleTime","idlePromise","abortRejectCallback","abortPromise","_","reject","idleTimer","cleanup","clearTimeout","numRequestsInProgress","setTimeout","resolve","eventHandler","listenToEvent","eventPromises","race","r","waitForFrame","predicate","eventRace","goBack","goForward","bringToFront","setJavaScriptEnabled","setBypassCSP","emulateMediaType","undefined","media","emulateCPUThrottling","factor","rate","emulateMediaFeatures","features","isArray","mediaFeature","test","emulateTimezone","timezoneId","includes","emulateIdleState","overrides","isUserActive","isScreenUnlocked","emulateVisionDeficiency","visionDeficiencies","viewport","needsReload","emulateViewport","evaluateOnNewDocument","setCacheEnabled","screenshot","screenshotType","path","filePath","extension","slice","lastIndexOf","toLowerCase","quality","Number","isInteger","clip","fullPage","x","y","width","height","postTask","createPDFStream","landscape","displayHeaderFooter","headerTemplate","footerTemplate","printBackground","scale","paperWidth","paperHeight","margin","pageRanges","preferCSSPageSize","omitBackground","_getPDFOptions","printCommandPromise","transferMode","marginTop","top","marginBottom","bottom","marginLeft","left","marginRight","right","stream","pdf","readable","buffer","title","close","runBeforeUnload","connection","targetId","_targetId","isClosed","mouse","click","focus","hover","select","tap","text","waitForTimeout","milliseconds","waitForSelector","waitForXPath","xpath","waitForFunction","waitForDevicePrompt","WeakMap","WeakSet","initialize","frameId","handle","worlds","adoptBackendNode","backendNodeId","fileChooser","clear","level","lineNumber","entry","arg","metric","supportedMetrics","stack","executionContextId","getExecutionContextById","JSON","stringify","stackTrace","payload","parse","seq","isTrivial","executionContextById","run","eventType","listenerCount","forEach","dispose","textTokens","remoteObject","objectId","push","toString","stackTraceLocations","callFrame","callFrames","columnNumber","join","dialogType","validDialogTypes","dialog","defaultPrompt","color","g","b","a","fulfill","once","Disconnected","delta","history","entries","currentIndex","entryId","format","_b","processClip","captureBeyondViewport","fromSurface","cssContentSize","contentSize","isMobile","deviceScaleFactor","isLandscape","screenOrientation","angle","mobile","shouldSetDefaultBackground","encoding","data","Buffer","_maybeWriteBufferToFile","Math","round"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/Page.js"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _CDPPage_instances, _CDPPage_closed, _CDPPage_client, _CDPPage_target, _CDPPage_keyboard, _CDPPage_mouse, _CDPPage_timeoutSettings, _CDPPage_touchscreen, _CDPPage_accessibility, _CDPPage_frameManager, _CDPPage_emulationManager, _CDPPage_tracing, _CDPPage_bindings, _CDPPage_coverage, _CDPPage_javascriptEnabled, _CDPPage_viewport, _CDPPage_screenshotTaskQueue, _CDPPage_workers, _CDPPage_fileChooserPromises, _CDPPage_disconnectPromise, _CDPPage_userDragInterceptionEnabled, _CDPPage_onDetachedFromTarget, _CDPPage_onAttachedToTarget, _CDPPage_initialize, _CDPPage_onFileChooser, _CDPPage_onTargetCrashed, _CDPPage_onLogEntryAdded, _CDPPage_emitMetrics, _CDPPage_buildMetricsObject, _CDPPage_handleException, _CDPPage_onConsoleAPI, _CDPPage_onBindingCalled, _CDPPage_addConsoleMessage, _CDPPage_onDialog, _CDPPage_resetDefaultBackgroundColor, _CDPPage_setTransparentBackgroundColor, _CDPPage_sessionClosePromise, _CDPPage_go, _CDPPage_screenshotTask;\nimport { Page, } from '../api/Page.js';\nimport { assert } from '../util/assert.js';\nimport { createDeferredPromise, } from '../util/DeferredPromise.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { Accessibility } from './Accessibility.js';\nimport { Binding } from './Binding.js';\nimport { CDPSessionEmittedEvents, isTargetClosedError, } from './Connection.js';\nimport { ConsoleMessage } from './ConsoleMessage.js';\nimport { Coverage } from './Coverage.js';\nimport { Dialog } from './Dialog.js';\nimport { EmulationManager } from './EmulationManager.js';\nimport { FileChooser } from './FileChooser.js';\nimport { FrameManager, FrameManagerEmittedEvents } from './FrameManager.js';\nimport { Keyboard, Mouse, Touchscreen } from './Input.js';\nimport { MAIN_WORLD } from './IsolatedWorlds.js';\nimport { NetworkManagerEmittedEvents, } from './NetworkManager.js';\nimport { TimeoutSettings } from './TimeoutSettings.js';\nimport { Tracing } from './Tracing.js';\nimport { createJSHandle, debugError, evaluationString, getExceptionMessage, getReadableAsBuffer, getReadableFromProtocolStream, isString, pageBindingInitString, releaseObject, valueFromRemoteObject, waitForEvent, waitWithTimeout, } from './util.js';\nimport { WebWorker } from './WebWorker.js';\n/**\n * @internal\n */\nexport class CDPPage extends Page {\n    /**\n     * @internal\n     */\n    static async _create(client, target, ignoreHTTPSErrors, defaultViewport, screenshotTaskQueue) {\n        const page = new CDPPage(client, target, ignoreHTTPSErrors, screenshotTaskQueue);\n        await __classPrivateFieldGet(page, _CDPPage_instances, \"m\", _CDPPage_initialize).call(page);\n        if (defaultViewport) {\n            try {\n                await page.setViewport(defaultViewport);\n            }\n            catch (err) {\n                if (isErrorLike(err) && isTargetClosedError(err)) {\n                    debugError(err);\n                }\n                else {\n                    throw err;\n                }\n            }\n        }\n        return page;\n    }\n    /**\n     * @internal\n     */\n    constructor(client, target, ignoreHTTPSErrors, screenshotTaskQueue) {\n        super();\n        _CDPPage_instances.add(this);\n        _CDPPage_closed.set(this, false);\n        _CDPPage_client.set(this, void 0);\n        _CDPPage_target.set(this, void 0);\n        _CDPPage_keyboard.set(this, void 0);\n        _CDPPage_mouse.set(this, void 0);\n        _CDPPage_timeoutSettings.set(this, new TimeoutSettings());\n        _CDPPage_touchscreen.set(this, void 0);\n        _CDPPage_accessibility.set(this, void 0);\n        _CDPPage_frameManager.set(this, void 0);\n        _CDPPage_emulationManager.set(this, void 0);\n        _CDPPage_tracing.set(this, void 0);\n        _CDPPage_bindings.set(this, new Map());\n        _CDPPage_coverage.set(this, void 0);\n        _CDPPage_javascriptEnabled.set(this, true);\n        _CDPPage_viewport.set(this, void 0);\n        _CDPPage_screenshotTaskQueue.set(this, void 0);\n        _CDPPage_workers.set(this, new Map());\n        _CDPPage_fileChooserPromises.set(this, new Set());\n        _CDPPage_disconnectPromise.set(this, void 0);\n        _CDPPage_userDragInterceptionEnabled.set(this, false);\n        _CDPPage_onDetachedFromTarget.set(this, (target) => {\n            var _a;\n            const sessionId = (_a = target._session()) === null || _a === void 0 ? void 0 : _a.id();\n            const worker = __classPrivateFieldGet(this, _CDPPage_workers, \"f\").get(sessionId);\n            if (!worker) {\n                return;\n            }\n            __classPrivateFieldGet(this, _CDPPage_workers, \"f\").delete(sessionId);\n            this.emit(\"workerdestroyed\" /* PageEmittedEvents.WorkerDestroyed */, worker);\n        });\n        _CDPPage_onAttachedToTarget.set(this, (createdTarget) => {\n            __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").onAttachedToTarget(createdTarget);\n            if (createdTarget._getTargetInfo().type === 'worker') {\n                const session = createdTarget._session();\n                assert(session);\n                const worker = new WebWorker(session, createdTarget.url(), __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_addConsoleMessage).bind(this), __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_handleException).bind(this));\n                __classPrivateFieldGet(this, _CDPPage_workers, \"f\").set(session.id(), worker);\n                this.emit(\"workercreated\" /* PageEmittedEvents.WorkerCreated */, worker);\n            }\n            if (createdTarget._session()) {\n                __classPrivateFieldGet(this, _CDPPage_target, \"f\")\n                    ._targetManager()\n                    .addTargetInterceptor(createdTarget._session(), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n            }\n        });\n        __classPrivateFieldSet(this, _CDPPage_client, client, \"f\");\n        __classPrivateFieldSet(this, _CDPPage_target, target, \"f\");\n        __classPrivateFieldSet(this, _CDPPage_keyboard, new Keyboard(client), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_mouse, new Mouse(client, __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_touchscreen, new Touchscreen(client, __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_accessibility, new Accessibility(client), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_frameManager, new FrameManager(client, this, ignoreHTTPSErrors, __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\")), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_emulationManager, new EmulationManager(client), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_tracing, new Tracing(client), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_coverage, new Coverage(client), \"f\");\n        __classPrivateFieldSet(this, _CDPPage_screenshotTaskQueue, screenshotTaskQueue, \"f\");\n        __classPrivateFieldSet(this, _CDPPage_viewport, null, \"f\");\n        __classPrivateFieldGet(this, _CDPPage_target, \"f\")\n            ._targetManager()\n            .addTargetInterceptor(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n        __classPrivateFieldGet(this, _CDPPage_target, \"f\")\n            ._targetManager()\n            .on(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, __classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, \"f\"));\n        __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameAttached, event => {\n            return this.emit(\"frameattached\" /* PageEmittedEvents.FrameAttached */, event);\n        });\n        __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameDetached, event => {\n            return this.emit(\"framedetached\" /* PageEmittedEvents.FrameDetached */, event);\n        });\n        __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").on(FrameManagerEmittedEvents.FrameNavigated, event => {\n            return this.emit(\"framenavigated\" /* PageEmittedEvents.FrameNavigated */, event);\n        });\n        const networkManager = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager;\n        networkManager.on(NetworkManagerEmittedEvents.Request, event => {\n            return this.emit(\"request\" /* PageEmittedEvents.Request */, event);\n        });\n        networkManager.on(NetworkManagerEmittedEvents.RequestServedFromCache, event => {\n            return this.emit(\"requestservedfromcache\" /* PageEmittedEvents.RequestServedFromCache */, event);\n        });\n        networkManager.on(NetworkManagerEmittedEvents.Response, event => {\n            return this.emit(\"response\" /* PageEmittedEvents.Response */, event);\n        });\n        networkManager.on(NetworkManagerEmittedEvents.RequestFailed, event => {\n            return this.emit(\"requestfailed\" /* PageEmittedEvents.RequestFailed */, event);\n        });\n        networkManager.on(NetworkManagerEmittedEvents.RequestFinished, event => {\n            return this.emit(\"requestfinished\" /* PageEmittedEvents.RequestFinished */, event);\n        });\n        client.on('Page.domContentEventFired', () => {\n            return this.emit(\"domcontentloaded\" /* PageEmittedEvents.DOMContentLoaded */);\n        });\n        client.on('Page.loadEventFired', () => {\n            return this.emit(\"load\" /* PageEmittedEvents.Load */);\n        });\n        client.on('Runtime.consoleAPICalled', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onConsoleAPI).call(this, event);\n        });\n        client.on('Runtime.bindingCalled', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onBindingCalled).call(this, event);\n        });\n        client.on('Page.javascriptDialogOpening', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onDialog).call(this, event);\n        });\n        client.on('Runtime.exceptionThrown', exception => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_handleException).call(this, exception.exceptionDetails);\n        });\n        client.on('Inspector.targetCrashed', () => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onTargetCrashed).call(this);\n        });\n        client.on('Performance.metrics', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_emitMetrics).call(this, event);\n        });\n        client.on('Log.entryAdded', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onLogEntryAdded).call(this, event);\n        });\n        client.on('Page.fileChooserOpened', event => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_onFileChooser).call(this, event);\n        });\n        __classPrivateFieldGet(this, _CDPPage_target, \"f\")._isClosedPromise.then(() => {\n            __classPrivateFieldGet(this, _CDPPage_target, \"f\")\n                ._targetManager()\n                .removeTargetInterceptor(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), __classPrivateFieldGet(this, _CDPPage_onAttachedToTarget, \"f\"));\n            __classPrivateFieldGet(this, _CDPPage_target, \"f\")\n                ._targetManager()\n                .off(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, __classPrivateFieldGet(this, _CDPPage_onDetachedFromTarget, \"f\"));\n            this.emit(\"close\" /* PageEmittedEvents.Close */);\n            __classPrivateFieldSet(this, _CDPPage_closed, true, \"f\");\n        });\n    }\n    /**\n     * @internal\n     */\n    _client() {\n        return __classPrivateFieldGet(this, _CDPPage_client, \"f\");\n    }\n    isDragInterceptionEnabled() {\n        return __classPrivateFieldGet(this, _CDPPage_userDragInterceptionEnabled, \"f\");\n    }\n    isJavaScriptEnabled() {\n        return __classPrivateFieldGet(this, _CDPPage_javascriptEnabled, \"f\");\n    }\n    waitForFileChooser(options = {}) {\n        const needsEnable = __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").size === 0;\n        const { timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout() } = options;\n        const promise = createDeferredPromise({\n            message: `Waiting for \\`FileChooser\\` failed: ${timeout}ms exceeded`,\n            timeout,\n        });\n        __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").add(promise);\n        let enablePromise;\n        if (needsEnable) {\n            enablePromise = __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.setInterceptFileChooserDialog', {\n                enabled: true,\n            });\n        }\n        return Promise.all([promise, enablePromise])\n            .then(([result]) => {\n            return result;\n        })\n            .catch(error => {\n            __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").delete(promise);\n            throw error;\n        });\n    }\n    async setGeolocation(options) {\n        const { longitude, latitude, accuracy = 0 } = options;\n        if (longitude < -180 || longitude > 180) {\n            throw new Error(`Invalid longitude \"${longitude}\": precondition -180 <= LONGITUDE <= 180 failed.`);\n        }\n        if (latitude < -90 || latitude > 90) {\n            throw new Error(`Invalid latitude \"${latitude}\": precondition -90 <= LATITUDE <= 90 failed.`);\n        }\n        if (accuracy < 0) {\n            throw new Error(`Invalid accuracy \"${accuracy}\": precondition 0 <= ACCURACY failed.`);\n        }\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setGeolocationOverride', {\n            longitude,\n            latitude,\n            accuracy,\n        });\n    }\n    target() {\n        return __classPrivateFieldGet(this, _CDPPage_target, \"f\");\n    }\n    browser() {\n        return __classPrivateFieldGet(this, _CDPPage_target, \"f\").browser();\n    }\n    browserContext() {\n        return __classPrivateFieldGet(this, _CDPPage_target, \"f\").browserContext();\n    }\n    mainFrame() {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame();\n    }\n    get keyboard() {\n        return __classPrivateFieldGet(this, _CDPPage_keyboard, \"f\");\n    }\n    get touchscreen() {\n        return __classPrivateFieldGet(this, _CDPPage_touchscreen, \"f\");\n    }\n    get coverage() {\n        return __classPrivateFieldGet(this, _CDPPage_coverage, \"f\");\n    }\n    get tracing() {\n        return __classPrivateFieldGet(this, _CDPPage_tracing, \"f\");\n    }\n    get accessibility() {\n        return __classPrivateFieldGet(this, _CDPPage_accessibility, \"f\");\n    }\n    frames() {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").frames();\n    }\n    workers() {\n        return Array.from(__classPrivateFieldGet(this, _CDPPage_workers, \"f\").values());\n    }\n    async setRequestInterception(value) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setRequestInterception(value);\n    }\n    async setDragInterception(enabled) {\n        __classPrivateFieldSet(this, _CDPPage_userDragInterceptionEnabled, enabled, \"f\");\n        return __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Input.setInterceptDrags', { enabled });\n    }\n    setOfflineMode(enabled) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setOfflineMode(enabled);\n    }\n    emulateNetworkConditions(networkConditions) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.emulateNetworkConditions(networkConditions);\n    }\n    setDefaultNavigationTimeout(timeout) {\n        __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").setDefaultNavigationTimeout(timeout);\n    }\n    setDefaultTimeout(timeout) {\n        __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").setDefaultTimeout(timeout);\n    }\n    getDefaultTimeout() {\n        return __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout();\n    }\n    async $(selector) {\n        return this.mainFrame().$(selector);\n    }\n    async $$(selector) {\n        return this.mainFrame().$$(selector);\n    }\n    async evaluateHandle(pageFunction, ...args) {\n        const context = await this.mainFrame().executionContext();\n        return context.evaluateHandle(pageFunction, ...args);\n    }\n    async queryObjects(prototypeHandle) {\n        const context = await this.mainFrame().executionContext();\n        assert(!prototypeHandle.disposed, 'Prototype JSHandle is disposed!');\n        assert(prototypeHandle.id, 'Prototype JSHandle must not be referencing primitive value');\n        const response = await context._client.send('Runtime.queryObjects', {\n            prototypeObjectId: prototypeHandle.id,\n        });\n        return createJSHandle(context, response.objects);\n    }\n    async $eval(selector, pageFunction, ...args) {\n        return this.mainFrame().$eval(selector, pageFunction, ...args);\n    }\n    async $$eval(selector, pageFunction, ...args) {\n        return this.mainFrame().$$eval(selector, pageFunction, ...args);\n    }\n    async $x(expression) {\n        return this.mainFrame().$x(expression);\n    }\n    async cookies(...urls) {\n        const originalCookies = (await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Network.getCookies', {\n            urls: urls.length ? urls : [this.url()],\n        })).cookies;\n        const unsupportedCookieAttributes = ['priority'];\n        const filterUnsupportedAttributes = (cookie) => {\n            for (const attr of unsupportedCookieAttributes) {\n                delete cookie[attr];\n            }\n            return cookie;\n        };\n        return originalCookies.map(filterUnsupportedAttributes);\n    }\n    async deleteCookie(...cookies) {\n        const pageURL = this.url();\n        for (const cookie of cookies) {\n            const item = Object.assign({}, cookie);\n            if (!cookie.url && pageURL.startsWith('http')) {\n                item.url = pageURL;\n            }\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Network.deleteCookies', item);\n        }\n    }\n    async setCookie(...cookies) {\n        const pageURL = this.url();\n        const startsWithHTTP = pageURL.startsWith('http');\n        const items = cookies.map(cookie => {\n            const item = Object.assign({}, cookie);\n            if (!item.url && startsWithHTTP) {\n                item.url = pageURL;\n            }\n            assert(item.url !== 'about:blank', `Blank page can not have cookie \"${item.name}\"`);\n            assert(!String.prototype.startsWith.call(item.url || '', 'data:'), `Data URL page can not have cookie \"${item.name}\"`);\n            return item;\n        });\n        await this.deleteCookie(...items);\n        if (items.length) {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Network.setCookies', { cookies: items });\n        }\n    }\n    async addScriptTag(options) {\n        return this.mainFrame().addScriptTag(options);\n    }\n    async addStyleTag(options) {\n        return this.mainFrame().addStyleTag(options);\n    }\n    async exposeFunction(name, pptrFunction) {\n        if (__classPrivateFieldGet(this, _CDPPage_bindings, \"f\").has(name)) {\n            throw new Error(`Failed to add page binding with name ${name}: window['${name}'] already exists!`);\n        }\n        let binding;\n        switch (typeof pptrFunction) {\n            case 'function':\n                binding = new Binding(name, pptrFunction);\n                break;\n            default:\n                binding = new Binding(name, pptrFunction.default);\n                break;\n        }\n        __classPrivateFieldGet(this, _CDPPage_bindings, \"f\").set(name, binding);\n        const expression = pageBindingInitString('exposedFun', name);\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Runtime.addBinding', { name: name });\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.addScriptToEvaluateOnNewDocument', {\n            source: expression,\n        });\n        await Promise.all(this.frames().map(frame => {\n            return frame.evaluate(expression).catch(debugError);\n        }));\n    }\n    async authenticate(credentials) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.authenticate(credentials);\n    }\n    async setExtraHTTPHeaders(headers) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setExtraHTTPHeaders(headers);\n    }\n    async setUserAgent(userAgent, userAgentMetadata) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setUserAgent(userAgent, userAgentMetadata);\n    }\n    async metrics() {\n        const response = await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Performance.getMetrics');\n        return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_buildMetricsObject).call(this, response.metrics);\n    }\n    url() {\n        return this.mainFrame().url();\n    }\n    async content() {\n        return await __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame().content();\n    }\n    async setContent(html, options = {}) {\n        await __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame().setContent(html, options);\n    }\n    async goto(url, options = {}) {\n        return await __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame().goto(url, options);\n    }\n    async reload(options) {\n        const result = await Promise.all([\n            this.waitForNavigation(options),\n            __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.reload'),\n        ]);\n        return result[0];\n    }\n    async waitForNavigation(options = {}) {\n        return await __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame().waitForNavigation(options);\n    }\n    async waitForRequest(urlOrPredicate, options = {}) {\n        const { timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout() } = options;\n        return waitForEvent(__classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager, NetworkManagerEmittedEvents.Request, async (request) => {\n            if (isString(urlOrPredicate)) {\n                return urlOrPredicate === request.url();\n            }\n            if (typeof urlOrPredicate === 'function') {\n                return !!(await urlOrPredicate(request));\n            }\n            return false;\n        }, timeout, __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(this));\n    }\n    async waitForResponse(urlOrPredicate, options = {}) {\n        const { timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout() } = options;\n        return waitForEvent(__classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager, NetworkManagerEmittedEvents.Response, async (response) => {\n            if (isString(urlOrPredicate)) {\n                return urlOrPredicate === response.url();\n            }\n            if (typeof urlOrPredicate === 'function') {\n                return !!(await urlOrPredicate(response));\n            }\n            return false;\n        }, timeout, __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(this));\n    }\n    async waitForNetworkIdle(options = {}) {\n        const { idleTime = 500, timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout() } = options;\n        const networkManager = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager;\n        const idlePromise = createDeferredPromise();\n        let abortRejectCallback;\n        const abortPromise = new Promise((_, reject) => {\n            abortRejectCallback = reject;\n        });\n        let idleTimer;\n        const cleanup = () => {\n            idleTimer && clearTimeout(idleTimer);\n            abortRejectCallback(new Error('abort'));\n        };\n        const evaluate = () => {\n            idleTimer && clearTimeout(idleTimer);\n            if (networkManager.numRequestsInProgress() === 0) {\n                idleTimer = setTimeout(idlePromise.resolve, idleTime);\n            }\n        };\n        evaluate();\n        const eventHandler = () => {\n            evaluate();\n            return false;\n        };\n        const listenToEvent = (event) => {\n            return waitForEvent(networkManager, event, eventHandler, timeout, abortPromise);\n        };\n        const eventPromises = [\n            listenToEvent(NetworkManagerEmittedEvents.Request),\n            listenToEvent(NetworkManagerEmittedEvents.Response),\n            listenToEvent(NetworkManagerEmittedEvents.RequestFailed),\n        ];\n        await Promise.race([\n            idlePromise,\n            ...eventPromises,\n            __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(this),\n        ]).then(r => {\n            cleanup();\n            return r;\n        }, error => {\n            cleanup();\n            throw error;\n        });\n    }\n    async waitForFrame(urlOrPredicate, options = {}) {\n        const { timeout = __classPrivateFieldGet(this, _CDPPage_timeoutSettings, \"f\").timeout() } = options;\n        let predicate;\n        if (isString(urlOrPredicate)) {\n            predicate = (frame) => {\n                return Promise.resolve(urlOrPredicate === frame.url());\n            };\n        }\n        else {\n            predicate = (frame) => {\n                const value = urlOrPredicate(frame);\n                if (typeof value === 'boolean') {\n                    return Promise.resolve(value);\n                }\n                return value;\n            };\n        }\n        const eventRace = Promise.race([\n            waitForEvent(__classPrivateFieldGet(this, _CDPPage_frameManager, \"f\"), FrameManagerEmittedEvents.FrameAttached, predicate, timeout, __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(this)),\n            waitForEvent(__classPrivateFieldGet(this, _CDPPage_frameManager, \"f\"), FrameManagerEmittedEvents.FrameNavigated, predicate, timeout, __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_sessionClosePromise).call(this)),\n            ...this.frames().map(async (frame) => {\n                if (await predicate(frame)) {\n                    return frame;\n                }\n                return await eventRace;\n            }),\n        ]);\n        return eventRace;\n    }\n    async goBack(options = {}) {\n        return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_go).call(this, -1, options);\n    }\n    async goForward(options = {}) {\n        return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_go).call(this, +1, options);\n    }\n    async bringToFront() {\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.bringToFront');\n    }\n    async setJavaScriptEnabled(enabled) {\n        if (__classPrivateFieldGet(this, _CDPPage_javascriptEnabled, \"f\") === enabled) {\n            return;\n        }\n        __classPrivateFieldSet(this, _CDPPage_javascriptEnabled, enabled, \"f\");\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setScriptExecutionDisabled', {\n            value: !enabled,\n        });\n    }\n    async setBypassCSP(enabled) {\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.setBypassCSP', { enabled });\n    }\n    async emulateMediaType(type) {\n        assert(type === 'screen' ||\n            type === 'print' ||\n            (type !== null && type !== void 0 ? type : undefined) === undefined, 'Unsupported media type: ' + type);\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {\n            media: type || '',\n        });\n    }\n    async emulateCPUThrottling(factor) {\n        assert(factor === null || factor >= 1, 'Throttling rate should be greater or equal to 1');\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setCPUThrottlingRate', {\n            rate: factor !== null ? factor : 1,\n        });\n    }\n    async emulateMediaFeatures(features) {\n        if (!features) {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {});\n        }\n        if (Array.isArray(features)) {\n            for (const mediaFeature of features) {\n                const name = mediaFeature.name;\n                assert(/^(?:prefers-(?:color-scheme|reduced-motion)|color-gamut)$/.test(name), 'Unsupported media feature: ' + name);\n            }\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setEmulatedMedia', {\n                features: features,\n            });\n        }\n    }\n    async emulateTimezone(timezoneId) {\n        try {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setTimezoneOverride', {\n                timezoneId: timezoneId || '',\n            });\n        }\n        catch (error) {\n            if (isErrorLike(error) && error.message.includes('Invalid timezone')) {\n                throw new Error(`Invalid timezone ID: ${timezoneId}`);\n            }\n            throw error;\n        }\n    }\n    async emulateIdleState(overrides) {\n        if (overrides) {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setIdleOverride', {\n                isUserActive: overrides.isUserActive,\n                isScreenUnlocked: overrides.isScreenUnlocked,\n            });\n        }\n        else {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.clearIdleOverride');\n        }\n    }\n    async emulateVisionDeficiency(type) {\n        const visionDeficiencies = new Set([\n            'none',\n            'achromatopsia',\n            'blurredVision',\n            'deuteranopia',\n            'protanopia',\n            'tritanopia',\n        ]);\n        try {\n            assert(!type || visionDeficiencies.has(type), `Unsupported vision deficiency: ${type}`);\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setEmulatedVisionDeficiency', {\n                type: type || 'none',\n            });\n        }\n        catch (error) {\n            throw error;\n        }\n    }\n    async setViewport(viewport) {\n        const needsReload = await __classPrivateFieldGet(this, _CDPPage_emulationManager, \"f\").emulateViewport(viewport);\n        __classPrivateFieldSet(this, _CDPPage_viewport, viewport, \"f\");\n        if (needsReload) {\n            await this.reload();\n        }\n    }\n    viewport() {\n        return __classPrivateFieldGet(this, _CDPPage_viewport, \"f\");\n    }\n    async evaluate(pageFunction, ...args) {\n        return __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").mainFrame().evaluate(pageFunction, ...args);\n    }\n    async evaluateOnNewDocument(pageFunction, ...args) {\n        const source = evaluationString(pageFunction, ...args);\n        await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.addScriptToEvaluateOnNewDocument', {\n            source,\n        });\n    }\n    async setCacheEnabled(enabled = true) {\n        await __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").networkManager.setCacheEnabled(enabled);\n    }\n    async screenshot(options = {}) {\n        let screenshotType = \"png\" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;\n        // options.type takes precedence over inferring the type from options.path\n        // because it may be a 0-length file with no extension created beforehand\n        // (i.e. as a temp file).\n        if (options.type) {\n            screenshotType =\n                options.type;\n        }\n        else if (options.path) {\n            const filePath = options.path;\n            const extension = filePath\n                .slice(filePath.lastIndexOf('.') + 1)\n                .toLowerCase();\n            switch (extension) {\n                case 'png':\n                    screenshotType = \"png\" /* Protocol.Page.CaptureScreenshotRequestFormat.Png */;\n                    break;\n                case 'jpeg':\n                case 'jpg':\n                    screenshotType = \"jpeg\" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */;\n                    break;\n                case 'webp':\n                    screenshotType = \"webp\" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */;\n                    break;\n                default:\n                    throw new Error(`Unsupported screenshot type for extension \\`.${extension}\\``);\n            }\n        }\n        if (options.quality) {\n            assert(screenshotType === \"jpeg\" /* Protocol.Page.CaptureScreenshotRequestFormat.Jpeg */ ||\n                screenshotType === \"webp\" /* Protocol.Page.CaptureScreenshotRequestFormat.Webp */, 'options.quality is unsupported for the ' +\n                screenshotType +\n                ' screenshots');\n            assert(typeof options.quality === 'number', 'Expected options.quality to be a number but found ' +\n                typeof options.quality);\n            assert(Number.isInteger(options.quality), 'Expected options.quality to be an integer');\n            assert(options.quality >= 0 && options.quality <= 100, 'Expected options.quality to be between 0 and 100 (inclusive), got ' +\n                options.quality);\n        }\n        assert(!options.clip || !options.fullPage, 'options.clip and options.fullPage are exclusive');\n        if (options.clip) {\n            assert(typeof options.clip.x === 'number', 'Expected options.clip.x to be a number but found ' +\n                typeof options.clip.x);\n            assert(typeof options.clip.y === 'number', 'Expected options.clip.y to be a number but found ' +\n                typeof options.clip.y);\n            assert(typeof options.clip.width === 'number', 'Expected options.clip.width to be a number but found ' +\n                typeof options.clip.width);\n            assert(typeof options.clip.height === 'number', 'Expected options.clip.height to be a number but found ' +\n                typeof options.clip.height);\n            assert(options.clip.width !== 0, 'Expected options.clip.width not to be 0.');\n            assert(options.clip.height !== 0, 'Expected options.clip.height not to be 0.');\n        }\n        return __classPrivateFieldGet(this, _CDPPage_screenshotTaskQueue, \"f\").postTask(() => {\n            return __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_screenshotTask).call(this, screenshotType, options);\n        });\n    }\n    async createPDFStream(options = {}) {\n        const { landscape, displayHeaderFooter, headerTemplate, footerTemplate, printBackground, scale, width: paperWidth, height: paperHeight, margin, pageRanges, preferCSSPageSize, omitBackground, timeout, } = this._getPDFOptions(options);\n        if (omitBackground) {\n            await __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_setTransparentBackgroundColor).call(this);\n        }\n        const printCommandPromise = __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.printToPDF', {\n            transferMode: 'ReturnAsStream',\n            landscape,\n            displayHeaderFooter,\n            headerTemplate,\n            footerTemplate,\n            printBackground,\n            scale,\n            paperWidth,\n            paperHeight,\n            marginTop: margin.top,\n            marginBottom: margin.bottom,\n            marginLeft: margin.left,\n            marginRight: margin.right,\n            pageRanges,\n            preferCSSPageSize,\n        });\n        const result = await waitWithTimeout(printCommandPromise, 'Page.printToPDF', timeout);\n        if (omitBackground) {\n            await __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_resetDefaultBackgroundColor).call(this);\n        }\n        assert(result.stream, '`stream` is missing from `Page.printToPDF');\n        return getReadableFromProtocolStream(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), result.stream);\n    }\n    async pdf(options = {}) {\n        const { path = undefined } = options;\n        const readable = await this.createPDFStream(options);\n        const buffer = await getReadableAsBuffer(readable, path);\n        assert(buffer, 'Could not create buffer');\n        return buffer;\n    }\n    async title() {\n        return this.mainFrame().title();\n    }\n    async close(options = { runBeforeUnload: undefined }) {\n        const connection = __classPrivateFieldGet(this, _CDPPage_client, \"f\").connection();\n        assert(connection, 'Protocol error: Connection closed. Most likely the page has been closed.');\n        const runBeforeUnload = !!options.runBeforeUnload;\n        if (runBeforeUnload) {\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.close');\n        }\n        else {\n            await connection.send('Target.closeTarget', {\n                targetId: __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetId,\n            });\n            await __classPrivateFieldGet(this, _CDPPage_target, \"f\")._isClosedPromise;\n        }\n    }\n    isClosed() {\n        return __classPrivateFieldGet(this, _CDPPage_closed, \"f\");\n    }\n    get mouse() {\n        return __classPrivateFieldGet(this, _CDPPage_mouse, \"f\");\n    }\n    click(selector, options = {}) {\n        return this.mainFrame().click(selector, options);\n    }\n    focus(selector) {\n        return this.mainFrame().focus(selector);\n    }\n    hover(selector) {\n        return this.mainFrame().hover(selector);\n    }\n    select(selector, ...values) {\n        return this.mainFrame().select(selector, ...values);\n    }\n    tap(selector) {\n        return this.mainFrame().tap(selector);\n    }\n    type(selector, text, options) {\n        return this.mainFrame().type(selector, text, options);\n    }\n    waitForTimeout(milliseconds) {\n        return this.mainFrame().waitForTimeout(milliseconds);\n    }\n    async waitForSelector(selector, options = {}) {\n        return await this.mainFrame().waitForSelector(selector, options);\n    }\n    waitForXPath(xpath, options = {}) {\n        return this.mainFrame().waitForXPath(xpath, options);\n    }\n    waitForFunction(pageFunction, options = {}, ...args) {\n        return this.mainFrame().waitForFunction(pageFunction, options, ...args);\n    }\n    /**\n     * This method is typically coupled with an action that triggers a device\n     * request from an api such as WebBluetooth.\n     *\n     * :::caution\n     *\n     * This must be called before the device request is made. It will not return a\n     * currently active device prompt.\n     *\n     * :::\n     *\n     * @example\n     *\n     * ```ts\n     * const [devicePrompt] = Promise.all([\n     *   page.waitForDevicePrompt(),\n     *   page.click('#connect-bluetooth'),\n     * ]);\n     * await devicePrompt.select(\n     *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n     * );\n     * ```\n     */\n    waitForDevicePrompt(options = {}) {\n        return this.mainFrame().waitForDevicePrompt(options);\n    }\n}\n_CDPPage_closed = new WeakMap(), _CDPPage_client = new WeakMap(), _CDPPage_target = new WeakMap(), _CDPPage_keyboard = new WeakMap(), _CDPPage_mouse = new WeakMap(), _CDPPage_timeoutSettings = new WeakMap(), _CDPPage_touchscreen = new WeakMap(), _CDPPage_accessibility = new WeakMap(), _CDPPage_frameManager = new WeakMap(), _CDPPage_emulationManager = new WeakMap(), _CDPPage_tracing = new WeakMap(), _CDPPage_bindings = new WeakMap(), _CDPPage_coverage = new WeakMap(), _CDPPage_javascriptEnabled = new WeakMap(), _CDPPage_viewport = new WeakMap(), _CDPPage_screenshotTaskQueue = new WeakMap(), _CDPPage_workers = new WeakMap(), _CDPPage_fileChooserPromises = new WeakMap(), _CDPPage_disconnectPromise = new WeakMap(), _CDPPage_userDragInterceptionEnabled = new WeakMap(), _CDPPage_onDetachedFromTarget = new WeakMap(), _CDPPage_onAttachedToTarget = new WeakMap(), _CDPPage_instances = new WeakSet(), _CDPPage_initialize = async function _CDPPage_initialize() {\n    try {\n        await Promise.all([\n            __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").initialize(),\n            __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Performance.enable'),\n            __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Log.enable'),\n        ]);\n    }\n    catch (err) {\n        if (isErrorLike(err) && isTargetClosedError(err)) {\n            debugError(err);\n        }\n        else {\n            throw err;\n        }\n    }\n}, _CDPPage_onFileChooser = async function _CDPPage_onFileChooser(event) {\n    if (!__classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").size) {\n        return;\n    }\n    const frame = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").frame(event.frameId);\n    assert(frame, 'This should never happen.');\n    // This is guaranteed to be an HTMLInputElement handle by the event.\n    const handle = (await frame.worlds[MAIN_WORLD].adoptBackendNode(event.backendNodeId));\n    const fileChooser = new FileChooser(handle, event);\n    for (const promise of __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\")) {\n        promise.resolve(fileChooser);\n    }\n    __classPrivateFieldGet(this, _CDPPage_fileChooserPromises, \"f\").clear();\n}, _CDPPage_onTargetCrashed = function _CDPPage_onTargetCrashed() {\n    this.emit('error', new Error('Page crashed!'));\n}, _CDPPage_onLogEntryAdded = function _CDPPage_onLogEntryAdded(event) {\n    const { level, text, args, source, url, lineNumber } = event.entry;\n    if (args) {\n        args.map(arg => {\n            return releaseObject(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), arg);\n        });\n    }\n    if (source !== 'worker') {\n        this.emit(\"console\" /* PageEmittedEvents.Console */, new ConsoleMessage(level, text, [], [{ url, lineNumber }]));\n    }\n}, _CDPPage_emitMetrics = function _CDPPage_emitMetrics(event) {\n    this.emit(\"metrics\" /* PageEmittedEvents.Metrics */, {\n        title: event.title,\n        metrics: __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_buildMetricsObject).call(this, event.metrics),\n    });\n}, _CDPPage_buildMetricsObject = function _CDPPage_buildMetricsObject(metrics) {\n    const result = {};\n    for (const metric of metrics || []) {\n        if (supportedMetrics.has(metric.name)) {\n            result[metric.name] = metric.value;\n        }\n    }\n    return result;\n}, _CDPPage_handleException = function _CDPPage_handleException(exceptionDetails) {\n    const message = getExceptionMessage(exceptionDetails);\n    const err = new Error(message);\n    err.stack = ''; // Don't report clientside error with a node stack attached\n    this.emit(\"pageerror\" /* PageEmittedEvents.PageError */, err);\n}, _CDPPage_onConsoleAPI = async function _CDPPage_onConsoleAPI(event) {\n    if (event.executionContextId === 0) {\n        // DevTools protocol stores the last 1000 console messages. These\n        // messages are always reported even for removed execution contexts. In\n        // this case, they are marked with executionContextId = 0 and are\n        // reported upon enabling Runtime agent.\n        //\n        // Ignore these messages since:\n        // - there's no execution context we can use to operate with message\n        //   arguments\n        // - these messages are reported before Puppeteer clients can subscribe\n        //   to the 'console'\n        //   page event.\n        //\n        // @see https://github.com/puppeteer/puppeteer/issues/3865\n        return;\n    }\n    const context = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").getExecutionContextById(event.executionContextId, __classPrivateFieldGet(this, _CDPPage_client, \"f\"));\n    if (!context) {\n        debugError(new Error(`ExecutionContext not found for a console message: ${JSON.stringify(event)}`));\n        return;\n    }\n    const values = event.args.map(arg => {\n        return createJSHandle(context, arg);\n    });\n    __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_addConsoleMessage).call(this, event.type, values, event.stackTrace);\n}, _CDPPage_onBindingCalled = async function _CDPPage_onBindingCalled(event) {\n    let payload;\n    try {\n        payload = JSON.parse(event.payload);\n    }\n    catch {\n        // The binding was either called by something in the page or it was\n        // called before our wrapper was initialized.\n        return;\n    }\n    const { type, name, seq, args, isTrivial } = payload;\n    if (type !== 'exposedFun') {\n        return;\n    }\n    const context = __classPrivateFieldGet(this, _CDPPage_frameManager, \"f\").executionContextById(event.executionContextId, __classPrivateFieldGet(this, _CDPPage_client, \"f\"));\n    if (!context) {\n        return;\n    }\n    const binding = __classPrivateFieldGet(this, _CDPPage_bindings, \"f\").get(name);\n    await (binding === null || binding === void 0 ? void 0 : binding.run(context, seq, args, isTrivial));\n}, _CDPPage_addConsoleMessage = function _CDPPage_addConsoleMessage(eventType, args, stackTrace) {\n    if (!this.listenerCount(\"console\" /* PageEmittedEvents.Console */)) {\n        args.forEach(arg => {\n            return arg.dispose();\n        });\n        return;\n    }\n    const textTokens = [];\n    for (const arg of args) {\n        const remoteObject = arg.remoteObject();\n        if (remoteObject.objectId) {\n            textTokens.push(arg.toString());\n        }\n        else {\n            textTokens.push(valueFromRemoteObject(remoteObject));\n        }\n    }\n    const stackTraceLocations = [];\n    if (stackTrace) {\n        for (const callFrame of stackTrace.callFrames) {\n            stackTraceLocations.push({\n                url: callFrame.url,\n                lineNumber: callFrame.lineNumber,\n                columnNumber: callFrame.columnNumber,\n            });\n        }\n    }\n    const message = new ConsoleMessage(eventType, textTokens.join(' '), args, stackTraceLocations);\n    this.emit(\"console\" /* PageEmittedEvents.Console */, message);\n}, _CDPPage_onDialog = function _CDPPage_onDialog(event) {\n    let dialogType = null;\n    const validDialogTypes = new Set([\n        'alert',\n        'confirm',\n        'prompt',\n        'beforeunload',\n    ]);\n    if (validDialogTypes.has(event.type)) {\n        dialogType = event.type;\n    }\n    assert(dialogType, 'Unknown javascript dialog type: ' + event.type);\n    const dialog = new Dialog(__classPrivateFieldGet(this, _CDPPage_client, \"f\"), dialogType, event.message, event.defaultPrompt);\n    this.emit(\"dialog\" /* PageEmittedEvents.Dialog */, dialog);\n}, _CDPPage_resetDefaultBackgroundColor = \n/**\n * Resets default white background\n */\nasync function _CDPPage_resetDefaultBackgroundColor() {\n    await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDefaultBackgroundColorOverride');\n}, _CDPPage_setTransparentBackgroundColor = \n/**\n * Hides default white background\n */\nasync function _CDPPage_setTransparentBackgroundColor() {\n    await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDefaultBackgroundColorOverride', {\n        color: { r: 0, g: 0, b: 0, a: 0 },\n    });\n}, _CDPPage_sessionClosePromise = function _CDPPage_sessionClosePromise() {\n    if (!__classPrivateFieldGet(this, _CDPPage_disconnectPromise, \"f\")) {\n        __classPrivateFieldSet(this, _CDPPage_disconnectPromise, new Promise(fulfill => {\n            return __classPrivateFieldGet(this, _CDPPage_client, \"f\").once(CDPSessionEmittedEvents.Disconnected, () => {\n                return fulfill(new Error('Target closed'));\n            });\n        }), \"f\");\n    }\n    return __classPrivateFieldGet(this, _CDPPage_disconnectPromise, \"f\");\n}, _CDPPage_go = async function _CDPPage_go(delta, options) {\n    const history = await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.getNavigationHistory');\n    const entry = history.entries[history.currentIndex + delta];\n    if (!entry) {\n        return null;\n    }\n    const result = await Promise.all([\n        this.waitForNavigation(options),\n        __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.navigateToHistoryEntry', { entryId: entry.id }),\n    ]);\n    return result[0];\n}, _CDPPage_screenshotTask = async function _CDPPage_screenshotTask(format, options = {}) {\n    var _a, _b;\n    await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Target.activateTarget', {\n        targetId: __classPrivateFieldGet(this, _CDPPage_target, \"f\")._targetId,\n    });\n    let clip = options.clip ? processClip(options.clip) : undefined;\n    let captureBeyondViewport = (_a = options.captureBeyondViewport) !== null && _a !== void 0 ? _a : true;\n    const fromSurface = options.fromSurface;\n    if (options.fullPage) {\n        // Overwrite clip for full page.\n        clip = undefined;\n        if (!captureBeyondViewport) {\n            const metrics = await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.getLayoutMetrics');\n            // Fallback to `contentSize` in case of using Firefox.\n            const { width, height } = metrics.cssContentSize || metrics.contentSize;\n            const { isMobile = false, deviceScaleFactor = 1, isLandscape = false, } = __classPrivateFieldGet(this, _CDPPage_viewport, \"f\") || {};\n            const screenOrientation = isLandscape\n                ? { angle: 90, type: 'landscapePrimary' }\n                : { angle: 0, type: 'portraitPrimary' };\n            await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Emulation.setDeviceMetricsOverride', {\n                mobile: isMobile,\n                width,\n                height,\n                deviceScaleFactor,\n                screenOrientation,\n            });\n        }\n    }\n    else if (!clip) {\n        captureBeyondViewport = false;\n    }\n    const shouldSetDefaultBackground = options.omitBackground && (format === 'png' || format === 'webp');\n    if (shouldSetDefaultBackground) {\n        await __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_setTransparentBackgroundColor).call(this);\n    }\n    const result = await __classPrivateFieldGet(this, _CDPPage_client, \"f\").send('Page.captureScreenshot', {\n        format,\n        quality: options.quality,\n        clip: clip && {\n            ...clip,\n            scale: (_b = clip.scale) !== null && _b !== void 0 ? _b : 1,\n        },\n        captureBeyondViewport,\n        fromSurface,\n    });\n    if (shouldSetDefaultBackground) {\n        await __classPrivateFieldGet(this, _CDPPage_instances, \"m\", _CDPPage_resetDefaultBackgroundColor).call(this);\n    }\n    if (options.fullPage && __classPrivateFieldGet(this, _CDPPage_viewport, \"f\")) {\n        await this.setViewport(__classPrivateFieldGet(this, _CDPPage_viewport, \"f\"));\n    }\n    if (options.encoding === 'base64') {\n        return result.data;\n    }\n    const buffer = Buffer.from(result.data, 'base64');\n    await this._maybeWriteBufferToFile(options.path, buffer);\n    return buffer;\n    function processClip(clip) {\n        const x = Math.round(clip.x);\n        const y = Math.round(clip.y);\n        const width = Math.round(clip.width + clip.x - x);\n        const height = Math.round(clip.height + clip.y - y);\n        return { x, y, width, height, scale: clip.scale };\n    }\n};\nconst supportedMetrics = new Set([\n    'Timestamp',\n    'Documents',\n    'Frames',\n    'JSEventListeners',\n    'Nodes',\n    'LayoutCount',\n    'RecalcStyleCount',\n    'LayoutDuration',\n    'RecalcStyleDuration',\n    'ScriptDuration',\n    'TaskDuration',\n    'JSHeapUsedSize',\n    'JSHeapTotalSize',\n]);\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,sBAAsB,GAAI,IAAI,IAAI,IAAI,CAACA,sBAAsB,IAAK,UAAUC,QAAQ,EAAEC,KAAK,EAAEC,IAAI,EAAEC,CAAC,EAAE;EACtG,IAAID,IAAI,KAAK,GAAG,IAAI,CAACC,CAAC,EAAE,MAAM,IAAIC,SAAS,CAAC,+CAA+C,CAAC;EAC5F,IAAI,OAAOH,KAAK,KAAK,UAAU,GAAGD,QAAQ,KAAKC,KAAK,IAAI,CAACE,CAAC,GAAG,CAACF,KAAK,CAACI,GAAG,CAACL,QAAQ,CAAC,EAAE,MAAM,IAAII,SAAS,CAAC,0EAA0E,CAAC;EAClL,OAAOF,IAAI,KAAK,GAAG,GAAGC,CAAC,GAAGD,IAAI,KAAK,GAAG,GAAGC,CAAC,CAACG,IAAI,CAACN,QAAQ,CAAC,GAAGG,CAAC,GAAGA,CAAC,CAACI,KAAK,GAAGN,KAAK,CAACO,GAAG,CAACR,QAAQ,CAAC;AACjG,CAAC;AACD,IAAIS,sBAAsB,GAAI,IAAI,IAAI,IAAI,CAACA,sBAAsB,IAAK,UAAUT,QAAQ,EAAEC,KAAK,EAAEM,KAAK,EAAEL,IAAI,EAAEC,CAAC,EAAE;EAC7G,IAAID,IAAI,KAAK,GAAG,EAAE,MAAM,IAAIE,SAAS,CAAC,gCAAgC,CAAC;EACvE,IAAIF,IAAI,KAAK,GAAG,IAAI,CAACC,CAAC,EAAE,MAAM,IAAIC,SAAS,CAAC,+CAA+C,CAAC;EAC5F,IAAI,OAAOH,KAAK,KAAK,UAAU,GAAGD,QAAQ,KAAKC,KAAK,IAAI,CAACE,CAAC,GAAG,CAACF,KAAK,CAACI,GAAG,CAACL,QAAQ,CAAC,EAAE,MAAM,IAAII,SAAS,CAAC,yEAAyE,CAAC;EACjL,OAAQF,IAAI,KAAK,GAAG,GAAGC,CAAC,CAACG,IAAI,CAACN,QAAQ,EAAEO,KAAK,CAAC,GAAGJ,CAAC,GAAGA,CAAC,CAACI,KAAK,GAAGA,KAAK,GAAGN,KAAK,CAACS,GAAG,CAACV,QAAQ,EAAEO,KAAK,CAAC,EAAGA,KAAK;AAC7G,CAAC;AACD,IAAII,kBAAkB,EAAEC,eAAe,EAAEC,eAAe,EAAEC,eAAe,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,wBAAwB,EAAEC,oBAAoB,EAAEC,sBAAsB,EAAEC,qBAAqB,EAAEC,yBAAyB,EAAEC,gBAAgB,EAAEC,iBAAiB,EAAEC,iBAAiB,EAAEC,0BAA0B,EAAEC,iBAAiB,EAAEC,4BAA4B,EAAEC,gBAAgB,EAAEC,4BAA4B,EAAEC,0BAA0B,EAAEC,oCAAoC,EAAEC,6BAA6B,EAAEC,2BAA2B,EAAEC,mBAAmB,EAAEC,sBAAsB,EAAEC,wBAAwB,EAAEC,wBAAwB,EAAEC,oBAAoB,EAAEC,2BAA2B,EAAEC,wBAAwB,EAAEC,qBAAqB,EAAEC,wBAAwB,EAAEC,0BAA0B,EAAEC,iBAAiB,EAAEC,oCAAoC,EAAEC,sCAAsC,EAAEC,4BAA4B,EAAEC,WAAW,EAAEC,uBAAuB;AACz7B,SAASC,IAAI,QAAS,gBAAgB;AACtC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,qBAAqB,QAAS,4BAA4B;AACnE,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,uBAAuB,EAAEC,mBAAmB,QAAS,iBAAiB;AAC/E,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,gBAAgB,QAAQ,uBAAuB;AACxD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,yBAAyB,QAAQ,mBAAmB;AAC3E,SAASC,QAAQ,EAAEC,KAAK,EAAEC,WAAW,QAAQ,YAAY;AACzD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,2BAA2B,QAAS,qBAAqB;AAClE,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,cAAc,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,6BAA6B,EAAEC,QAAQ,EAAEC,qBAAqB,EAAEC,aAAa,EAAEC,qBAAqB,EAAEC,YAAY,EAAEC,eAAe,QAAS,WAAW;AACxP,SAASC,SAAS,QAAQ,gBAAgB;AAC1C;AACA;AACA;AACA,OAAO,MAAMC,OAAO,SAASnC,IAAI,CAAC;EAC9B;AACJ;AACA;EACI,OAAaoC,OAAO,CAACC,MAAM,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,eAAe,EAAEC,mBAAmB,EAAE;IAAA;MAC1F,MAAMC,IAAI,GAAG,IAAIP,OAAO,CAACE,MAAM,EAAEC,MAAM,EAAEC,iBAAiB,EAAEE,mBAAmB,CAAC;MAChF,MAAM5F,sBAAsB,CAAC6F,IAAI,EAAEjF,kBAAkB,EAAE,GAAG,EAAEuB,mBAAmB,CAAC,CAAC5B,IAAI,CAACsF,IAAI,CAAC;MAC3F,IAAIF,eAAe,EAAE;QACjB,IAAI;UACA,MAAME,IAAI,CAACC,WAAW,CAACH,eAAe,CAAC;QAC3C,CAAC,CACD,OAAOI,GAAG,EAAE;UACR,IAAIzC,WAAW,CAACyC,GAAG,CAAC,IAAIrC,mBAAmB,CAACqC,GAAG,CAAC,EAAE;YAC9CrB,UAAU,CAACqB,GAAG,CAAC;UACnB,CAAC,MACI;YACD,MAAMA,GAAG;UACb;QACJ;MACJ;MACA,OAAOF,IAAI;IAAC;EAChB;EACA;AACJ;AACA;EACIG,WAAW,CAACR,MAAM,EAAEC,MAAM,EAAEC,iBAAiB,EAAEE,mBAAmB,EAAE;IAChE,KAAK,EAAE;IACPhF,kBAAkB,CAACqF,GAAG,CAAC,IAAI,CAAC;IAC5BpF,eAAe,CAACF,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;IAChCG,eAAe,CAACH,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjCI,eAAe,CAACJ,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACjCK,iBAAiB,CAACL,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnCM,cAAc,CAACN,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChCO,wBAAwB,CAACP,GAAG,CAAC,IAAI,EAAE,IAAI4D,eAAe,EAAE,CAAC;IACzDpD,oBAAoB,CAACR,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACtCS,sBAAsB,CAACT,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxCU,qBAAqB,CAACV,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvCW,yBAAyB,CAACX,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC3CY,gBAAgB,CAACZ,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAClCa,iBAAiB,CAACb,GAAG,CAAC,IAAI,EAAE,IAAIuF,GAAG,EAAE,CAAC;IACtCzE,iBAAiB,CAACd,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnCe,0BAA0B,CAACf,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IAC1CgB,iBAAiB,CAAChB,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACnCiB,4BAA4B,CAACjB,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC9CkB,gBAAgB,CAAClB,GAAG,CAAC,IAAI,EAAE,IAAIuF,GAAG,EAAE,CAAC;IACrCpE,4BAA4B,CAACnB,GAAG,CAAC,IAAI,EAAE,IAAIwF,GAAG,EAAE,CAAC;IACjDpE,0BAA0B,CAACpB,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5CqB,oCAAoC,CAACrB,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;IACrDsB,6BAA6B,CAACtB,GAAG,CAAC,IAAI,EAAG8E,MAAM,IAAK;MAChD,IAAIW,EAAE;MACN,MAAMC,SAAS,GAAG,CAACD,EAAE,GAAGX,MAAM,CAACa,QAAQ,EAAE,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACG,EAAE,EAAE;MACvF,MAAMC,MAAM,GAAGxG,sBAAsB,CAAC,IAAI,EAAE6B,gBAAgB,EAAE,GAAG,CAAC,CAACpB,GAAG,CAAC4F,SAAS,CAAC;MACjF,IAAI,CAACG,MAAM,EAAE;QACT;MACJ;MACAxG,sBAAsB,CAAC,IAAI,EAAE6B,gBAAgB,EAAE,GAAG,CAAC,CAAC4E,MAAM,CAACJ,SAAS,CAAC;MACrE,IAAI,CAACK,IAAI,CAAC,iBAAiB,CAAC,yCAAyCF,MAAM,CAAC;IAChF,CAAC,CAAC;IACFtE,2BAA2B,CAACvB,GAAG,CAAC,IAAI,EAAGgG,aAAa,IAAK;MACrD3G,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACuF,kBAAkB,CAACD,aAAa,CAAC;MAC1F,IAAIA,aAAa,CAACE,cAAc,EAAE,CAACC,IAAI,KAAK,QAAQ,EAAE;QAClD,MAAMC,OAAO,GAAGJ,aAAa,CAACL,QAAQ,EAAE;QACxClD,MAAM,CAAC2D,OAAO,CAAC;QACf,MAAMP,MAAM,GAAG,IAAInB,SAAS,CAAC0B,OAAO,EAAEJ,aAAa,CAACK,GAAG,EAAE,EAAEhH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEgC,0BAA0B,CAAC,CAACqE,IAAI,CAAC,IAAI,CAAC,EAAEjH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE6B,wBAAwB,CAAC,CAACwE,IAAI,CAAC,IAAI,CAAC,CAAC;QACpPjH,sBAAsB,CAAC,IAAI,EAAE6B,gBAAgB,EAAE,GAAG,CAAC,CAAClB,GAAG,CAACoG,OAAO,CAACR,EAAE,EAAE,EAAEC,MAAM,CAAC;QAC7E,IAAI,CAACE,IAAI,CAAC,eAAe,CAAC,uCAAuCF,MAAM,CAAC;MAC5E;MACA,IAAIG,aAAa,CAACL,QAAQ,EAAE,EAAE;QAC1BtG,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAC7CmG,cAAc,EAAE,CAChBC,oBAAoB,CAACR,aAAa,CAACL,QAAQ,EAAE,EAAEtG,sBAAsB,CAAC,IAAI,EAAEkC,2BAA2B,EAAE,GAAG,CAAC,CAAC;MACvH;IACJ,CAAC,CAAC;IACFxB,sBAAsB,CAAC,IAAI,EAAEI,eAAe,EAAE0E,MAAM,EAAE,GAAG,CAAC;IAC1D9E,sBAAsB,CAAC,IAAI,EAAEK,eAAe,EAAE0E,MAAM,EAAE,GAAG,CAAC;IAC1D/E,sBAAsB,CAAC,IAAI,EAAEM,iBAAiB,EAAE,IAAIkD,QAAQ,CAACsB,MAAM,CAAC,EAAE,GAAG,CAAC;IAC1E9E,sBAAsB,CAAC,IAAI,EAAEO,cAAc,EAAE,IAAIkD,KAAK,CAACqB,MAAM,EAAExF,sBAAsB,CAAC,IAAI,EAAEgB,iBAAiB,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IAC1HN,sBAAsB,CAAC,IAAI,EAAES,oBAAoB,EAAE,IAAIiD,WAAW,CAACoB,MAAM,EAAExF,sBAAsB,CAAC,IAAI,EAAEgB,iBAAiB,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACtIN,sBAAsB,CAAC,IAAI,EAAEU,sBAAsB,EAAE,IAAImC,aAAa,CAACiC,MAAM,CAAC,EAAE,GAAG,CAAC;IACpF9E,sBAAsB,CAAC,IAAI,EAAEW,qBAAqB,EAAE,IAAI2C,YAAY,CAACwB,MAAM,EAAE,IAAI,EAAEE,iBAAiB,EAAE1F,sBAAsB,CAAC,IAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;IACxKR,sBAAsB,CAAC,IAAI,EAAEY,yBAAyB,EAAE,IAAIwC,gBAAgB,CAAC0B,MAAM,CAAC,EAAE,GAAG,CAAC;IAC1F9E,sBAAsB,CAAC,IAAI,EAAEa,gBAAgB,EAAE,IAAIiD,OAAO,CAACgB,MAAM,CAAC,EAAE,GAAG,CAAC;IACxE9E,sBAAsB,CAAC,IAAI,EAAEe,iBAAiB,EAAE,IAAImC,QAAQ,CAAC4B,MAAM,CAAC,EAAE,GAAG,CAAC;IAC1E9E,sBAAsB,CAAC,IAAI,EAAEkB,4BAA4B,EAAEgE,mBAAmB,EAAE,GAAG,CAAC;IACpFlF,sBAAsB,CAAC,IAAI,EAAEiB,iBAAiB,EAAE,IAAI,EAAE,GAAG,CAAC;IAC1D3B,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAC7CmG,cAAc,EAAE,CAChBC,oBAAoB,CAACnH,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,EAAEd,sBAAsB,CAAC,IAAI,EAAEkC,2BAA2B,EAAE,GAAG,CAAC,CAAC;IAC7IlC,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAC7CmG,cAAc,EAAE,CAChBE,EAAE,CAAC,YAAY,CAAC,6CAA6CpH,sBAAsB,CAAC,IAAI,EAAEiC,6BAA6B,EAAE,GAAG,CAAC,CAAC;IACnIjC,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC+F,EAAE,CAACnD,yBAAyB,CAACoD,aAAa,EAAEC,KAAK,IAAI;MAC1G,OAAO,IAAI,CAACZ,IAAI,CAAC,eAAe,CAAC,uCAAuCY,KAAK,CAAC;IAClF,CAAC,CAAC;IACFtH,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC+F,EAAE,CAACnD,yBAAyB,CAACsD,aAAa,EAAED,KAAK,IAAI;MAC1G,OAAO,IAAI,CAACZ,IAAI,CAAC,eAAe,CAAC,uCAAuCY,KAAK,CAAC;IAClF,CAAC,CAAC;IACFtH,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC+F,EAAE,CAACnD,yBAAyB,CAACuD,cAAc,EAAEF,KAAK,IAAI;MAC3G,OAAO,IAAI,CAACZ,IAAI,CAAC,gBAAgB,CAAC,wCAAwCY,KAAK,CAAC;IACpF,CAAC,CAAC;IACF,MAAMG,cAAc,GAAGzH,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc;IAC9FA,cAAc,CAACL,EAAE,CAAC9C,2BAA2B,CAACoD,OAAO,EAAEJ,KAAK,IAAI;MAC5D,OAAO,IAAI,CAACZ,IAAI,CAAC,SAAS,CAAC,iCAAiCY,KAAK,CAAC;IACtE,CAAC,CAAC;IACFG,cAAc,CAACL,EAAE,CAAC9C,2BAA2B,CAACqD,sBAAsB,EAAEL,KAAK,IAAI;MAC3E,OAAO,IAAI,CAACZ,IAAI,CAAC,wBAAwB,CAAC,gDAAgDY,KAAK,CAAC;IACpG,CAAC,CAAC;IACFG,cAAc,CAACL,EAAE,CAAC9C,2BAA2B,CAACsD,QAAQ,EAAEN,KAAK,IAAI;MAC7D,OAAO,IAAI,CAACZ,IAAI,CAAC,UAAU,CAAC,kCAAkCY,KAAK,CAAC;IACxE,CAAC,CAAC;IACFG,cAAc,CAACL,EAAE,CAAC9C,2BAA2B,CAACuD,aAAa,EAAEP,KAAK,IAAI;MAClE,OAAO,IAAI,CAACZ,IAAI,CAAC,eAAe,CAAC,uCAAuCY,KAAK,CAAC;IAClF,CAAC,CAAC;IACFG,cAAc,CAACL,EAAE,CAAC9C,2BAA2B,CAACwD,eAAe,EAAER,KAAK,IAAI;MACpE,OAAO,IAAI,CAACZ,IAAI,CAAC,iBAAiB,CAAC,yCAAyCY,KAAK,CAAC;IACtF,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,2BAA2B,EAAE,MAAM;MACzC,OAAO,IAAI,CAACV,IAAI,CAAC,kBAAkB,CAAC,yCAAyC;IACjF,CAAC,CAAC;;IACFlB,MAAM,CAAC4B,EAAE,CAAC,qBAAqB,EAAE,MAAM;MACnC,OAAO,IAAI,CAACV,IAAI,CAAC,MAAM,CAAC,6BAA6B;IACzD,CAAC,CAAC;;IACFlB,MAAM,CAAC4B,EAAE,CAAC,0BAA0B,EAAEE,KAAK,IAAI;MAC3C,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE8B,qBAAqB,CAAC,CAACnC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IACzG,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,uBAAuB,EAAEE,KAAK,IAAI;MACxC,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE+B,wBAAwB,CAAC,CAACpC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IAC5G,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,8BAA8B,EAAEE,KAAK,IAAI;MAC/C,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEiC,iBAAiB,CAAC,CAACtC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IACrG,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,yBAAyB,EAAEW,SAAS,IAAI;MAC9C,OAAO/H,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE6B,wBAAwB,CAAC,CAAClC,IAAI,CAAC,IAAI,EAAEwH,SAAS,CAACC,gBAAgB,CAAC;IACjI,CAAC,CAAC;IACFxC,MAAM,CAAC4B,EAAE,CAAC,yBAAyB,EAAE,MAAM;MACvC,OAAOpH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEyB,wBAAwB,CAAC,CAAC9B,IAAI,CAAC,IAAI,CAAC;IACrG,CAAC,CAAC;IACFiF,MAAM,CAAC4B,EAAE,CAAC,qBAAqB,EAAEE,KAAK,IAAI;MACtC,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE2B,oBAAoB,CAAC,CAAChC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IACxG,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,gBAAgB,EAAEE,KAAK,IAAI;MACjC,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE0B,wBAAwB,CAAC,CAAC/B,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IAC5G,CAAC,CAAC;IACF9B,MAAM,CAAC4B,EAAE,CAAC,wBAAwB,EAAEE,KAAK,IAAI;MACzC,OAAOtH,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEwB,sBAAsB,CAAC,CAAC7B,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAAC;IAC1G,CAAC,CAAC;IACFtH,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAACkH,gBAAgB,CAACC,IAAI,CAAC,MAAM;MAC3ElI,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAC7CmG,cAAc,EAAE,CAChBiB,uBAAuB,CAACnI,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,EAAEd,sBAAsB,CAAC,IAAI,EAAEkC,2BAA2B,EAAE,GAAG,CAAC,CAAC;MAChJlC,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAC7CmG,cAAc,EAAE,CAChBkB,GAAG,CAAC,YAAY,CAAC,6CAA6CpI,sBAAsB,CAAC,IAAI,EAAEiC,6BAA6B,EAAE,GAAG,CAAC,CAAC;MACpI,IAAI,CAACyE,IAAI,CAAC,OAAO,CAAC,8BAA8B;MAChDhG,sBAAsB,CAAC,IAAI,EAAEG,eAAe,EAAE,IAAI,EAAE,GAAG,CAAC;IAC5D,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIwH,OAAO,GAAG;IACN,OAAOrI,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC;EAC7D;EACAwH,yBAAyB,GAAG;IACxB,OAAOtI,sBAAsB,CAAC,IAAI,EAAEgC,oCAAoC,EAAE,GAAG,CAAC;EAClF;EACAuG,mBAAmB,GAAG;IAClB,OAAOvI,sBAAsB,CAAC,IAAI,EAAE0B,0BAA0B,EAAE,GAAG,CAAC;EACxE;EACA8G,kBAAkB,CAACC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC7B,MAAMC,WAAW,GAAG1I,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,CAAC6G,IAAI,KAAK,CAAC;IAC9F,MAAM;MAAEC,OAAO,GAAG5I,sBAAsB,CAAC,IAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO;IAAG,CAAC,GAAGH,OAAO;IACnG,MAAMI,OAAO,GAAGxF,qBAAqB,CAAC;MAClCyF,OAAO,EAAG,uCAAsCF,OAAQ,aAAY;MACpEA;IACJ,CAAC,CAAC;IACF5I,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,CAACmE,GAAG,CAAC4C,OAAO,CAAC;IAC5E,IAAIE,aAAa;IACjB,IAAIL,WAAW,EAAE;MACbK,aAAa,GAAG/I,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oCAAoC,EAAE;QAC1GC,OAAO,EAAE;MACb,CAAC,CAAC;IACN;IACA,OAAOC,OAAO,CAACC,GAAG,CAAC,CAACN,OAAO,EAAEE,aAAa,CAAC,CAAC,CACvCb,IAAI,CAAC,CAAC,CAACkB,MAAM,CAAC,KAAK;MACpB,OAAOA,MAAM;IACjB,CAAC,CAAC,CACGC,KAAK,CAACC,KAAK,IAAI;MAChBtJ,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,CAAC2E,MAAM,CAACoC,OAAO,CAAC;MAC/E,MAAMS,KAAK;IACf,CAAC,CAAC;EACN;EACMC,cAAc,CAACd,OAAO,EAAE;IAAA;IAAA;MAC1B,MAAM;QAAEe,SAAS;QAAEC,QAAQ;QAAEC,QAAQ,GAAG;MAAE,CAAC,GAAGjB,OAAO;MACrD,IAAIe,SAAS,GAAG,CAAC,GAAG,IAAIA,SAAS,GAAG,GAAG,EAAE;QACrC,MAAM,IAAIG,KAAK,CAAE,sBAAqBH,SAAU,kDAAiD,CAAC;MACtG;MACA,IAAIC,QAAQ,GAAG,CAAC,EAAE,IAAIA,QAAQ,GAAG,EAAE,EAAE;QACjC,MAAM,IAAIE,KAAK,CAAE,qBAAoBF,QAAS,+CAA8C,CAAC;MACjG;MACA,IAAIC,QAAQ,GAAG,CAAC,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,qBAAoBD,QAAS,uCAAsC,CAAC;MACzF;MACA,MAAM1J,sBAAsB,CAAC,KAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,kCAAkC,EAAE;QAC9FQ,SAAS;QACTC,QAAQ;QACRC;MACJ,CAAC,CAAC;IAAC;EACP;EACAjE,MAAM,GAAG;IACL,OAAOzF,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC;EAC7D;EACA6I,OAAO,GAAG;IACN,OAAO5J,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAAC6I,OAAO,EAAE;EACvE;EACAC,cAAc,GAAG;IACb,OAAO7J,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAAC8I,cAAc,EAAE;EAC9E;EACAC,SAAS,GAAG;IACR,OAAO9J,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE;EAC/E;EACA,IAAIC,QAAQ,GAAG;IACX,OAAO/J,sBAAsB,CAAC,IAAI,EAAEgB,iBAAiB,EAAE,GAAG,CAAC;EAC/D;EACA,IAAIgJ,WAAW,GAAG;IACd,OAAOhK,sBAAsB,CAAC,IAAI,EAAEmB,oBAAoB,EAAE,GAAG,CAAC;EAClE;EACA,IAAI8I,QAAQ,GAAG;IACX,OAAOjK,sBAAsB,CAAC,IAAI,EAAEyB,iBAAiB,EAAE,GAAG,CAAC;EAC/D;EACA,IAAIyI,OAAO,GAAG;IACV,OAAOlK,sBAAsB,CAAC,IAAI,EAAEuB,gBAAgB,EAAE,GAAG,CAAC;EAC9D;EACA,IAAI4I,aAAa,GAAG;IAChB,OAAOnK,sBAAsB,CAAC,IAAI,EAAEoB,sBAAsB,EAAE,GAAG,CAAC;EACpE;EACAgJ,MAAM,GAAG;IACL,OAAOpK,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC+I,MAAM,EAAE;EAC5E;EACAC,OAAO,GAAG;IACN,OAAOC,KAAK,CAACC,IAAI,CAACvK,sBAAsB,CAAC,IAAI,EAAE6B,gBAAgB,EAAE,GAAG,CAAC,CAAC2I,MAAM,EAAE,CAAC;EACnF;EACMC,sBAAsB,CAACjK,KAAK,EAAE;IAAA;IAAA;MAChC,OAAOR,sBAAsB,CAAC,MAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAACgD,sBAAsB,CAACjK,KAAK,CAAC;IAAC;EACjH;EACMkK,mBAAmB,CAACzB,OAAO,EAAE;IAAA;IAAA;MAC/BvI,sBAAsB,CAAC,MAAI,EAAEsB,oCAAoC,EAAEiH,OAAO,EAAE,GAAG,CAAC;MAChF,OAAOjJ,sBAAsB,CAAC,MAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,yBAAyB,EAAE;QAAEC;MAAQ,CAAC,CAAC;IAAC;EAC3G;EACA0B,cAAc,CAAC1B,OAAO,EAAE;IACpB,OAAOjJ,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAACkD,cAAc,CAAC1B,OAAO,CAAC;EAC1G;EACA2B,wBAAwB,CAACC,iBAAiB,EAAE;IACxC,OAAO7K,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAACmD,wBAAwB,CAACC,iBAAiB,CAAC;EAC9H;EACAC,2BAA2B,CAAClC,OAAO,EAAE;IACjC5I,sBAAsB,CAAC,IAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC4J,2BAA2B,CAAClC,OAAO,CAAC;EACpG;EACAmC,iBAAiB,CAACnC,OAAO,EAAE;IACvB5I,sBAAsB,CAAC,IAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC6J,iBAAiB,CAACnC,OAAO,CAAC;EAC1F;EACAoC,iBAAiB,GAAG;IAChB,OAAOhL,sBAAsB,CAAC,IAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO,EAAE;EAChF;EACMqC,CAAC,CAACC,QAAQ,EAAE;IAAA;IAAA;MACd,OAAO,MAAI,CAACpB,SAAS,EAAE,CAACmB,CAAC,CAACC,QAAQ,CAAC;IAAC;EACxC;EACMC,EAAE,CAACD,QAAQ,EAAE;IAAA;IAAA;MACf,OAAO,MAAI,CAACpB,SAAS,EAAE,CAACqB,EAAE,CAACD,QAAQ,CAAC;IAAC;EACzC;EACME,cAAc,CAACC,YAAY,EAAE,GAAGC,IAAI,EAAE;IAAA;IAAA;MACxC,MAAMC,OAAO,SAAS,MAAI,CAACzB,SAAS,EAAE,CAAC0B,gBAAgB,EAAE;MACzD,OAAOD,OAAO,CAACH,cAAc,CAACC,YAAY,EAAE,GAAGC,IAAI,CAAC;IAAC;EACzD;EACMG,YAAY,CAACC,eAAe,EAAE;IAAA;IAAA;MAChC,MAAMH,OAAO,SAAS,MAAI,CAACzB,SAAS,EAAE,CAAC0B,gBAAgB,EAAE;MACzDpI,MAAM,CAAC,CAACsI,eAAe,CAACC,QAAQ,EAAE,iCAAiC,CAAC;MACpEvI,MAAM,CAACsI,eAAe,CAACnF,EAAE,EAAE,4DAA4D,CAAC;MACxF,MAAMqF,QAAQ,SAASL,OAAO,CAAClD,OAAO,CAACW,IAAI,CAAC,sBAAsB,EAAE;QAChE6C,iBAAiB,EAAEH,eAAe,CAACnF;MACvC,CAAC,CAAC;MACF,OAAO9B,cAAc,CAAC8G,OAAO,EAAEK,QAAQ,CAACE,OAAO,CAAC;IAAC;EACrD;EACMC,KAAK,CAACb,QAAQ,EAAEG,YAAY,EAAE,GAAGC,IAAI,EAAE;IAAA;IAAA;MACzC,OAAO,MAAI,CAACxB,SAAS,EAAE,CAACiC,KAAK,CAACb,QAAQ,EAAEG,YAAY,EAAE,GAAGC,IAAI,CAAC;IAAC;EACnE;EACMU,MAAM,CAACd,QAAQ,EAAEG,YAAY,EAAE,GAAGC,IAAI,EAAE;IAAA;IAAA;MAC1C,OAAO,MAAI,CAACxB,SAAS,EAAE,CAACkC,MAAM,CAACd,QAAQ,EAAEG,YAAY,EAAE,GAAGC,IAAI,CAAC;IAAC;EACpE;EACMW,EAAE,CAACC,UAAU,EAAE;IAAA;IAAA;MACjB,OAAO,OAAI,CAACpC,SAAS,EAAE,CAACmC,EAAE,CAACC,UAAU,CAAC;IAAC;EAC3C;EACMC,OAAO,CAAC,GAAGC,IAAI,EAAE;IAAA;IAAA;MACnB,MAAMC,eAAe,GAAG,OAAOrM,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oBAAoB,EAAE;QACzGoD,IAAI,EAAEA,IAAI,CAACE,MAAM,GAAGF,IAAI,GAAG,CAAC,OAAI,CAACpF,GAAG,EAAE;MAC1C,CAAC,CAAC,EAAEmF,OAAO;MACX,MAAMI,2BAA2B,GAAG,CAAC,UAAU,CAAC;MAChD,MAAMC,2BAA2B,GAAIC,MAAM,IAAK;QAC5C,KAAK,MAAMC,IAAI,IAAIH,2BAA2B,EAAE;UAC5C,OAAOE,MAAM,CAACC,IAAI,CAAC;QACvB;QACA,OAAOD,MAAM;MACjB,CAAC;MACD,OAAOJ,eAAe,CAACM,GAAG,CAACH,2BAA2B,CAAC;IAAC;EAC5D;EACMI,YAAY,CAAC,GAAGT,OAAO,EAAE;IAAA;IAAA;MAC3B,MAAMU,OAAO,GAAG,OAAI,CAAC7F,GAAG,EAAE;MAC1B,KAAK,MAAMyF,MAAM,IAAIN,OAAO,EAAE;QAC1B,MAAMW,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;QACtC,IAAI,CAACA,MAAM,CAACzF,GAAG,IAAI6F,OAAO,CAACI,UAAU,CAAC,MAAM,CAAC,EAAE;UAC3CH,IAAI,CAAC9F,GAAG,GAAG6F,OAAO;QACtB;QACA,MAAM7M,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uBAAuB,EAAE8D,IAAI,CAAC;MAChG;IAAC;EACL;EACMI,SAAS,CAAC,GAAGf,OAAO,EAAE;IAAA;IAAA;MACxB,MAAMU,OAAO,GAAG,OAAI,CAAC7F,GAAG,EAAE;MAC1B,MAAMmG,cAAc,GAAGN,OAAO,CAACI,UAAU,CAAC,MAAM,CAAC;MACjD,MAAMG,KAAK,GAAGjB,OAAO,CAACQ,GAAG,CAACF,MAAM,IAAI;QAChC,MAAMK,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,MAAM,CAAC;QACtC,IAAI,CAACK,IAAI,CAAC9F,GAAG,IAAImG,cAAc,EAAE;UAC7BL,IAAI,CAAC9F,GAAG,GAAG6F,OAAO;QACtB;QACAzJ,MAAM,CAAC0J,IAAI,CAAC9F,GAAG,KAAK,aAAa,EAAG,mCAAkC8F,IAAI,CAACO,IAAK,GAAE,CAAC;QACnFjK,MAAM,CAAC,CAACkK,MAAM,CAACC,SAAS,CAACN,UAAU,CAAC1M,IAAI,CAACuM,IAAI,CAAC9F,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,EAAG,sCAAqC8F,IAAI,CAACO,IAAK,GAAE,CAAC;QACtH,OAAOP,IAAI;MACf,CAAC,CAAC;MACF,MAAM,OAAI,CAACF,YAAY,CAAC,GAAGQ,KAAK,CAAC;MACjC,IAAIA,KAAK,CAACd,MAAM,EAAE;QACd,MAAMtM,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oBAAoB,EAAE;UAAEmD,OAAO,EAAEiB;QAAM,CAAC,CAAC;MAC3G;IAAC;EACL;EACMI,YAAY,CAAC/E,OAAO,EAAE;IAAA;IAAA;MACxB,OAAO,OAAI,CAACqB,SAAS,EAAE,CAAC0D,YAAY,CAAC/E,OAAO,CAAC;IAAC;EAClD;EACMgF,WAAW,CAAChF,OAAO,EAAE;IAAA;IAAA;MACvB,OAAO,OAAI,CAACqB,SAAS,EAAE,CAAC2D,WAAW,CAAChF,OAAO,CAAC;IAAC;EACjD;EACMiF,cAAc,CAACL,IAAI,EAAEM,YAAY,EAAE;IAAA;IAAA;MACrC,IAAI3N,sBAAsB,CAAC,OAAI,EAAEwB,iBAAiB,EAAE,GAAG,CAAC,CAAClB,GAAG,CAAC+M,IAAI,CAAC,EAAE;QAChE,MAAM,IAAI1D,KAAK,CAAE,wCAAuC0D,IAAK,aAAYA,IAAK,oBAAmB,CAAC;MACtG;MACA,IAAIO,OAAO;MACX,QAAQ,OAAOD,YAAY;QACvB,KAAK,UAAU;UACXC,OAAO,GAAG,IAAIpK,OAAO,CAAC6J,IAAI,EAAEM,YAAY,CAAC;UACzC;QACJ;UACIC,OAAO,GAAG,IAAIpK,OAAO,CAAC6J,IAAI,EAAEM,YAAY,CAACE,OAAO,CAAC;UACjD;MAAM;MAEd7N,sBAAsB,CAAC,OAAI,EAAEwB,iBAAiB,EAAE,GAAG,CAAC,CAACb,GAAG,CAAC0M,IAAI,EAAEO,OAAO,CAAC;MACvE,MAAM1B,UAAU,GAAGlH,qBAAqB,CAAC,YAAY,EAAEqI,IAAI,CAAC;MAC5D,MAAMrN,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oBAAoB,EAAE;QAAEqE,IAAI,EAAEA;MAAK,CAAC,CAAC;MACnG,MAAMrN,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uCAAuC,EAAE;QACnG8E,MAAM,EAAE5B;MACZ,CAAC,CAAC;MACF,MAAMhD,OAAO,CAACC,GAAG,CAAC,OAAI,CAACiB,MAAM,EAAE,CAACuC,GAAG,CAACoB,KAAK,IAAI;QACzC,OAAOA,KAAK,CAACC,QAAQ,CAAC9B,UAAU,CAAC,CAAC7C,KAAK,CAAC3E,UAAU,CAAC;MACvD,CAAC,CAAC,CAAC;IAAC;EACR;EACMuJ,YAAY,CAACC,WAAW,EAAE;IAAA;IAAA;MAC5B,OAAOlO,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAACwG,YAAY,CAACC,WAAW,CAAC;IAAC;EAC7G;EACMC,mBAAmB,CAACC,OAAO,EAAE;IAAA;IAAA;MAC/B,OAAOpO,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAAC0G,mBAAmB,CAACC,OAAO,CAAC;IAAC;EAChH;EACMC,YAAY,CAACC,SAAS,EAAEC,iBAAiB,EAAE;IAAA;IAAA;MAC7C,OAAOvO,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAAC4G,YAAY,CAACC,SAAS,EAAEC,iBAAiB,CAAC;IAAC;EAC9H;EACMC,OAAO,GAAG;IAAA;IAAA;MACZ,MAAM5C,QAAQ,SAAS5L,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,wBAAwB,CAAC;MACxG,OAAOhJ,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE4B,2BAA2B,CAAC,CAACjC,IAAI,CAAC,OAAI,EAAEqL,QAAQ,CAAC4C,OAAO,CAAC;IAAC;EAC3H;EACAxH,GAAG,GAAG;IACF,OAAO,IAAI,CAAC8C,SAAS,EAAE,CAAC9C,GAAG,EAAE;EACjC;EACMyH,OAAO,GAAG;IAAA;IAAA;MACZ,aAAazO,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE,CAAC2E,OAAO,EAAE;IAAC;EAChG;EACMC,UAAU,CAACC,IAAI,EAAElG,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MACjC,MAAMzI,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE,CAAC4E,UAAU,CAACC,IAAI,EAAElG,OAAO,CAAC;IAAC;EACzG;EACMmG,IAAI,CAAC5H,GAAG,EAAEyB,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC1B,aAAazI,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE,CAAC8E,IAAI,CAAC5H,GAAG,EAAEyB,OAAO,CAAC;IAAC;EACzG;EACMoG,MAAM,CAACpG,OAAO,EAAE;IAAA;IAAA;MAClB,MAAMW,MAAM,SAASF,OAAO,CAACC,GAAG,CAAC,CAC7B,OAAI,CAAC2F,iBAAiB,CAACrG,OAAO,CAAC,EAC/BzI,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,aAAa,CAAC,CACzE,CAAC;MACF,OAAOI,MAAM,CAAC,CAAC,CAAC;IAAC;EACrB;EACM0F,iBAAiB,CAACrG,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAClC,aAAazI,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE,CAACgF,iBAAiB,CAACrG,OAAO,CAAC;IAAC;EACjH;EACMsG,cAAc,CAACC,cAAc,EAAEvG,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC/C,MAAM;QAAEG,OAAO,GAAG5I,sBAAsB,CAAC,OAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO;MAAG,CAAC,GAAGH,OAAO;MACnG,OAAOtD,YAAY,CAACnF,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,EAAEnD,2BAA2B,CAACoD,OAAO;QAAA,6BAAE,WAAOuH,OAAO,EAAK;UACjJ,IAAIlK,QAAQ,CAACiK,cAAc,CAAC,EAAE;YAC1B,OAAOA,cAAc,KAAKC,OAAO,CAACjI,GAAG,EAAE;UAC3C;UACA,IAAI,OAAOgI,cAAc,KAAK,UAAU,EAAE;YACtC,OAAO,CAAC,QAAQA,cAAc,CAACC,OAAO,CAAC,CAAC;UAC5C;UACA,OAAO,KAAK;QAChB,CAAC;QAAA;UAAA;QAAA;MAAA,KAAErG,OAAO,EAAE5I,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEoC,4BAA4B,CAAC,CAACzC,IAAI,CAAC,OAAI,CAAC,CAAC;IAAC;EAChH;EACM2O,eAAe,CAACF,cAAc,EAAEvG,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAChD,MAAM;QAAEG,OAAO,GAAG5I,sBAAsB,CAAC,OAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO;MAAG,CAAC,GAAGH,OAAO;MACnG,OAAOtD,YAAY,CAACnF,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,EAAEnD,2BAA2B,CAACsD,QAAQ;QAAA,8BAAE,WAAOgE,QAAQ,EAAK;UACnJ,IAAI7G,QAAQ,CAACiK,cAAc,CAAC,EAAE;YAC1B,OAAOA,cAAc,KAAKpD,QAAQ,CAAC5E,GAAG,EAAE;UAC5C;UACA,IAAI,OAAOgI,cAAc,KAAK,UAAU,EAAE;YACtC,OAAO,CAAC,QAAQA,cAAc,CAACpD,QAAQ,CAAC,CAAC;UAC7C;UACA,OAAO,KAAK;QAChB,CAAC;QAAA;UAAA;QAAA;MAAA,KAAEhD,OAAO,EAAE5I,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEoC,4BAA4B,CAAC,CAACzC,IAAI,CAAC,OAAI,CAAC,CAAC;IAAC;EAChH;EACM4O,kBAAkB,CAAC1G,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MACnC,MAAM;QAAE2G,QAAQ,GAAG,GAAG;QAAExG,OAAO,GAAG5I,sBAAsB,CAAC,OAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO;MAAG,CAAC,GAAGH,OAAO;MACnH,MAAMhB,cAAc,GAAGzH,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc;MAC9F,MAAM4H,WAAW,GAAGhM,qBAAqB,EAAE;MAC3C,IAAIiM,mBAAmB;MACvB,MAAMC,YAAY,GAAG,IAAIrG,OAAO,CAAC,CAACsG,CAAC,EAAEC,MAAM,KAAK;QAC5CH,mBAAmB,GAAGG,MAAM;MAChC,CAAC,CAAC;MACF,IAAIC,SAAS;MACb,MAAMC,OAAO,GAAG,MAAM;QAClBD,SAAS,IAAIE,YAAY,CAACF,SAAS,CAAC;QACpCJ,mBAAmB,CAAC,IAAI3F,KAAK,CAAC,OAAO,CAAC,CAAC;MAC3C,CAAC;MACD,MAAMqE,QAAQ,GAAG,MAAM;QACnB0B,SAAS,IAAIE,YAAY,CAACF,SAAS,CAAC;QACpC,IAAIjI,cAAc,CAACoI,qBAAqB,EAAE,KAAK,CAAC,EAAE;UAC9CH,SAAS,GAAGI,UAAU,CAACT,WAAW,CAACU,OAAO,EAAEX,QAAQ,CAAC;QACzD;MACJ,CAAC;MACDpB,QAAQ,EAAE;MACV,MAAMgC,YAAY,GAAG,MAAM;QACvBhC,QAAQ,EAAE;QACV,OAAO,KAAK;MAChB,CAAC;MACD,MAAMiC,aAAa,GAAI3I,KAAK,IAAK;QAC7B,OAAOnC,YAAY,CAACsC,cAAc,EAAEH,KAAK,EAAE0I,YAAY,EAAEpH,OAAO,EAAE2G,YAAY,CAAC;MACnF,CAAC;MACD,MAAMW,aAAa,GAAG,CAClBD,aAAa,CAAC3L,2BAA2B,CAACoD,OAAO,CAAC,EAClDuI,aAAa,CAAC3L,2BAA2B,CAACsD,QAAQ,CAAC,EACnDqI,aAAa,CAAC3L,2BAA2B,CAACuD,aAAa,CAAC,CAC3D;MACD,MAAMqB,OAAO,CAACiH,IAAI,CAAC,CACfd,WAAW,EACX,GAAGa,aAAa,EAChBlQ,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEoC,4BAA4B,CAAC,CAACzC,IAAI,CAAC,OAAI,CAAC,CACjG,CAAC,CAAC2H,IAAI,CAACkI,CAAC,IAAI;QACTT,OAAO,EAAE;QACT,OAAOS,CAAC;MACZ,CAAC,EAAE9G,KAAK,IAAI;QACRqG,OAAO,EAAE;QACT,MAAMrG,KAAK;MACf,CAAC,CAAC;IAAC;EACP;EACM+G,YAAY,CAACrB,cAAc,EAAEvG,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC7C,MAAM;QAAEG,OAAO,GAAG5I,sBAAsB,CAAC,OAAI,EAAEkB,wBAAwB,EAAE,GAAG,CAAC,CAAC0H,OAAO;MAAG,CAAC,GAAGH,OAAO;MACnG,IAAI6H,SAAS;MACb,IAAIvL,QAAQ,CAACiK,cAAc,CAAC,EAAE;QAC1BsB,SAAS,GAAIvC,KAAK,IAAK;UACnB,OAAO7E,OAAO,CAAC6G,OAAO,CAACf,cAAc,KAAKjB,KAAK,CAAC/G,GAAG,EAAE,CAAC;QAC1D,CAAC;MACL,CAAC,MACI;QACDsJ,SAAS,GAAIvC,KAAK,IAAK;UACnB,MAAMvN,KAAK,GAAGwO,cAAc,CAACjB,KAAK,CAAC;UACnC,IAAI,OAAOvN,KAAK,KAAK,SAAS,EAAE;YAC5B,OAAO0I,OAAO,CAAC6G,OAAO,CAACvP,KAAK,CAAC;UACjC;UACA,OAAOA,KAAK;QAChB,CAAC;MACL;MACA,MAAM+P,SAAS,GAAGrH,OAAO,CAACiH,IAAI,CAAC,CAC3BhL,YAAY,CAACnF,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,EAAE4C,yBAAyB,CAACoD,aAAa,EAAEiJ,SAAS,EAAE1H,OAAO,EAAE5I,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEoC,4BAA4B,CAAC,CAACzC,IAAI,CAAC,OAAI,CAAC,CAAC,EACnO4E,YAAY,CAACnF,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,EAAE4C,yBAAyB,CAACuD,cAAc,EAAE8I,SAAS,EAAE1H,OAAO,EAAE5I,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEoC,4BAA4B,CAAC,CAACzC,IAAI,CAAC,OAAI,CAAC,CAAC,EACpO,GAAG,OAAI,CAAC6J,MAAM,EAAE,CAACuC,GAAG;QAAA,8BAAC,WAAOoB,KAAK,EAAK;UAClC,UAAUuC,SAAS,CAACvC,KAAK,CAAC,EAAE;YACxB,OAAOA,KAAK;UAChB;UACA,aAAawC,SAAS;QAC1B,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC,CACL,CAAC;MACF,OAAOA,SAAS;IAAC;EACrB;EACMC,MAAM,CAAC/H,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MACvB,OAAOzI,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEqC,WAAW,CAAC,CAAC1C,IAAI,CAAC,OAAI,EAAE,CAAC,CAAC,EAAEkI,OAAO,CAAC;IAAC;EACtG;EACMgI,SAAS,CAAChI,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC1B,OAAOzI,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEqC,WAAW,CAAC,CAAC1C,IAAI,CAAC,OAAI,EAAE,CAAC,CAAC,EAAEkI,OAAO,CAAC;IAAC;EACtG;EACMiI,YAAY,GAAG;IAAA;IAAA;MACjB,MAAM1Q,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,mBAAmB,CAAC;IAAC;EACvF;EACM2H,oBAAoB,CAAC1H,OAAO,EAAE;IAAA;IAAA;MAChC,IAAIjJ,sBAAsB,CAAC,OAAI,EAAE0B,0BAA0B,EAAE,GAAG,CAAC,KAAKuH,OAAO,EAAE;QAC3E;MACJ;MACAvI,sBAAsB,CAAC,OAAI,EAAEgB,0BAA0B,EAAEuH,OAAO,EAAE,GAAG,CAAC;MACtE,MAAMjJ,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,sCAAsC,EAAE;QAClGxI,KAAK,EAAE,CAACyI;MACZ,CAAC,CAAC;IAAC;EACP;EACM2H,YAAY,CAAC3H,OAAO,EAAE;IAAA;IAAA;MACxB,MAAMjJ,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,mBAAmB,EAAE;QAAEC;MAAQ,CAAC,CAAC;IAAC;EACpG;EACM4H,gBAAgB,CAAC/J,IAAI,EAAE;IAAA;IAAA;MACzB1D,MAAM,CAAC0D,IAAI,KAAK,QAAQ,IACpBA,IAAI,KAAK,OAAO,IAChB,CAACA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGgK,SAAS,MAAMA,SAAS,EAAE,0BAA0B,GAAGhK,IAAI,CAAC;MAC3G,MAAM9G,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,4BAA4B,EAAE;QACxF+H,KAAK,EAAEjK,IAAI,IAAI;MACnB,CAAC,CAAC;IAAC;EACP;EACMkK,oBAAoB,CAACC,MAAM,EAAE;IAAA;IAAA;MAC/B7N,MAAM,CAAC6N,MAAM,KAAK,IAAI,IAAIA,MAAM,IAAI,CAAC,EAAE,iDAAiD,CAAC;MACzF,MAAMjR,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,gCAAgC,EAAE;QAC5FkI,IAAI,EAAED,MAAM,KAAK,IAAI,GAAGA,MAAM,GAAG;MACrC,CAAC,CAAC;IAAC;EACP;EACME,oBAAoB,CAACC,QAAQ,EAAE;IAAA;IAAA;MACjC,IAAI,CAACA,QAAQ,EAAE;QACX,MAAMpR,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,4BAA4B,EAAE,CAAC,CAAC,CAAC;MACnG;MACA,IAAIsB,KAAK,CAAC+G,OAAO,CAACD,QAAQ,CAAC,EAAE;QACzB,KAAK,MAAME,YAAY,IAAIF,QAAQ,EAAE;UACjC,MAAM/D,IAAI,GAAGiE,YAAY,CAACjE,IAAI;UAC9BjK,MAAM,CAAC,2DAA2D,CAACmO,IAAI,CAAClE,IAAI,CAAC,EAAE,6BAA6B,GAAGA,IAAI,CAAC;QACxH;QACA,MAAMrN,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,4BAA4B,EAAE;UACxFoI,QAAQ,EAAEA;QACd,CAAC,CAAC;MACN;IAAC;EACL;EACMI,eAAe,CAACC,UAAU,EAAE;IAAA;IAAA;MAC9B,IAAI;QACA,MAAMzR,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,+BAA+B,EAAE;UAC3FyI,UAAU,EAAEA,UAAU,IAAI;QAC9B,CAAC,CAAC;MACN,CAAC,CACD,OAAOnI,KAAK,EAAE;QACV,IAAIhG,WAAW,CAACgG,KAAK,CAAC,IAAIA,KAAK,CAACR,OAAO,CAAC4I,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAClE,MAAM,IAAI/H,KAAK,CAAE,wBAAuB8H,UAAW,EAAC,CAAC;QACzD;QACA,MAAMnI,KAAK;MACf;IAAC;EACL;EACMqI,gBAAgB,CAACC,SAAS,EAAE;IAAA;IAAA;MAC9B,IAAIA,SAAS,EAAE;QACX,MAAM5R,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,2BAA2B,EAAE;UACvF6I,YAAY,EAAED,SAAS,CAACC,YAAY;UACpCC,gBAAgB,EAAEF,SAAS,CAACE;QAChC,CAAC,CAAC;MACN,CAAC,MACI;QACD,MAAM9R,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,6BAA6B,CAAC;MAChG;IAAC;EACL;EACM+I,uBAAuB,CAACjL,IAAI,EAAE;IAAA;IAAA;MAChC,MAAMkL,kBAAkB,GAAG,IAAI7L,GAAG,CAAC,CAC/B,MAAM,EACN,eAAe,EACf,eAAe,EACf,cAAc,EACd,YAAY,EACZ,YAAY,CACf,CAAC;MACF,IAAI;QACA/C,MAAM,CAAC,CAAC0D,IAAI,IAAIkL,kBAAkB,CAAC1R,GAAG,CAACwG,IAAI,CAAC,EAAG,kCAAiCA,IAAK,EAAC,CAAC;QACvF,MAAM9G,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uCAAuC,EAAE;UACnGlC,IAAI,EAAEA,IAAI,IAAI;QAClB,CAAC,CAAC;MACN,CAAC,CACD,OAAOwC,KAAK,EAAE;QACV,MAAMA,KAAK;MACf;IAAC;EACL;EACMxD,WAAW,CAACmM,QAAQ,EAAE;IAAA;IAAA;MACxB,MAAMC,WAAW,SAASlS,sBAAsB,CAAC,OAAI,EAAEsB,yBAAyB,EAAE,GAAG,CAAC,CAAC6Q,eAAe,CAACF,QAAQ,CAAC;MAChHvR,sBAAsB,CAAC,OAAI,EAAEiB,iBAAiB,EAAEsQ,QAAQ,EAAE,GAAG,CAAC;MAC9D,IAAIC,WAAW,EAAE;QACb,MAAM,OAAI,CAACrD,MAAM,EAAE;MACvB;IAAC;EACL;EACAoD,QAAQ,GAAG;IACP,OAAOjS,sBAAsB,CAAC,IAAI,EAAE2B,iBAAiB,EAAE,GAAG,CAAC;EAC/D;EACMqM,QAAQ,CAAC3C,YAAY,EAAE,GAAGC,IAAI,EAAE;IAAA;IAAA;MAClC,OAAOtL,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACyI,SAAS,EAAE,CAACkE,QAAQ,CAAC3C,YAAY,EAAE,GAAGC,IAAI,CAAC;IAAC;EAChH;EACM8G,qBAAqB,CAAC/G,YAAY,EAAE,GAAGC,IAAI,EAAE;IAAA;IAAA;MAC/C,MAAMwC,MAAM,GAAGnJ,gBAAgB,CAAC0G,YAAY,EAAE,GAAGC,IAAI,CAAC;MACtD,MAAMtL,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uCAAuC,EAAE;QACnG8E;MACJ,CAAC,CAAC;IAAC;EACP;EACMuE,eAAe,CAACpJ,OAAO,GAAG,IAAI,EAAE;IAAA;IAAA;MAClC,MAAMjJ,sBAAsB,CAAC,OAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACoG,cAAc,CAAC4K,eAAe,CAACpJ,OAAO,CAAC;IAAC;EAC3G;EACMqJ,UAAU,CAAC7J,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC3B,IAAI8J,cAAc,GAAG,KAAK,CAAC;MAC3B;MACA;MACA;MACA,IAAI9J,OAAO,CAAC3B,IAAI,EAAE;QACdyL,cAAc,GACV9J,OAAO,CAAC3B,IAAI;MACpB,CAAC,MACI,IAAI2B,OAAO,CAAC+J,IAAI,EAAE;QACnB,MAAMC,QAAQ,GAAGhK,OAAO,CAAC+J,IAAI;QAC7B,MAAME,SAAS,GAAGD,QAAQ,CACrBE,KAAK,CAACF,QAAQ,CAACG,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CACpCC,WAAW,EAAE;QAClB,QAAQH,SAAS;UACb,KAAK,KAAK;YACNH,cAAc,GAAG,KAAK,CAAC;YACvB;UACJ,KAAK,MAAM;UACX,KAAK,KAAK;YACNA,cAAc,GAAG,MAAM,CAAC;YACxB;UACJ,KAAK,MAAM;YACPA,cAAc,GAAG,MAAM,CAAC;YACxB;UACJ;YACI,MAAM,IAAI5I,KAAK,CAAE,gDAA+C+I,SAAU,IAAG,CAAC;QAAC;MAE3F;MACA,IAAIjK,OAAO,CAACqK,OAAO,EAAE;QACjB1P,MAAM,CAACmP,cAAc,KAAK,MAAM,CAAC,2DAC7BA,cAAc,KAAK,MAAM,CAAC,yDAAyD,yCAAyC,GAC5HA,cAAc,GACd,cAAc,CAAC;QACnBnP,MAAM,CAAC,OAAOqF,OAAO,CAACqK,OAAO,KAAK,QAAQ,EAAE,oDAAoD,GAC5F,OAAOrK,OAAO,CAACqK,OAAO,CAAC;QAC3B1P,MAAM,CAAC2P,MAAM,CAACC,SAAS,CAACvK,OAAO,CAACqK,OAAO,CAAC,EAAE,2CAA2C,CAAC;QACtF1P,MAAM,CAACqF,OAAO,CAACqK,OAAO,IAAI,CAAC,IAAIrK,OAAO,CAACqK,OAAO,IAAI,GAAG,EAAE,oEAAoE,GACvHrK,OAAO,CAACqK,OAAO,CAAC;MACxB;MACA1P,MAAM,CAAC,CAACqF,OAAO,CAACwK,IAAI,IAAI,CAACxK,OAAO,CAACyK,QAAQ,EAAE,iDAAiD,CAAC;MAC7F,IAAIzK,OAAO,CAACwK,IAAI,EAAE;QACd7P,MAAM,CAAC,OAAOqF,OAAO,CAACwK,IAAI,CAACE,CAAC,KAAK,QAAQ,EAAE,mDAAmD,GAC1F,OAAO1K,OAAO,CAACwK,IAAI,CAACE,CAAC,CAAC;QAC1B/P,MAAM,CAAC,OAAOqF,OAAO,CAACwK,IAAI,CAACG,CAAC,KAAK,QAAQ,EAAE,mDAAmD,GAC1F,OAAO3K,OAAO,CAACwK,IAAI,CAACG,CAAC,CAAC;QAC1BhQ,MAAM,CAAC,OAAOqF,OAAO,CAACwK,IAAI,CAACI,KAAK,KAAK,QAAQ,EAAE,uDAAuD,GAClG,OAAO5K,OAAO,CAACwK,IAAI,CAACI,KAAK,CAAC;QAC9BjQ,MAAM,CAAC,OAAOqF,OAAO,CAACwK,IAAI,CAACK,MAAM,KAAK,QAAQ,EAAE,wDAAwD,GACpG,OAAO7K,OAAO,CAACwK,IAAI,CAACK,MAAM,CAAC;QAC/BlQ,MAAM,CAACqF,OAAO,CAACwK,IAAI,CAACI,KAAK,KAAK,CAAC,EAAE,0CAA0C,CAAC;QAC5EjQ,MAAM,CAACqF,OAAO,CAACwK,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE,2CAA2C,CAAC;MAClF;MACA,OAAOtT,sBAAsB,CAAC,OAAI,EAAE4B,4BAA4B,EAAE,GAAG,CAAC,CAAC2R,QAAQ,CAAC,MAAM;QAClF,OAAOvT,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEsC,uBAAuB,CAAC,CAAC3C,IAAI,CAAC,OAAI,EAAEgS,cAAc,EAAE9J,OAAO,CAAC;MAC7H,CAAC,CAAC;IAAC;EACP;EACM+K,eAAe,CAAC/K,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAChC,MAAM;QAAEgL,SAAS;QAAEC,mBAAmB;QAAEC,cAAc;QAAEC,cAAc;QAAEC,eAAe;QAAEC,KAAK;QAAET,KAAK,EAAEU,UAAU;QAAET,MAAM,EAAEU,WAAW;QAAEC,MAAM;QAAEC,UAAU;QAAEC,iBAAiB;QAAEC,cAAc;QAAExL;MAAS,CAAC,GAAG,OAAI,CAACyL,cAAc,CAAC5L,OAAO,CAAC;MACxO,IAAI2L,cAAc,EAAE;QAChB,MAAMpU,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEmC,sCAAsC,CAAC,CAACxC,IAAI,CAAC,OAAI,CAAC;MAClH;MACA,MAAM+T,mBAAmB,GAAGtU,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,iBAAiB,EAAE;QACnGuL,YAAY,EAAE,gBAAgB;QAC9Bd,SAAS;QACTC,mBAAmB;QACnBC,cAAc;QACdC,cAAc;QACdC,eAAe;QACfC,KAAK;QACLC,UAAU;QACVC,WAAW;QACXQ,SAAS,EAAEP,MAAM,CAACQ,GAAG;QACrBC,YAAY,EAAET,MAAM,CAACU,MAAM;QAC3BC,UAAU,EAAEX,MAAM,CAACY,IAAI;QACvBC,WAAW,EAAEb,MAAM,CAACc,KAAK;QACzBb,UAAU;QACVC;MACJ,CAAC,CAAC;MACF,MAAM/K,MAAM,SAAShE,eAAe,CAACkP,mBAAmB,EAAE,iBAAiB,EAAE1L,OAAO,CAAC;MACrF,IAAIwL,cAAc,EAAE;QAChB,MAAMpU,sBAAsB,CAAC,OAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEkC,oCAAoC,CAAC,CAACvC,IAAI,CAAC,OAAI,CAAC;MAChH;MACA6C,MAAM,CAACgG,MAAM,CAAC4L,MAAM,EAAE,2CAA2C,CAAC;MAClE,OAAOlQ,6BAA6B,CAAC9E,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,EAAEsI,MAAM,CAAC4L,MAAM,CAAC;IAAC;EAC5G;EACMC,GAAG,CAACxM,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MACpB,MAAM;QAAE+J,IAAI,GAAG1B;MAAU,CAAC,GAAGrI,OAAO;MACpC,MAAMyM,QAAQ,SAAS,OAAI,CAAC1B,eAAe,CAAC/K,OAAO,CAAC;MACpD,MAAM0M,MAAM,SAAStQ,mBAAmB,CAACqQ,QAAQ,EAAE1C,IAAI,CAAC;MACxDpP,MAAM,CAAC+R,MAAM,EAAE,yBAAyB,CAAC;MACzC,OAAOA,MAAM;IAAC;EAClB;EACMC,KAAK,GAAG;IAAA;IAAA;MACV,OAAO,OAAI,CAACtL,SAAS,EAAE,CAACsL,KAAK,EAAE;IAAC;EACpC;EACMC,KAAK,CAAC5M,OAAO,GAAG;IAAE6M,eAAe,EAAExE;EAAU,CAAC,EAAE;IAAA;IAAA;MAClD,MAAMyE,UAAU,GAAGvV,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACyU,UAAU,EAAE;MAClFnS,MAAM,CAACmS,UAAU,EAAE,0EAA0E,CAAC;MAC9F,MAAMD,eAAe,GAAG,CAAC,CAAC7M,OAAO,CAAC6M,eAAe;MACjD,IAAIA,eAAe,EAAE;QACjB,MAAMtV,sBAAsB,CAAC,OAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,YAAY,CAAC;MAC/E,CAAC,MACI;QACD,MAAMuM,UAAU,CAACvM,IAAI,CAAC,oBAAoB,EAAE;UACxCwM,QAAQ,EAAExV,sBAAsB,CAAC,OAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAAC0U;QACjE,CAAC,CAAC;QACF,MAAMzV,sBAAsB,CAAC,OAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAACkH,gBAAgB;MAC7E;IAAC;EACL;EACAyN,QAAQ,GAAG;IACP,OAAO1V,sBAAsB,CAAC,IAAI,EAAEa,eAAe,EAAE,GAAG,CAAC;EAC7D;EACA,IAAI8U,KAAK,GAAG;IACR,OAAO3V,sBAAsB,CAAC,IAAI,EAAEiB,cAAc,EAAE,GAAG,CAAC;EAC5D;EACA2U,KAAK,CAAC1K,QAAQ,EAAEzC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B,OAAO,IAAI,CAACqB,SAAS,EAAE,CAAC8L,KAAK,CAAC1K,QAAQ,EAAEzC,OAAO,CAAC;EACpD;EACAoN,KAAK,CAAC3K,QAAQ,EAAE;IACZ,OAAO,IAAI,CAACpB,SAAS,EAAE,CAAC+L,KAAK,CAAC3K,QAAQ,CAAC;EAC3C;EACA4K,KAAK,CAAC5K,QAAQ,EAAE;IACZ,OAAO,IAAI,CAACpB,SAAS,EAAE,CAACgM,KAAK,CAAC5K,QAAQ,CAAC;EAC3C;EACA6K,MAAM,CAAC7K,QAAQ,EAAE,GAAGV,MAAM,EAAE;IACxB,OAAO,IAAI,CAACV,SAAS,EAAE,CAACiM,MAAM,CAAC7K,QAAQ,EAAE,GAAGV,MAAM,CAAC;EACvD;EACAwL,GAAG,CAAC9K,QAAQ,EAAE;IACV,OAAO,IAAI,CAACpB,SAAS,EAAE,CAACkM,GAAG,CAAC9K,QAAQ,CAAC;EACzC;EACApE,IAAI,CAACoE,QAAQ,EAAE+K,IAAI,EAAExN,OAAO,EAAE;IAC1B,OAAO,IAAI,CAACqB,SAAS,EAAE,CAAChD,IAAI,CAACoE,QAAQ,EAAE+K,IAAI,EAAExN,OAAO,CAAC;EACzD;EACAyN,cAAc,CAACC,YAAY,EAAE;IACzB,OAAO,IAAI,CAACrM,SAAS,EAAE,CAACoM,cAAc,CAACC,YAAY,CAAC;EACxD;EACMC,eAAe,CAAClL,QAAQ,EAAEzC,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA;IAAA;MAC1C,aAAa,OAAI,CAACqB,SAAS,EAAE,CAACsM,eAAe,CAAClL,QAAQ,EAAEzC,OAAO,CAAC;IAAC;EACrE;EACA4N,YAAY,CAACC,KAAK,EAAE7N,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,OAAO,IAAI,CAACqB,SAAS,EAAE,CAACuM,YAAY,CAACC,KAAK,EAAE7N,OAAO,CAAC;EACxD;EACA8N,eAAe,CAAClL,YAAY,EAAE5C,OAAO,GAAG,CAAC,CAAC,EAAE,GAAG6C,IAAI,EAAE;IACjD,OAAO,IAAI,CAACxB,SAAS,EAAE,CAACyM,eAAe,CAAClL,YAAY,EAAE5C,OAAO,EAAE,GAAG6C,IAAI,CAAC;EAC3E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIkL,mBAAmB,CAAC/N,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,OAAO,IAAI,CAACqB,SAAS,EAAE,CAAC0M,mBAAmB,CAAC/N,OAAO,CAAC;EACxD;AACJ;AACA5H,eAAe,GAAG,IAAI4V,OAAO,EAAE,EAAE3V,eAAe,GAAG,IAAI2V,OAAO,EAAE,EAAE1V,eAAe,GAAG,IAAI0V,OAAO,EAAE,EAAEzV,iBAAiB,GAAG,IAAIyV,OAAO,EAAE,EAAExV,cAAc,GAAG,IAAIwV,OAAO,EAAE,EAAEvV,wBAAwB,GAAG,IAAIuV,OAAO,EAAE,EAAEtV,oBAAoB,GAAG,IAAIsV,OAAO,EAAE,EAAErV,sBAAsB,GAAG,IAAIqV,OAAO,EAAE,EAAEpV,qBAAqB,GAAG,IAAIoV,OAAO,EAAE,EAAEnV,yBAAyB,GAAG,IAAImV,OAAO,EAAE,EAAElV,gBAAgB,GAAG,IAAIkV,OAAO,EAAE,EAAEjV,iBAAiB,GAAG,IAAIiV,OAAO,EAAE,EAAEhV,iBAAiB,GAAG,IAAIgV,OAAO,EAAE,EAAE/U,0BAA0B,GAAG,IAAI+U,OAAO,EAAE,EAAE9U,iBAAiB,GAAG,IAAI8U,OAAO,EAAE,EAAE7U,4BAA4B,GAAG,IAAI6U,OAAO,EAAE,EAAE5U,gBAAgB,GAAG,IAAI4U,OAAO,EAAE,EAAE3U,4BAA4B,GAAG,IAAI2U,OAAO,EAAE,EAAE1U,0BAA0B,GAAG,IAAI0U,OAAO,EAAE,EAAEzU,oCAAoC,GAAG,IAAIyU,OAAO,EAAE,EAAExU,6BAA6B,GAAG,IAAIwU,OAAO,EAAE,EAAEvU,2BAA2B,GAAG,IAAIuU,OAAO,EAAE,EAAE7V,kBAAkB,GAAG,IAAI8V,OAAO,EAAE,EAAEvU,mBAAmB;EAAA,6CAAG,aAAqC;IAC97B,IAAI;MACA,MAAM+G,OAAO,CAACC,GAAG,CAAC,CACdnJ,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACsV,UAAU,EAAE,EACrE3W,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oBAAoB,CAAC,EAC7EhJ,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,YAAY,CAAC,CACxE,CAAC;IACN,CAAC,CACD,OAAOjD,GAAG,EAAE;MACR,IAAIzC,WAAW,CAACyC,GAAG,CAAC,IAAIrC,mBAAmB,CAACqC,GAAG,CAAC,EAAE;QAC9CrB,UAAU,CAACqB,GAAG,CAAC;MACnB,CAAC,MACI;QACD,MAAMA,GAAG;MACb;IACJ;EACJ,CAAC;EAAA,SAhB26B5D,mBAAmB;IAAA;EAAA;EAAA,OAAnBA,mBAAmB;AAAA,GAgB97B,EAAEC,sBAAsB;EAAA,gDAAG,WAAsCkF,KAAK,EAAE;IACrE,IAAI,CAACtH,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,CAAC6G,IAAI,EAAE;MACvE;IACJ;IACA,MAAMoF,KAAK,GAAG/N,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC0M,KAAK,CAACzG,KAAK,CAACsP,OAAO,CAAC;IAC3FxT,MAAM,CAAC2K,KAAK,EAAE,2BAA2B,CAAC;IAC1C;IACA,MAAM8I,MAAM,SAAU9I,KAAK,CAAC+I,MAAM,CAACzS,UAAU,CAAC,CAAC0S,gBAAgB,CAACzP,KAAK,CAAC0P,aAAa,CAAE;IACrF,MAAMC,WAAW,GAAG,IAAIlT,WAAW,CAAC8S,MAAM,EAAEvP,KAAK,CAAC;IAClD,KAAK,MAAMuB,OAAO,IAAI7I,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,EAAE;MACnF+G,OAAO,CAACkH,OAAO,CAACkH,WAAW,CAAC;IAChC;IACAjX,sBAAsB,CAAC,IAAI,EAAE8B,4BAA4B,EAAE,GAAG,CAAC,CAACoV,KAAK,EAAE;EAC3E,CAAC;EAAA,SAb0C9U,sBAAsB;IAAA;EAAA;EAAA,OAAtBA,sBAAsB;AAAA,GAahE,EAAEC,wBAAwB,GAAG,SAASA,wBAAwB,GAAG;EAC9D,IAAI,CAACqE,IAAI,CAAC,OAAO,EAAE,IAAIiD,KAAK,CAAC,eAAe,CAAC,CAAC;AAClD,CAAC,EAAErH,wBAAwB,GAAG,SAASA,wBAAwB,CAACgF,KAAK,EAAE;EACnE,MAAM;IAAE6P,KAAK;IAAElB,IAAI;IAAE3K,IAAI;IAAEwC,MAAM;IAAE9G,GAAG;IAAEoQ;EAAW,CAAC,GAAG9P,KAAK,CAAC+P,KAAK;EAClE,IAAI/L,IAAI,EAAE;IACNA,IAAI,CAACqB,GAAG,CAAC2K,GAAG,IAAI;MACZ,OAAOrS,aAAa,CAACjF,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,EAAEwW,GAAG,CAAC;IACjF,CAAC,CAAC;EACN;EACA,IAAIxJ,MAAM,KAAK,QAAQ,EAAE;IACrB,IAAI,CAACpH,IAAI,CAAC,SAAS,CAAC,iCAAiC,IAAI/C,cAAc,CAACwT,KAAK,EAAElB,IAAI,EAAE,EAAE,EAAE,CAAC;MAAEjP,GAAG;MAAEoQ;IAAW,CAAC,CAAC,CAAC,CAAC;EACpH;AACJ,CAAC,EAAE7U,oBAAoB,GAAG,SAASA,oBAAoB,CAAC+E,KAAK,EAAE;EAC3D,IAAI,CAACZ,IAAI,CAAC,SAAS,CAAC,iCAAiC;IACjD0O,KAAK,EAAE9N,KAAK,CAAC8N,KAAK;IAClB5G,OAAO,EAAExO,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAE4B,2BAA2B,CAAC,CAACjC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAACkH,OAAO;EACxH,CAAC,CAAC;AACN,CAAC,EAAEhM,2BAA2B,GAAG,SAASA,2BAA2B,CAACgM,OAAO,EAAE;EAC3E,MAAMpF,MAAM,GAAG,CAAC,CAAC;EACjB,KAAK,MAAMmO,MAAM,IAAI/I,OAAO,IAAI,EAAE,EAAE;IAChC,IAAIgJ,gBAAgB,CAAClX,GAAG,CAACiX,MAAM,CAAClK,IAAI,CAAC,EAAE;MACnCjE,MAAM,CAACmO,MAAM,CAAClK,IAAI,CAAC,GAAGkK,MAAM,CAAC/W,KAAK;IACtC;EACJ;EACA,OAAO4I,MAAM;AACjB,CAAC,EAAE3G,wBAAwB,GAAG,SAASA,wBAAwB,CAACuF,gBAAgB,EAAE;EAC9E,MAAMc,OAAO,GAAGlE,mBAAmB,CAACoD,gBAAgB,CAAC;EACrD,MAAMjC,GAAG,GAAG,IAAI4D,KAAK,CAACb,OAAO,CAAC;EAC9B/C,GAAG,CAAC0R,KAAK,GAAG,EAAE,CAAC,CAAC;EAChB,IAAI,CAAC/Q,IAAI,CAAC,WAAW,CAAC,mCAAmCX,GAAG,CAAC;AACjE,CAAC,EAAErD,qBAAqB;EAAA,+CAAG,WAAqC4E,KAAK,EAAE;IACnE,IAAIA,KAAK,CAACoQ,kBAAkB,KAAK,CAAC,EAAE;MAChC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;IACA,MAAMnM,OAAO,GAAGvL,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAACsW,uBAAuB,CAACrQ,KAAK,CAACoQ,kBAAkB,EAAE1X,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAAC;IAC9K,IAAI,CAACyK,OAAO,EAAE;MACV7G,UAAU,CAAC,IAAIiF,KAAK,CAAE,qDAAoDiO,IAAI,CAACC,SAAS,CAACvQ,KAAK,CAAE,EAAC,CAAC,CAAC;MACnG;IACJ;IACA,MAAMkD,MAAM,GAAGlD,KAAK,CAACgE,IAAI,CAACqB,GAAG,CAAC2K,GAAG,IAAI;MACjC,OAAO7S,cAAc,CAAC8G,OAAO,EAAE+L,GAAG,CAAC;IACvC,CAAC,CAAC;IACFtX,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEgC,0BAA0B,CAAC,CAACrC,IAAI,CAAC,IAAI,EAAE+G,KAAK,CAACR,IAAI,EAAE0D,MAAM,EAAElD,KAAK,CAACwQ,UAAU,CAAC;EACtI,CAAC;EAAA,SA1ByCpV,qBAAqB;IAAA;EAAA;EAAA,OAArBA,qBAAqB;AAAA,GA0B9D,EAAEC,wBAAwB;EAAA,kDAAG,WAAwC2E,KAAK,EAAE;IACzE,IAAIyQ,OAAO;IACX,IAAI;MACAA,OAAO,GAAGH,IAAI,CAACI,KAAK,CAAC1Q,KAAK,CAACyQ,OAAO,CAAC;IACvC,CAAC,CACD,MAAM;MACF;MACA;MACA;IACJ;IACA,MAAM;MAAEjR,IAAI;MAAEuG,IAAI;MAAE4K,GAAG;MAAE3M,IAAI;MAAE4M;IAAU,CAAC,GAAGH,OAAO;IACpD,IAAIjR,IAAI,KAAK,YAAY,EAAE;MACvB;IACJ;IACA,MAAMyE,OAAO,GAAGvL,sBAAsB,CAAC,IAAI,EAAEqB,qBAAqB,EAAE,GAAG,CAAC,CAAC8W,oBAAoB,CAAC7Q,KAAK,CAACoQ,kBAAkB,EAAE1X,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAAC;IAC3K,IAAI,CAACyK,OAAO,EAAE;MACV;IACJ;IACA,MAAMqC,OAAO,GAAG5N,sBAAsB,CAAC,IAAI,EAAEwB,iBAAiB,EAAE,GAAG,CAAC,CAACf,GAAG,CAAC4M,IAAI,CAAC;IAC9E,MAAOO,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACwK,GAAG,CAAC7M,OAAO,EAAE0M,GAAG,EAAE3M,IAAI,EAAE4M,SAAS,CAAC;EACvG,CAAC;EAAA,SApB4CvV,wBAAwB;IAAA;EAAA;EAAA,OAAxBA,wBAAwB;AAAA,GAoBpE,EAAEC,0BAA0B,GAAG,SAASA,0BAA0B,CAACyV,SAAS,EAAE/M,IAAI,EAAEwM,UAAU,EAAE;EAC7F,IAAI,CAAC,IAAI,CAACQ,aAAa,CAAC,SAAS,CAAC,gCAAgC,EAAE;IAChEhN,IAAI,CAACiN,OAAO,CAACjB,GAAG,IAAI;MAChB,OAAOA,GAAG,CAACkB,OAAO,EAAE;IACxB,CAAC,CAAC;IACF;EACJ;EACA,MAAMC,UAAU,GAAG,EAAE;EACrB,KAAK,MAAMnB,GAAG,IAAIhM,IAAI,EAAE;IACpB,MAAMoN,YAAY,GAAGpB,GAAG,CAACoB,YAAY,EAAE;IACvC,IAAIA,YAAY,CAACC,QAAQ,EAAE;MACvBF,UAAU,CAACG,IAAI,CAACtB,GAAG,CAACuB,QAAQ,EAAE,CAAC;IACnC,CAAC,MACI;MACDJ,UAAU,CAACG,IAAI,CAAC1T,qBAAqB,CAACwT,YAAY,CAAC,CAAC;IACxD;EACJ;EACA,MAAMI,mBAAmB,GAAG,EAAE;EAC9B,IAAIhB,UAAU,EAAE;IACZ,KAAK,MAAMiB,SAAS,IAAIjB,UAAU,CAACkB,UAAU,EAAE;MAC3CF,mBAAmB,CAACF,IAAI,CAAC;QACrB5R,GAAG,EAAE+R,SAAS,CAAC/R,GAAG;QAClBoQ,UAAU,EAAE2B,SAAS,CAAC3B,UAAU;QAChC6B,YAAY,EAAEF,SAAS,CAACE;MAC5B,CAAC,CAAC;IACN;EACJ;EACA,MAAMnQ,OAAO,GAAG,IAAInF,cAAc,CAAC0U,SAAS,EAAEI,UAAU,CAACS,IAAI,CAAC,GAAG,CAAC,EAAE5N,IAAI,EAAEwN,mBAAmB,CAAC;EAC9F,IAAI,CAACpS,IAAI,CAAC,SAAS,CAAC,iCAAiCoC,OAAO,CAAC;AACjE,CAAC,EAAEjG,iBAAiB,GAAG,SAASA,iBAAiB,CAACyE,KAAK,EAAE;EACrD,IAAI6R,UAAU,GAAG,IAAI;EACrB,MAAMC,gBAAgB,GAAG,IAAIjT,GAAG,CAAC,CAC7B,OAAO,EACP,SAAS,EACT,QAAQ,EACR,cAAc,CACjB,CAAC;EACF,IAAIiT,gBAAgB,CAAC9Y,GAAG,CAACgH,KAAK,CAACR,IAAI,CAAC,EAAE;IAClCqS,UAAU,GAAG7R,KAAK,CAACR,IAAI;EAC3B;EACA1D,MAAM,CAAC+V,UAAU,EAAE,kCAAkC,GAAG7R,KAAK,CAACR,IAAI,CAAC;EACnE,MAAMuS,MAAM,GAAG,IAAIxV,MAAM,CAAC7D,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,EAAEqY,UAAU,EAAE7R,KAAK,CAACwB,OAAO,EAAExB,KAAK,CAACgS,aAAa,CAAC;EAC7H,IAAI,CAAC5S,IAAI,CAAC,QAAQ,CAAC,gCAAgC2S,MAAM,CAAC;AAC9D,CAAC,EAAEvW,oCAAoC;AAAA;AACvC;AACA;AACA;AAFA;EAAA,8DAGA,aAAsD;IAClD,MAAM9C,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,6CAA6C,CAAC;EAChH,CAAC;EAAA,SAFclG,oCAAoC;IAAA;EAAA;EAAA,OAApCA,oCAAoC;AAAA,GAElD,EAAEC,sCAAsC;AAAA;AACzC;AACA;AACA;AAFA;EAAA,gEAGA,aAAwD;IACpD,MAAM/C,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,6CAA6C,EAAE;MACzGuQ,KAAK,EAAE;QAAEnJ,CAAC,EAAE,CAAC;QAAEoJ,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MAAE;IACpC,CAAC,CAAC;EACN,CAAC;EAAA,SAJc3W,sCAAsC;IAAA;EAAA;EAAA,OAAtCA,sCAAsC;AAAA,GAIpD,EAAEC,4BAA4B,GAAG,SAASA,4BAA4B,GAAG;EACtE,IAAI,CAAChD,sBAAsB,CAAC,IAAI,EAAE+B,0BAA0B,EAAE,GAAG,CAAC,EAAE;IAChErB,sBAAsB,CAAC,IAAI,EAAEqB,0BAA0B,EAAE,IAAImH,OAAO,CAACyQ,OAAO,IAAI;MAC5E,OAAO3Z,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAAC8Y,IAAI,CAACnW,uBAAuB,CAACoW,YAAY,EAAE,MAAM;QACvG,OAAOF,OAAO,CAAC,IAAIhQ,KAAK,CAAC,eAAe,CAAC,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,GAAG,CAAC;EACZ;EACA,OAAO3J,sBAAsB,CAAC,IAAI,EAAE+B,0BAA0B,EAAE,GAAG,CAAC;AACxE,CAAC,EAAEkB,WAAW;EAAA,qCAAG,WAA2B6W,KAAK,EAAErR,OAAO,EAAE;IACxD,MAAMsR,OAAO,SAAS/Z,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,2BAA2B,CAAC;IAC1G,MAAMqO,KAAK,GAAG0C,OAAO,CAACC,OAAO,CAACD,OAAO,CAACE,YAAY,GAAGH,KAAK,CAAC;IAC3D,IAAI,CAACzC,KAAK,EAAE;MACR,OAAO,IAAI;IACf;IACA,MAAMjO,MAAM,SAASF,OAAO,CAACC,GAAG,CAAC,CAC7B,IAAI,CAAC2F,iBAAiB,CAACrG,OAAO,CAAC,EAC/BzI,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,6BAA6B,EAAE;MAAEkR,OAAO,EAAE7C,KAAK,CAAC9Q;IAAG,CAAC,CAAC,CAChH,CAAC;IACF,OAAO6C,MAAM,CAAC,CAAC,CAAC;EACpB,CAAC;EAAA,SAX+BnG,WAAW;IAAA;EAAA;EAAA,OAAXA,WAAW;AAAA,GAW1C,EAAEC,uBAAuB;EAAA,iDAAG,WAAuCiX,MAAM,EAAE1R,OAAO,GAAG,CAAC,CAAC,EAAE;IACtF,IAAIrC,EAAE,EAAEgU,EAAE;IACV,MAAMpa,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uBAAuB,EAAE;MACnFwM,QAAQ,EAAExV,sBAAsB,CAAC,IAAI,EAAEe,eAAe,EAAE,GAAG,CAAC,CAAC0U;IACjE,CAAC,CAAC;IACF,IAAIxC,IAAI,GAAGxK,OAAO,CAACwK,IAAI,GAAGoH,WAAW,CAAC5R,OAAO,CAACwK,IAAI,CAAC,GAAGnC,SAAS;IAC/D,IAAIwJ,qBAAqB,GAAG,CAAClU,EAAE,GAAGqC,OAAO,CAAC6R,qBAAqB,MAAM,IAAI,IAAIlU,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;IACtG,MAAMmU,WAAW,GAAG9R,OAAO,CAAC8R,WAAW;IACvC,IAAI9R,OAAO,CAACyK,QAAQ,EAAE;MAClB;MACAD,IAAI,GAAGnC,SAAS;MAChB,IAAI,CAACwJ,qBAAqB,EAAE;QACxB,MAAM9L,OAAO,SAASxO,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,uBAAuB,CAAC;QACtG;QACA,MAAM;UAAEqK,KAAK;UAAEC;QAAO,CAAC,GAAG9E,OAAO,CAACgM,cAAc,IAAIhM,OAAO,CAACiM,WAAW;QACvE,MAAM;UAAEC,QAAQ,GAAG,KAAK;UAAEC,iBAAiB,GAAG,CAAC;UAAEC,WAAW,GAAG;QAAO,CAAC,GAAG5a,sBAAsB,CAAC,IAAI,EAAE2B,iBAAiB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;QACpI,MAAMkZ,iBAAiB,GAAGD,WAAW,GAC/B;UAAEE,KAAK,EAAE,EAAE;UAAEhU,IAAI,EAAE;QAAmB,CAAC,GACvC;UAAEgU,KAAK,EAAE,CAAC;UAAEhU,IAAI,EAAE;QAAkB,CAAC;QAC3C,MAAM9G,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,oCAAoC,EAAE;UAChG+R,MAAM,EAAEL,QAAQ;UAChBrH,KAAK;UACLC,MAAM;UACNqH,iBAAiB;UACjBE;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,MACI,IAAI,CAAC5H,IAAI,EAAE;MACZqH,qBAAqB,GAAG,KAAK;IACjC;IACA,MAAMU,0BAA0B,GAAGvS,OAAO,CAAC2L,cAAc,KAAK+F,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,MAAM,CAAC;IACpG,IAAIa,0BAA0B,EAAE;MAC5B,MAAMhb,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEmC,sCAAsC,CAAC,CAACxC,IAAI,CAAC,IAAI,CAAC;IAClH;IACA,MAAM6I,MAAM,SAASpJ,sBAAsB,CAAC,IAAI,EAAEc,eAAe,EAAE,GAAG,CAAC,CAACkI,IAAI,CAAC,wBAAwB,EAAE;MACnGmR,MAAM;MACNrH,OAAO,EAAErK,OAAO,CAACqK,OAAO;MACxBG,IAAI,EAAEA,IAAI,IAAI;QACV,GAAGA,IAAI;QACPa,KAAK,EAAE,CAACsG,EAAE,GAAGnH,IAAI,CAACa,KAAK,MAAM,IAAI,IAAIsG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG;MAC9D,CAAC;MACDE,qBAAqB;MACrBC;IACJ,CAAC,CAAC;IACF,IAAIS,0BAA0B,EAAE;MAC5B,MAAMhb,sBAAsB,CAAC,IAAI,EAAEY,kBAAkB,EAAE,GAAG,EAAEkC,oCAAoC,CAAC,CAACvC,IAAI,CAAC,IAAI,CAAC;IAChH;IACA,IAAIkI,OAAO,CAACyK,QAAQ,IAAIlT,sBAAsB,CAAC,IAAI,EAAE2B,iBAAiB,EAAE,GAAG,CAAC,EAAE;MAC1E,MAAM,IAAI,CAACmE,WAAW,CAAC9F,sBAAsB,CAAC,IAAI,EAAE2B,iBAAiB,EAAE,GAAG,CAAC,CAAC;IAChF;IACA,IAAI8G,OAAO,CAACwS,QAAQ,KAAK,QAAQ,EAAE;MAC/B,OAAO7R,MAAM,CAAC8R,IAAI;IACtB;IACA,MAAM/F,MAAM,GAAGgG,MAAM,CAAC5Q,IAAI,CAACnB,MAAM,CAAC8R,IAAI,EAAE,QAAQ,CAAC;IACjD,MAAM,IAAI,CAACE,uBAAuB,CAAC3S,OAAO,CAAC+J,IAAI,EAAE2C,MAAM,CAAC;IACxD,OAAOA,MAAM;IACb,SAASkF,WAAW,CAACpH,IAAI,EAAE;MACvB,MAAME,CAAC,GAAGkI,IAAI,CAACC,KAAK,CAACrI,IAAI,CAACE,CAAC,CAAC;MAC5B,MAAMC,CAAC,GAAGiI,IAAI,CAACC,KAAK,CAACrI,IAAI,CAACG,CAAC,CAAC;MAC5B,MAAMC,KAAK,GAAGgI,IAAI,CAACC,KAAK,CAACrI,IAAI,CAACI,KAAK,GAAGJ,IAAI,CAACE,CAAC,GAAGA,CAAC,CAAC;MACjD,MAAMG,MAAM,GAAG+H,IAAI,CAACC,KAAK,CAACrI,IAAI,CAACK,MAAM,GAAGL,IAAI,CAACG,CAAC,GAAGA,CAAC,CAAC;MACnD,OAAO;QAAED,CAAC;QAAEC,CAAC;QAAEC,KAAK;QAAEC,MAAM;QAAEQ,KAAK,EAAEb,IAAI,CAACa;MAAM,CAAC;IACrD;EACJ,CAAC;EAAA,SAhE2C5Q,uBAAuB;IAAA;EAAA;EAAA,OAAvBA,uBAAuB;AAAA,GAgElE;AACD,MAAMsU,gBAAgB,GAAG,IAAIrR,GAAG,CAAC,CAC7B,WAAW,EACX,WAAW,EACX,QAAQ,EACR,kBAAkB,EAClB,OAAO,EACP,aAAa,EACb,kBAAkB,EAClB,gBAAgB,EAChB,qBAAqB,EACrB,gBAAgB,EAChB,cAAc,EACd,gBAAgB,EAChB,iBAAiB,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}