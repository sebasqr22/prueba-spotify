{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyByPath = getPropertyByPath;\n\n// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\nfunction getPropertyByPath(source, path) {\n  if (typeof path === 'string' && Object.prototype.hasOwnProperty.call(source, path)) {\n    return source[path];\n  }\n  const parsedPath = typeof path === 'string' ? path.split('.') : path; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return parsedPath.reduce((previous, key) => {\n    if (previous === undefined) {\n      return previous;\n    }\n    return previous[key];\n  }, source);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getPropertyByPath","source","path","prototype","hasOwnProperty","call","parsedPath","split","reduce","previous","key","undefined"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer/node_modules/cosmiconfig/dist/getPropertyByPath.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPropertyByPath = getPropertyByPath;\n\n// Resolves property names or property paths defined with period-delimited\n// strings or arrays of strings. Property names that are found on the source\n// object are used directly (even if they include a period).\n// Nested property names that include periods, within a path, are only\n// understood in array paths.\nfunction getPropertyByPath(source, path) {\n  if (typeof path === 'string' && Object.prototype.hasOwnProperty.call(source, path)) {\n    return source[path];\n  }\n\n  const parsedPath = typeof path === 'string' ? path.split('.') : path; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  return parsedPath.reduce((previous, key) => {\n    if (previous === undefined) {\n      return previous;\n    }\n\n    return previous[key];\n  }, source);\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB;;AAE7C;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAiB,CAACC,MAAM,EAAEC,IAAI,EAAE;EACvC,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIN,MAAM,CAACO,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,IAAI,CAAC,EAAE;IAClF,OAAOD,MAAM,CAACC,IAAI,CAAC;EACrB;EAEA,MAAMI,UAAU,GAAG,OAAOJ,IAAI,KAAK,QAAQ,GAAGA,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,GAAGL,IAAI,CAAC,CAAC;;EAEtE,OAAOI,UAAU,CAACE,MAAM,CAAC,CAACC,QAAQ,EAAEC,GAAG,KAAK;IAC1C,IAAID,QAAQ,KAAKE,SAAS,EAAE;MAC1B,OAAOF,QAAQ;IACjB;IAEA,OAAOA,QAAQ,CAACC,GAAG,CAAC;EACtB,CAAC,EAAET,MAAM,CAAC;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}