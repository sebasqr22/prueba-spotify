{"ast":null,"code":"/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _FrameTree_frames, _FrameTree_parentIds, _FrameTree_childIds, _FrameTree_mainFrame, _FrameTree_waitRequests;\nimport { createDeferredPromise } from '../util/DeferredPromise.js';\n/**\n * Keeps track of the page frame tree and it's is managed by\n * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it\n * means that referenced frames might not be in the tree anymore. Thus, the tree\n * structure is eventually consistent.\n * @internal\n */\nexport class FrameTree {\n  constructor() {\n    _FrameTree_frames.set(this, new Map());\n    // frameID -> parentFrameID\n    _FrameTree_parentIds.set(this, new Map());\n    // frameID -> childFrameIDs\n    _FrameTree_childIds.set(this, new Map());\n    _FrameTree_mainFrame.set(this, void 0);\n    _FrameTree_waitRequests.set(this, new Map());\n  }\n  getMainFrame() {\n    return __classPrivateFieldGet(this, _FrameTree_mainFrame, \"f\");\n  }\n  getById(frameId) {\n    return __classPrivateFieldGet(this, _FrameTree_frames, \"f\").get(frameId);\n  }\n  /**\n   * Returns a promise that is resolved once the frame with\n   * the given ID is added to the tree.\n   */\n  waitForFrame(frameId) {\n    const frame = this.getById(frameId);\n    if (frame) {\n      return Promise.resolve(frame);\n    }\n    const deferred = createDeferredPromise();\n    const callbacks = __classPrivateFieldGet(this, _FrameTree_waitRequests, \"f\").get(frameId) || new Set();\n    callbacks.add(deferred);\n    return deferred;\n  }\n  frames() {\n    return Array.from(__classPrivateFieldGet(this, _FrameTree_frames, \"f\").values());\n  }\n  addFrame(frame) {\n    var _a;\n    __classPrivateFieldGet(this, _FrameTree_frames, \"f\").set(frame._id, frame);\n    if (frame._parentId) {\n      __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").set(frame._id, frame._parentId);\n      if (!__classPrivateFieldGet(this, _FrameTree_childIds, \"f\").has(frame._parentId)) {\n        __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").set(frame._parentId, new Set());\n      }\n      __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frame._parentId).add(frame._id);\n    } else {\n      __classPrivateFieldSet(this, _FrameTree_mainFrame, frame, \"f\");\n    }\n    (_a = __classPrivateFieldGet(this, _FrameTree_waitRequests, \"f\").get(frame._id)) === null || _a === void 0 ? void 0 : _a.forEach(request => {\n      return request.resolve(frame);\n    });\n  }\n  removeFrame(frame) {\n    var _a;\n    __classPrivateFieldGet(this, _FrameTree_frames, \"f\").delete(frame._id);\n    __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").delete(frame._id);\n    if (frame._parentId) {\n      (_a = __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frame._parentId)) === null || _a === void 0 ? void 0 : _a.delete(frame._id);\n    } else {\n      __classPrivateFieldSet(this, _FrameTree_mainFrame, undefined, \"f\");\n    }\n  }\n  childFrames(frameId) {\n    const childIds = __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frameId);\n    if (!childIds) {\n      return [];\n    }\n    return Array.from(childIds).map(id => {\n      return this.getById(id);\n    }).filter(frame => {\n      return frame !== undefined;\n    });\n  }\n  parentFrame(frameId) {\n    const parentId = __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").get(frameId);\n    return parentId ? this.getById(parentId) : undefined;\n  }\n}\n_FrameTree_frames = new WeakMap(), _FrameTree_parentIds = new WeakMap(), _FrameTree_childIds = new WeakMap(), _FrameTree_mainFrame = new WeakMap(), _FrameTree_waitRequests = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","_FrameTree_frames","_FrameTree_parentIds","_FrameTree_childIds","_FrameTree_mainFrame","_FrameTree_waitRequests","createDeferredPromise","FrameTree","constructor","Map","getMainFrame","getById","frameId","waitForFrame","frame","Promise","resolve","deferred","callbacks","Set","add","frames","Array","from","values","addFrame","_a","_id","_parentId","forEach","request","removeFrame","delete","undefined","childFrames","childIds","map","id","filter","parentFrame","parentId","WeakMap"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/FrameTree.js"],"sourcesContent":["/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _FrameTree_frames, _FrameTree_parentIds, _FrameTree_childIds, _FrameTree_mainFrame, _FrameTree_waitRequests;\nimport { createDeferredPromise, } from '../util/DeferredPromise.js';\n/**\n * Keeps track of the page frame tree and it's is managed by\n * {@link FrameManager}. FrameTree uses frame IDs to reference frame and it\n * means that referenced frames might not be in the tree anymore. Thus, the tree\n * structure is eventually consistent.\n * @internal\n */\nexport class FrameTree {\n    constructor() {\n        _FrameTree_frames.set(this, new Map());\n        // frameID -> parentFrameID\n        _FrameTree_parentIds.set(this, new Map());\n        // frameID -> childFrameIDs\n        _FrameTree_childIds.set(this, new Map());\n        _FrameTree_mainFrame.set(this, void 0);\n        _FrameTree_waitRequests.set(this, new Map());\n    }\n    getMainFrame() {\n        return __classPrivateFieldGet(this, _FrameTree_mainFrame, \"f\");\n    }\n    getById(frameId) {\n        return __classPrivateFieldGet(this, _FrameTree_frames, \"f\").get(frameId);\n    }\n    /**\n     * Returns a promise that is resolved once the frame with\n     * the given ID is added to the tree.\n     */\n    waitForFrame(frameId) {\n        const frame = this.getById(frameId);\n        if (frame) {\n            return Promise.resolve(frame);\n        }\n        const deferred = createDeferredPromise();\n        const callbacks = __classPrivateFieldGet(this, _FrameTree_waitRequests, \"f\").get(frameId) || new Set();\n        callbacks.add(deferred);\n        return deferred;\n    }\n    frames() {\n        return Array.from(__classPrivateFieldGet(this, _FrameTree_frames, \"f\").values());\n    }\n    addFrame(frame) {\n        var _a;\n        __classPrivateFieldGet(this, _FrameTree_frames, \"f\").set(frame._id, frame);\n        if (frame._parentId) {\n            __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").set(frame._id, frame._parentId);\n            if (!__classPrivateFieldGet(this, _FrameTree_childIds, \"f\").has(frame._parentId)) {\n                __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").set(frame._parentId, new Set());\n            }\n            __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frame._parentId).add(frame._id);\n        }\n        else {\n            __classPrivateFieldSet(this, _FrameTree_mainFrame, frame, \"f\");\n        }\n        (_a = __classPrivateFieldGet(this, _FrameTree_waitRequests, \"f\").get(frame._id)) === null || _a === void 0 ? void 0 : _a.forEach(request => {\n            return request.resolve(frame);\n        });\n    }\n    removeFrame(frame) {\n        var _a;\n        __classPrivateFieldGet(this, _FrameTree_frames, \"f\").delete(frame._id);\n        __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").delete(frame._id);\n        if (frame._parentId) {\n            (_a = __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frame._parentId)) === null || _a === void 0 ? void 0 : _a.delete(frame._id);\n        }\n        else {\n            __classPrivateFieldSet(this, _FrameTree_mainFrame, undefined, \"f\");\n        }\n    }\n    childFrames(frameId) {\n        const childIds = __classPrivateFieldGet(this, _FrameTree_childIds, \"f\").get(frameId);\n        if (!childIds) {\n            return [];\n        }\n        return Array.from(childIds)\n            .map(id => {\n            return this.getById(id);\n        })\n            .filter((frame) => {\n            return frame !== undefined;\n        });\n    }\n    parentFrame(frameId) {\n        const parentId = __classPrivateFieldGet(this, _FrameTree_parentIds, \"f\").get(frameId);\n        return parentId ? this.getById(parentId) : undefined;\n    }\n}\n_FrameTree_frames = new WeakMap(), _FrameTree_parentIds = new WeakMap(), _FrameTree_childIds = new WeakMap(), _FrameTree_mainFrame = new WeakMap(), _FrameTree_waitRequests = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}