{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _awaitAsyncGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _asyncIterator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementHandle } from '../api/ElementHandle.js';\nimport { assert } from '../util/assert.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { interpolateFunction, stringifyFunction } from '../util/Function.js';\nimport { transposeIterableHandle } from './HandleIterator.js';\nimport { MAIN_WORLD, PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { LazyArg } from './LazyArg.js';\n/**\n * @internal\n */\nexport class QueryHandler {\n  static get _querySelector() {\n    if (this.querySelector) {\n      return this.querySelector;\n    }\n    if (!this.querySelectorAll) {\n      throw new Error('Cannot create default `querySelector`.');\n    }\n    return this.querySelector = interpolateFunction( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (node, selector, PuppeteerUtil) {\n        const querySelectorAll = PLACEHOLDER('querySelectorAll');\n        const results = querySelectorAll(node, selector, PuppeteerUtil);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          for (var _iterator = _asyncIterator(results), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            const result = _step.value;\n            {\n              return result;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        return null;\n      });\n      return function (_x4, _x5, _x6) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), {\n      querySelectorAll: stringifyFunction(this.querySelectorAll)\n    });\n  }\n  static get _querySelectorAll() {\n    if (this.querySelectorAll) {\n      return this.querySelectorAll;\n    }\n    if (!this.querySelector) {\n      throw new Error('Cannot create default `querySelectorAll`.');\n    }\n    return this.querySelectorAll = interpolateFunction( /*#__PURE__*/function () {\n      var _ref = _wrapAsyncGenerator(function* (node, selector, PuppeteerUtil) {\n        const querySelector = PLACEHOLDER('querySelector');\n        const result = yield _awaitAsyncGenerator(querySelector(node, selector, PuppeteerUtil));\n        if (result) {\n          yield result;\n        }\n      });\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }(), {\n      querySelector: stringifyFunction(this.querySelector)\n    });\n  }\n  /**\n   * Queries for multiple nodes given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n   */\n  static queryAll(element, selector) {\n    var _this = this;\n    return _wrapAsyncGenerator(function* () {\n      const world = element.executionContext()._world;\n      assert(world);\n      const handle = yield _awaitAsyncGenerator(element.evaluateHandle(_this._querySelectorAll, selector, LazyArg.create(context => {\n        return context.puppeteerUtil;\n      })));\n      yield* _asyncGeneratorDelegate(_asyncIterator(transposeIterableHandle(handle)), _awaitAsyncGenerator);\n    })();\n  }\n  /**\n   * Queries for a single node given a selector and {@link ElementHandle}.\n   *\n   * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n   */\n  static queryOne(element, selector) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const world = element.executionContext()._world;\n      assert(world);\n      const result = yield element.evaluateHandle(_this2._querySelector, selector, LazyArg.create(context => {\n        return context.puppeteerUtil;\n      }));\n      if (!(result instanceof ElementHandle)) {\n        yield result.dispose();\n        return null;\n      }\n      return result;\n    })();\n  }\n  /**\n   * Waits until a single node appears for a given selector and\n   * {@link ElementHandle}.\n   *\n   * This will always query the handle in the Puppeteer world and migrate the\n   * result to the main world.\n   */\n  static waitFor(elementOrFrame, selector, options) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let frame;\n      let element;\n      if (!(elementOrFrame instanceof ElementHandle)) {\n        frame = elementOrFrame;\n      } else {\n        frame = elementOrFrame.frame;\n        element = yield frame.worlds[PUPPETEER_WORLD].adoptHandle(elementOrFrame);\n      }\n      const {\n        visible = false,\n        hidden = false,\n        timeout\n      } = options;\n      try {\n        const handle = yield frame.worlds[PUPPETEER_WORLD].waitForFunction( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator(function* (PuppeteerUtil, query, selector, root, visible) {\n            const querySelector = PuppeteerUtil.createFunction(query);\n            const node = yield querySelector(root !== null && root !== void 0 ? root : document, selector, PuppeteerUtil);\n            return PuppeteerUtil.checkVisibility(node, visible);\n          });\n          return function (_x7, _x8, _x9, _x10, _x11) {\n            return _ref3.apply(this, arguments);\n          };\n        }(), {\n          polling: visible || hidden ? 'raf' : 'mutation',\n          root: element,\n          timeout\n        }, LazyArg.create(context => {\n          return context.puppeteerUtil;\n        }), stringifyFunction(_this3._querySelector), selector, element, visible ? true : hidden ? false : undefined);\n        if (!(handle instanceof ElementHandle)) {\n          yield handle.dispose();\n          return null;\n        }\n        return frame.worlds[MAIN_WORLD].transferHandle(handle);\n      } catch (error) {\n        if (!isErrorLike(error)) {\n          throw error;\n        }\n        error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n        throw error;\n      } finally {\n        if (element) {\n          yield element.dispose();\n        }\n      }\n    })();\n  }\n}","map":{"version":3,"names":["ElementHandle","assert","isErrorLike","interpolateFunction","stringifyFunction","transposeIterableHandle","MAIN_WORLD","PUPPETEER_WORLD","LazyArg","QueryHandler","_querySelector","querySelector","querySelectorAll","Error","node","selector","PuppeteerUtil","PLACEHOLDER","results","result","_querySelectorAll","queryAll","element","world","executionContext","_world","handle","evaluateHandle","create","context","puppeteerUtil","queryOne","dispose","waitFor","elementOrFrame","options","frame","worlds","adoptHandle","visible","hidden","timeout","waitForFunction","query","root","createFunction","document","checkVisibility","polling","undefined","transferHandle","error","message"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/QueryHandler.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ElementHandle } from '../api/ElementHandle.js';\nimport { assert } from '../util/assert.js';\nimport { isErrorLike } from '../util/ErrorLike.js';\nimport { interpolateFunction, stringifyFunction } from '../util/Function.js';\nimport { transposeIterableHandle } from './HandleIterator.js';\nimport { MAIN_WORLD, PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { LazyArg } from './LazyArg.js';\n/**\n * @internal\n */\nexport class QueryHandler {\n    static get _querySelector() {\n        if (this.querySelector) {\n            return this.querySelector;\n        }\n        if (!this.querySelectorAll) {\n            throw new Error('Cannot create default `querySelector`.');\n        }\n        return (this.querySelector = interpolateFunction(async (node, selector, PuppeteerUtil) => {\n            const querySelectorAll = PLACEHOLDER('querySelectorAll');\n            const results = querySelectorAll(node, selector, PuppeteerUtil);\n            for await (const result of results) {\n                return result;\n            }\n            return null;\n        }, {\n            querySelectorAll: stringifyFunction(this.querySelectorAll),\n        }));\n    }\n    static get _querySelectorAll() {\n        if (this.querySelectorAll) {\n            return this.querySelectorAll;\n        }\n        if (!this.querySelector) {\n            throw new Error('Cannot create default `querySelectorAll`.');\n        }\n        return (this.querySelectorAll = interpolateFunction(async function* (node, selector, PuppeteerUtil) {\n            const querySelector = PLACEHOLDER('querySelector');\n            const result = await querySelector(node, selector, PuppeteerUtil);\n            if (result) {\n                yield result;\n            }\n        }, {\n            querySelector: stringifyFunction(this.querySelector),\n        }));\n    }\n    /**\n     * Queries for multiple nodes given a selector and {@link ElementHandle}.\n     *\n     * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll | Document.querySelectorAll()}.\n     */\n    static async *queryAll(element, selector) {\n        const world = element.executionContext()._world;\n        assert(world);\n        const handle = await element.evaluateHandle(this._querySelectorAll, selector, LazyArg.create(context => {\n            return context.puppeteerUtil;\n        }));\n        yield* transposeIterableHandle(handle);\n    }\n    /**\n     * Queries for a single node given a selector and {@link ElementHandle}.\n     *\n     * Akin to {@link https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector}.\n     */\n    static async queryOne(element, selector) {\n        const world = element.executionContext()._world;\n        assert(world);\n        const result = await element.evaluateHandle(this._querySelector, selector, LazyArg.create(context => {\n            return context.puppeteerUtil;\n        }));\n        if (!(result instanceof ElementHandle)) {\n            await result.dispose();\n            return null;\n        }\n        return result;\n    }\n    /**\n     * Waits until a single node appears for a given selector and\n     * {@link ElementHandle}.\n     *\n     * This will always query the handle in the Puppeteer world and migrate the\n     * result to the main world.\n     */\n    static async waitFor(elementOrFrame, selector, options) {\n        let frame;\n        let element;\n        if (!(elementOrFrame instanceof ElementHandle)) {\n            frame = elementOrFrame;\n        }\n        else {\n            frame = elementOrFrame.frame;\n            element = await frame.worlds[PUPPETEER_WORLD].adoptHandle(elementOrFrame);\n        }\n        const { visible = false, hidden = false, timeout } = options;\n        try {\n            const handle = await frame.worlds[PUPPETEER_WORLD].waitForFunction(async (PuppeteerUtil, query, selector, root, visible) => {\n                const querySelector = PuppeteerUtil.createFunction(query);\n                const node = await querySelector(root !== null && root !== void 0 ? root : document, selector, PuppeteerUtil);\n                return PuppeteerUtil.checkVisibility(node, visible);\n            }, {\n                polling: visible || hidden ? 'raf' : 'mutation',\n                root: element,\n                timeout,\n            }, LazyArg.create(context => {\n                return context.puppeteerUtil;\n            }), stringifyFunction(this._querySelector), selector, element, visible ? true : hidden ? false : undefined);\n            if (!(handle instanceof ElementHandle)) {\n                await handle.dispose();\n                return null;\n            }\n            return frame.worlds[MAIN_WORLD].transferHandle(handle);\n        }\n        catch (error) {\n            if (!isErrorLike(error)) {\n                throw error;\n            }\n            error.message = `Waiting for selector \\`${selector}\\` failed: ${error.message}`;\n            throw error;\n        }\n        finally {\n            if (element) {\n                await element.dispose();\n            }\n        }\n    }\n}\n"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC5E,SAASC,uBAAuB,QAAQ,qBAAqB;AAC7D,SAASC,UAAU,EAAEC,eAAe,QAAQ,qBAAqB;AACjE,SAASC,OAAO,QAAQ,cAAc;AACtC;AACA;AACA;AACA,OAAO,MAAMC,YAAY,CAAC;EACtB,WAAWC,cAAc,GAAG;IACxB,IAAI,IAAI,CAACC,aAAa,EAAE;MACpB,OAAO,IAAI,CAACA,aAAa;IAC7B;IACA,IAAI,CAAC,IAAI,CAACC,gBAAgB,EAAE;MACxB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC7D;IACA,OAAQ,IAAI,CAACF,aAAa,GAAGR,mBAAmB;MAAA,8BAAC,WAAOW,IAAI,EAAEC,QAAQ,EAAEC,aAAa,EAAK;QACtF,MAAMJ,gBAAgB,GAAGK,WAAW,CAAC,kBAAkB,CAAC;QACxD,MAAMC,OAAO,GAAGN,gBAAgB,CAACE,IAAI,EAAEC,QAAQ,EAAEC,aAAa,CAAC;QAAC;QAAA;QAAA;QAAA;UAChE,oCAA2BE,OAAO,iHAAE;YAAA,MAAnBC,MAAM;YAAA;cACnB,OAAOA,MAAM;YAAC;UAClB;QAAC;UAAA;UAAA;QAAA;UAAA;YAAA;cAAA;YAAA;UAAA;YAAA;cAAA;YAAA;UAAA;QAAA;QACD,OAAO,IAAI;MACf,CAAC;MAAA;QAAA;MAAA;IAAA,KAAE;MACCP,gBAAgB,EAAER,iBAAiB,CAAC,IAAI,CAACQ,gBAAgB;IAC7D,CAAC,CAAC;EACN;EACA,WAAWQ,iBAAiB,GAAG;IAC3B,IAAI,IAAI,CAACR,gBAAgB,EAAE;MACvB,OAAO,IAAI,CAACA,gBAAgB;IAChC;IACA,IAAI,CAAC,IAAI,CAACD,aAAa,EAAE;MACrB,MAAM,IAAIE,KAAK,CAAC,2CAA2C,CAAC;IAChE;IACA,OAAQ,IAAI,CAACD,gBAAgB,GAAGT,mBAAmB;MAAA,+BAAC,WAAiBW,IAAI,EAAEC,QAAQ,EAAEC,aAAa,EAAE;QAChG,MAAML,aAAa,GAAGM,WAAW,CAAC,eAAe,CAAC;QAClD,MAAME,MAAM,8BAASR,aAAa,CAACG,IAAI,EAAEC,QAAQ,EAAEC,aAAa,CAAC;QACjE,IAAIG,MAAM,EAAE;UACR,MAAMA,MAAM;QAChB;MACJ,CAAC;MAAA;QAAA;MAAA;IAAA,KAAE;MACCR,aAAa,EAAEP,iBAAiB,CAAC,IAAI,CAACO,aAAa;IACvD,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACI,OAAcU,QAAQ,CAACC,OAAO,EAAEP,QAAQ,EAAE;IAAA;IAAA;MACtC,MAAMQ,KAAK,GAAGD,OAAO,CAACE,gBAAgB,EAAE,CAACC,MAAM;MAC/CxB,MAAM,CAACsB,KAAK,CAAC;MACb,MAAMG,MAAM,8BAASJ,OAAO,CAACK,cAAc,CAAC,KAAI,CAACP,iBAAiB,EAAEL,QAAQ,EAAEP,OAAO,CAACoB,MAAM,CAACC,OAAO,IAAI;QACpG,OAAOA,OAAO,CAACC,aAAa;MAChC,CAAC,CAAC,CAAC;MACH,8CAAOzB,uBAAuB,CAACqB,MAAM,CAAC;IAAC;EAC3C;EACA;AACJ;AACA;AACA;AACA;EACI,OAAaK,QAAQ,CAACT,OAAO,EAAEP,QAAQ,EAAE;IAAA;IAAA;MACrC,MAAMQ,KAAK,GAAGD,OAAO,CAACE,gBAAgB,EAAE,CAACC,MAAM;MAC/CxB,MAAM,CAACsB,KAAK,CAAC;MACb,MAAMJ,MAAM,SAASG,OAAO,CAACK,cAAc,CAAC,MAAI,CAACjB,cAAc,EAAEK,QAAQ,EAAEP,OAAO,CAACoB,MAAM,CAACC,OAAO,IAAI;QACjG,OAAOA,OAAO,CAACC,aAAa;MAChC,CAAC,CAAC,CAAC;MACH,IAAI,EAAEX,MAAM,YAAYnB,aAAa,CAAC,EAAE;QACpC,MAAMmB,MAAM,CAACa,OAAO,EAAE;QACtB,OAAO,IAAI;MACf;MACA,OAAOb,MAAM;IAAC;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAac,OAAO,CAACC,cAAc,EAAEnB,QAAQ,EAAEoB,OAAO,EAAE;IAAA;IAAA;MACpD,IAAIC,KAAK;MACT,IAAId,OAAO;MACX,IAAI,EAAEY,cAAc,YAAYlC,aAAa,CAAC,EAAE;QAC5CoC,KAAK,GAAGF,cAAc;MAC1B,CAAC,MACI;QACDE,KAAK,GAAGF,cAAc,CAACE,KAAK;QAC5Bd,OAAO,SAASc,KAAK,CAACC,MAAM,CAAC9B,eAAe,CAAC,CAAC+B,WAAW,CAACJ,cAAc,CAAC;MAC7E;MACA,MAAM;QAAEK,OAAO,GAAG,KAAK;QAAEC,MAAM,GAAG,KAAK;QAAEC;MAAQ,CAAC,GAAGN,OAAO;MAC5D,IAAI;QACA,MAAMT,MAAM,SAASU,KAAK,CAACC,MAAM,CAAC9B,eAAe,CAAC,CAACmC,eAAe;UAAA,8BAAC,WAAO1B,aAAa,EAAE2B,KAAK,EAAE5B,QAAQ,EAAE6B,IAAI,EAAEL,OAAO,EAAK;YACxH,MAAM5B,aAAa,GAAGK,aAAa,CAAC6B,cAAc,CAACF,KAAK,CAAC;YACzD,MAAM7B,IAAI,SAASH,aAAa,CAACiC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAGE,QAAQ,EAAE/B,QAAQ,EAAEC,aAAa,CAAC;YAC7G,OAAOA,aAAa,CAAC+B,eAAe,CAACjC,IAAI,EAAEyB,OAAO,CAAC;UACvD,CAAC;UAAA;YAAA;UAAA;QAAA,KAAE;UACCS,OAAO,EAAET,OAAO,IAAIC,MAAM,GAAG,KAAK,GAAG,UAAU;UAC/CI,IAAI,EAAEtB,OAAO;UACbmB;QACJ,CAAC,EAAEjC,OAAO,CAACoB,MAAM,CAACC,OAAO,IAAI;UACzB,OAAOA,OAAO,CAACC,aAAa;QAChC,CAAC,CAAC,EAAE1B,iBAAiB,CAAC,MAAI,CAACM,cAAc,CAAC,EAAEK,QAAQ,EAAEO,OAAO,EAAEiB,OAAO,GAAG,IAAI,GAAGC,MAAM,GAAG,KAAK,GAAGS,SAAS,CAAC;QAC3G,IAAI,EAAEvB,MAAM,YAAY1B,aAAa,CAAC,EAAE;UACpC,MAAM0B,MAAM,CAACM,OAAO,EAAE;UACtB,OAAO,IAAI;QACf;QACA,OAAOI,KAAK,CAACC,MAAM,CAAC/B,UAAU,CAAC,CAAC4C,cAAc,CAACxB,MAAM,CAAC;MAC1D,CAAC,CACD,OAAOyB,KAAK,EAAE;QACV,IAAI,CAACjD,WAAW,CAACiD,KAAK,CAAC,EAAE;UACrB,MAAMA,KAAK;QACf;QACAA,KAAK,CAACC,OAAO,GAAI,0BAAyBrC,QAAS,cAAaoC,KAAK,CAACC,OAAQ,EAAC;QAC/E,MAAMD,KAAK;MACf,CAAC,SACO;QACJ,IAAI7B,OAAO,EAAE;UACT,MAAMA,OAAO,CAACU,OAAO,EAAE;QAC3B;MACJ;IAAC;EACL;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}