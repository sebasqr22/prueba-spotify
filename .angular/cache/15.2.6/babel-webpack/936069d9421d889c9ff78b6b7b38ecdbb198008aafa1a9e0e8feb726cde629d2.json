{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = readFile;\nexports.readFileSync = readFileSync;\nvar _fs = _interopRequireDefault(require(\"fs\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction fsReadFileAsync(_x, _x2) {\n  return _fsReadFileAsync.apply(this, arguments);\n}\nfunction _fsReadFileAsync() {\n  _fsReadFileAsync = _asyncToGenerator(function* (pathname, encoding) {\n    return new Promise((resolve, reject) => {\n      _fs.default.readFile(pathname, encoding, (error, contents) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(contents);\n      });\n    });\n  });\n  return _fsReadFileAsync.apply(this, arguments);\n}\nfunction readFile(_x3) {\n  return _readFile.apply(this, arguments);\n}\nfunction _readFile() {\n  _readFile = _asyncToGenerator(function* (filepath, options = {}) {\n    const throwNotFound = options.throwNotFound === true;\n    try {\n      const content = yield fsReadFileAsync(filepath, 'utf8');\n      return content;\n    } catch (error) {\n      if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n        return null;\n      }\n      throw error;\n    }\n  });\n  return _readFile.apply(this, arguments);\n}\nfunction readFileSync(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n  try {\n    const content = _fs.default.readFileSync(filepath, 'utf8');\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n    throw error;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","readFile","readFileSync","_fs","_interopRequireDefault","require","obj","__esModule","default","fsReadFileAsync","pathname","encoding","Promise","resolve","reject","error","contents","filepath","options","throwNotFound","content","code"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer/node_modules/cosmiconfig/dist/readFile.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = readFile;\nexports.readFileSync = readFileSync;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function fsReadFileAsync(pathname, encoding) {\n  return new Promise((resolve, reject) => {\n    _fs.default.readFile(pathname, encoding, (error, contents) => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      resolve(contents);\n    });\n  });\n}\n\nasync function readFile(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = await fsReadFileAsync(filepath, 'utf8');\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nfunction readFileSync(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = _fs.default.readFileSync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAC;AAEbA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAC3BF,OAAO,CAACG,YAAY,GAAGA,YAAY;AAEnC,IAAIC,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAI,CAAC,CAAC;AAE/C,SAASD,sBAAsB,CAACE,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAAC,SAEhFG,eAAe;EAAA;AAAA;AAAA;EAAA,qCAA9B,WAA+BC,QAAQ,EAAEC,QAAQ,EAAE;IACjD,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCX,GAAG,CAACK,OAAO,CAACP,QAAQ,CAACS,QAAQ,EAAEC,QAAQ,EAAE,CAACI,KAAK,EAAEC,QAAQ,KAAK;QAC5D,IAAID,KAAK,EAAE;UACTD,MAAM,CAACC,KAAK,CAAC;UACb;QACF;QAEAF,OAAO,CAACG,QAAQ,CAAC;MACnB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;EAAA;AAAA;AAAA,SAEcf,QAAQ;EAAA;AAAA;AAAA;EAAA,8BAAvB,WAAwBgB,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9C,MAAMC,aAAa,GAAGD,OAAO,CAACC,aAAa,KAAK,IAAI;IAEpD,IAAI;MACF,MAAMC,OAAO,SAASX,eAAe,CAACQ,QAAQ,EAAE,MAAM,CAAC;MACvD,OAAOG,OAAO;IAChB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,IAAII,aAAa,KAAK,KAAK,KAAKJ,KAAK,CAACM,IAAI,KAAK,QAAQ,IAAIN,KAAK,CAACM,IAAI,KAAK,QAAQ,CAAC,EAAE;QACnF,OAAO,IAAI;MACb;MAEA,MAAMN,KAAK;IACb;EACF,CAAC;EAAA;AAAA;AAED,SAASb,YAAY,CAACe,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC5C,MAAMC,aAAa,GAAGD,OAAO,CAACC,aAAa,KAAK,IAAI;EAEpD,IAAI;IACF,MAAMC,OAAO,GAAGjB,GAAG,CAACK,OAAO,CAACN,YAAY,CAACe,QAAQ,EAAE,MAAM,CAAC;IAE1D,OAAOG,OAAO;EAChB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACd,IAAII,aAAa,KAAK,KAAK,KAAKJ,KAAK,CAACM,IAAI,KAAK,QAAQ,IAAIN,KAAK,CAACM,IAAI,KAAK,QAAQ,CAAC,EAAE;MACnF,OAAO,IAAI;IACb;IAEA,MAAMN,KAAK;EACb;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}