{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExplorerSync = void 0;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _cacheWrapper = require(\"./cacheWrapper\");\nvar _ExplorerBase = require(\"./ExplorerBase\");\nvar _getDirectory = require(\"./getDirectory\");\nvar _readFile = require(\"./readFile\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass ExplorerSync extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n  searchSync(searchFrom = process.cwd()) {\n    if (this.config.metaConfigFilePath) {\n      const config = this._loadFileSync(this.config.metaConfigFilePath, true);\n      if (config && !config.isEmpty) {\n        return config;\n      }\n    }\n    return this.searchFromDirectorySync((0, _getDirectory.getDirectorySync)(searchFrom));\n  }\n  searchFromDirectorySync(dir) {\n    const absoluteDir = _path.default.resolve(process.cwd(), dir);\n    const run = () => {\n      const result = this.searchDirectorySync(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n      if (nextDir) {\n        return this.searchFromDirectorySync(nextDir);\n      }\n      return this.config.transform(result);\n    };\n    if (this.searchCache) {\n      return (0, _cacheWrapper.cacheWrapperSync)(this.searchCache, absoluteDir, run);\n    }\n    return run();\n  }\n  searchDirectorySync(dir) {\n    for (const place of this.config.searchPlaces) {\n      const placeResult = this.loadSearchPlaceSync(dir, place);\n      if (this.shouldSearchStopWithResult(placeResult)) {\n        return placeResult;\n      }\n    } // config not found\n\n    return null;\n  }\n  loadSearchPlaceSync(dir, place) {\n    const filepath = _path.default.join(dir, place);\n    const content = (0, _readFile.readFileSync)(filepath);\n    return this.createCosmiconfigResultSync(filepath, content, false);\n  }\n  loadFileContentSync(filepath, content) {\n    if (content === null) {\n      return null;\n    }\n    if (content.trim() === '') {\n      return undefined;\n    }\n    const loader = this.getLoaderEntryForFile(filepath);\n    try {\n      return loader(filepath, content);\n    } catch (e) {\n      e.filepath = filepath;\n      throw e;\n    }\n  }\n  createCosmiconfigResultSync(filepath, content, forceProp) {\n    const fileContent = this.loadFileContentSync(filepath, content);\n    return this.loadedContentToCosmiconfigResult(filepath, fileContent, forceProp);\n  }\n  loadSync(filepath) {\n    return this._loadFileSync(filepath, false);\n  }\n  _loadFileSync(filepath, forceProp) {\n    this.validateFilePath(filepath);\n    const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n    const runLoadSync = () => {\n      const content = (0, _readFile.readFileSync)(absoluteFilePath, {\n        throwNotFound: true\n      });\n      const cosmiconfigResult = this.createCosmiconfigResultSync(absoluteFilePath, content, forceProp);\n      return this.config.transform(cosmiconfigResult);\n    };\n    if (this.loadCache) {\n      return (0, _cacheWrapper.cacheWrapperSync)(this.loadCache, absoluteFilePath, runLoadSync);\n    }\n    return runLoadSync();\n  }\n}\nexports.ExplorerSync = ExplorerSync;","map":{"version":3,"names":["Object","defineProperty","exports","value","ExplorerSync","_path","_interopRequireDefault","require","_cacheWrapper","_ExplorerBase","_getDirectory","_readFile","obj","__esModule","default","ExplorerBase","constructor","options","searchSync","searchFrom","process","cwd","config","metaConfigFilePath","_loadFileSync","isEmpty","searchFromDirectorySync","getDirectorySync","dir","absoluteDir","resolve","run","result","searchDirectorySync","nextDir","nextDirectoryToSearch","transform","searchCache","cacheWrapperSync","place","searchPlaces","placeResult","loadSearchPlaceSync","shouldSearchStopWithResult","filepath","join","content","readFileSync","createCosmiconfigResultSync","loadFileContentSync","trim","undefined","loader","getLoaderEntryForFile","e","forceProp","fileContent","loadedContentToCosmiconfigResult","loadSync","validateFilePath","absoluteFilePath","runLoadSync","throwNotFound","cosmiconfigResult","loadCache"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer/node_modules/cosmiconfig/dist/ExplorerSync.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExplorerSync = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _cacheWrapper = require(\"./cacheWrapper\");\n\nvar _ExplorerBase = require(\"./ExplorerBase\");\n\nvar _getDirectory = require(\"./getDirectory\");\n\nvar _readFile = require(\"./readFile\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass ExplorerSync extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n\n  searchSync(searchFrom = process.cwd()) {\n    if (this.config.metaConfigFilePath) {\n      const config = this._loadFileSync(this.config.metaConfigFilePath, true);\n\n      if (config && !config.isEmpty) {\n        return config;\n      }\n    }\n\n    return this.searchFromDirectorySync((0, _getDirectory.getDirectorySync)(searchFrom));\n  }\n\n  searchFromDirectorySync(dir) {\n    const absoluteDir = _path.default.resolve(process.cwd(), dir);\n\n    const run = () => {\n      const result = this.searchDirectorySync(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectorySync(nextDir);\n      }\n\n      return this.config.transform(result);\n    };\n\n    if (this.searchCache) {\n      return (0, _cacheWrapper.cacheWrapperSync)(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  searchDirectorySync(dir) {\n    for (const place of this.config.searchPlaces) {\n      const placeResult = this.loadSearchPlaceSync(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult)) {\n        return placeResult;\n      }\n    } // config not found\n\n\n    return null;\n  }\n\n  loadSearchPlaceSync(dir, place) {\n    const filepath = _path.default.join(dir, place);\n\n    const content = (0, _readFile.readFileSync)(filepath);\n    return this.createCosmiconfigResultSync(filepath, content, false);\n  }\n\n  loadFileContentSync(filepath, content) {\n    if (content === null) {\n      return null;\n    }\n\n    if (content.trim() === '') {\n      return undefined;\n    }\n\n    const loader = this.getLoaderEntryForFile(filepath);\n\n    try {\n      return loader(filepath, content);\n    } catch (e) {\n      e.filepath = filepath;\n      throw e;\n    }\n  }\n\n  createCosmiconfigResultSync(filepath, content, forceProp) {\n    const fileContent = this.loadFileContentSync(filepath, content);\n    return this.loadedContentToCosmiconfigResult(filepath, fileContent, forceProp);\n  }\n\n  loadSync(filepath) {\n    return this._loadFileSync(filepath, false);\n  }\n\n  _loadFileSync(filepath, forceProp) {\n    this.validateFilePath(filepath);\n\n    const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n\n    const runLoadSync = () => {\n      const content = (0, _readFile.readFileSync)(absoluteFilePath, {\n        throwNotFound: true\n      });\n      const cosmiconfigResult = this.createCosmiconfigResultSync(absoluteFilePath, content, forceProp);\n      return this.config.transform(cosmiconfigResult);\n    };\n\n    if (this.loadCache) {\n      return (0, _cacheWrapper.cacheWrapperSync)(this.loadCache, absoluteFilePath, runLoadSync);\n    }\n\n    return runLoadSync();\n  }\n\n}\n\nexports.ExplorerSync = ExplorerSync;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}