{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { exec as execChildProcess } from 'child_process';\nimport { createReadStream } from 'fs';\nimport { mkdir, readdir } from 'fs/promises';\nimport * as path from 'path';\nimport { promisify } from 'util';\nimport extractZip from 'extract-zip';\nimport tar from 'tar-fs';\nimport bzip from 'unbzip2-stream';\nconst exec = promisify(execChildProcess);\n/**\n * @internal\n */\nexport function unpackArchive(_x, _x2) {\n  return _unpackArchive.apply(this, arguments);\n}\n/**\n * @internal\n */\nfunction _unpackArchive() {\n  _unpackArchive = _asyncToGenerator(function* (archivePath, folderPath) {\n    if (archivePath.endsWith('.zip')) {\n      yield extractZip(archivePath, {\n        dir: folderPath\n      });\n    } else if (archivePath.endsWith('.tar.bz2')) {\n      yield extractTar(archivePath, folderPath);\n    } else if (archivePath.endsWith('.dmg')) {\n      yield mkdir(folderPath);\n      yield installDMG(archivePath, folderPath);\n    } else {\n      throw new Error(`Unsupported archive format: ${archivePath}`);\n    }\n  });\n  return _unpackArchive.apply(this, arguments);\n}\nfunction extractTar(tarPath, folderPath) {\n  return new Promise((fulfill, reject) => {\n    const tarStream = tar.extract(folderPath);\n    tarStream.on('error', reject);\n    tarStream.on('finish', fulfill);\n    const readStream = createReadStream(tarPath);\n    readStream.pipe(bzip()).pipe(tarStream);\n  });\n}\n/**\n * @internal\n */\nfunction installDMG(_x3, _x4) {\n  return _installDMG.apply(this, arguments);\n}\nfunction _installDMG() {\n  _installDMG = _asyncToGenerator(function* (dmgPath, folderPath) {\n    const {\n      stdout\n    } = yield exec(`hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`);\n    const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n    if (!volumes) {\n      throw new Error(`Could not find volume path in ${stdout}`);\n    }\n    const mountPath = volumes[0];\n    try {\n      const fileNames = yield readdir(mountPath);\n      const appName = fileNames.find(item => {\n        return typeof item === 'string' && item.endsWith('.app');\n      });\n      if (!appName) {\n        throw new Error(`Cannot find app in ${mountPath}`);\n      }\n      const mountedPath = path.join(mountPath, appName);\n      yield exec(`cp -R \"${mountedPath}\" \"${folderPath}\"`);\n    } finally {\n      yield exec(`hdiutil detach \"${mountPath}\" -quiet`);\n    }\n  });\n  return _installDMG.apply(this, arguments);\n}","map":{"version":3,"names":["exec","execChildProcess","createReadStream","mkdir","readdir","path","promisify","extractZip","tar","bzip","unpackArchive","archivePath","folderPath","endsWith","dir","extractTar","installDMG","Error","tarPath","Promise","fulfill","reject","tarStream","extract","on","readStream","pipe","dmgPath","stdout","volumes","match","mountPath","fileNames","appName","find","item","mountedPath","join"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@puppeteer/browsers/lib/esm/fileUtil.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { exec as execChildProcess } from 'child_process';\nimport { createReadStream } from 'fs';\nimport { mkdir, readdir } from 'fs/promises';\nimport * as path from 'path';\nimport { promisify } from 'util';\nimport extractZip from 'extract-zip';\nimport tar from 'tar-fs';\nimport bzip from 'unbzip2-stream';\nconst exec = promisify(execChildProcess);\n/**\n * @internal\n */\nexport async function unpackArchive(archivePath, folderPath) {\n    if (archivePath.endsWith('.zip')) {\n        await extractZip(archivePath, { dir: folderPath });\n    }\n    else if (archivePath.endsWith('.tar.bz2')) {\n        await extractTar(archivePath, folderPath);\n    }\n    else if (archivePath.endsWith('.dmg')) {\n        await mkdir(folderPath);\n        await installDMG(archivePath, folderPath);\n    }\n    else {\n        throw new Error(`Unsupported archive format: ${archivePath}`);\n    }\n}\n/**\n * @internal\n */\nfunction extractTar(tarPath, folderPath) {\n    return new Promise((fulfill, reject) => {\n        const tarStream = tar.extract(folderPath);\n        tarStream.on('error', reject);\n        tarStream.on('finish', fulfill);\n        const readStream = createReadStream(tarPath);\n        readStream.pipe(bzip()).pipe(tarStream);\n    });\n}\n/**\n * @internal\n */\nasync function installDMG(dmgPath, folderPath) {\n    const { stdout } = await exec(`hdiutil attach -nobrowse -noautoopen \"${dmgPath}\"`);\n    const volumes = stdout.match(/\\/Volumes\\/(.*)/m);\n    if (!volumes) {\n        throw new Error(`Could not find volume path in ${stdout}`);\n    }\n    const mountPath = volumes[0];\n    try {\n        const fileNames = await readdir(mountPath);\n        const appName = fileNames.find(item => {\n            return typeof item === 'string' && item.endsWith('.app');\n        });\n        if (!appName) {\n            throw new Error(`Cannot find app in ${mountPath}`);\n        }\n        const mountedPath = path.join(mountPath, appName);\n        await exec(`cp -R \"${mountedPath}\" \"${folderPath}\"`);\n    }\n    finally {\n        await exec(`hdiutil detach \"${mountPath}\" -quiet`);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}