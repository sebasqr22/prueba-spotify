{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nconst rmOptions = {\n  force: true,\n  recursive: true,\n  maxRetries: 5\n};\n/**\n * @internal\n */\nexport function rm(_x) {\n  return _rm.apply(this, arguments);\n}\n/**\n * @internal\n */\nfunction _rm() {\n  _rm = _asyncToGenerator(function* (path) {\n    yield fs.promises.rm(path, rmOptions);\n  });\n  return _rm.apply(this, arguments);\n}\nexport function rmSync(path) {\n  fs.rmSync(path, rmOptions);\n}","map":{"version":3,"names":["fs","rmOptions","force","recursive","maxRetries","rm","path","promises","rmSync"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/util/fs.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nconst rmOptions = {\n    force: true,\n    recursive: true,\n    maxRetries: 5,\n};\n/**\n * @internal\n */\nexport async function rm(path) {\n    await fs.promises.rm(path, rmOptions);\n}\n/**\n * @internal\n */\nexport function rmSync(path) {\n    fs.rmSync(path, rmOptions);\n}\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,EAAE,MAAM,IAAI;AACnB,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,IAAI;EACfC,UAAU,EAAE;AAChB,CAAC;AACD;AACA;AACA;AACA,gBAAsBC,EAAE;EAAA;AAAA;AAGxB;AACA;AACA;AAFA;EAAA,wBAHO,WAAkBC,IAAI,EAAE;IAC3B,MAAMN,EAAE,CAACO,QAAQ,CAACF,EAAE,CAACC,IAAI,EAAEL,SAAS,CAAC;EACzC,CAAC;EAAA;AAAA;AAID,OAAO,SAASO,MAAM,CAACF,IAAI,EAAE;EACzBN,EAAE,CAACQ,MAAM,CAACF,IAAI,EAAEL,SAAS,CAAC;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}