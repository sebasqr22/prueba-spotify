{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _wrapAsyncGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator.js\";\nimport _awaitAsyncGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator.js\";\nimport _asyncGeneratorDelegate from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncGeneratorDelegate.js\";\nimport _asyncIterator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncIterator.js\";\n/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { QueryHandler } from './QueryHandler.js';\nconst queryAXTree = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (client, element, accessibleName, role) {\n    const {\n      nodes\n    } = yield client.send('Accessibility.queryAXTree', {\n      objectId: element.id,\n      accessibleName,\n      role\n    });\n    return nodes.filter(node => {\n      return !node.role || node.role.value !== 'StaticText';\n    });\n  });\n  return function queryAXTree(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\nconst KNOWN_ATTRIBUTES = Object.freeze(['name', 'role']);\nconst isKnownAttribute = attribute => {\n  return KNOWN_ATTRIBUTES.includes(attribute);\n};\nconst normalizeValue = value => {\n  return value.replace(/ +/g, ' ').trim();\n};\n/**\n * The selectors consist of an accessible name to query for and optionally\n * further aria attributes on the form `[<attribute>=<value>]`.\n * Currently, we only support the `name` and `role` attribute.\n * The following examples showcase how the syntax works wrt. querying:\n *\n * - 'title[role=\"heading\"]' queries for elements with name 'title' and role 'heading'.\n * - '[role=\"img\"]' queries for elements with role 'img' and any name.\n * - 'label' queries for elements with name 'label' and any role.\n * - '[name=\"\"][role=\"button\"]' queries for elements with no name and role 'button'.\n */\nconst ATTRIBUTE_REGEXP = /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/g;\nconst parseARIASelector = selector => {\n  const queryOptions = {};\n  const defaultName = selector.replace(ATTRIBUTE_REGEXP, (_, attribute, __, value) => {\n    attribute = attribute.trim();\n    assert(isKnownAttribute(attribute), `Unknown aria attribute \"${attribute}\" in selector`);\n    queryOptions[attribute] = normalizeValue(value);\n    return '';\n  });\n  if (defaultName && !queryOptions.name) {\n    queryOptions.name = normalizeValue(defaultName);\n  }\n  return queryOptions;\n};\n/**\n * @internal\n */\nexport class ARIAQueryHandler extends QueryHandler {\n  static queryAll(element, selector) {\n    return _wrapAsyncGenerator(function* () {\n      const context = element.executionContext();\n      const {\n        name,\n        role\n      } = parseARIASelector(selector);\n      const results = yield _awaitAsyncGenerator(queryAXTree(context._client, element, name, role));\n      const world = context._world;\n      yield* _asyncGeneratorDelegate(_asyncIterator(AsyncIterableUtil.map(results, node => {\n        return world.adoptBackendNode(node.backendDOMNodeId);\n      })), _awaitAsyncGenerator);\n    })();\n  }\n}\n_a = ARIAQueryHandler;\nARIAQueryHandler.querySelector = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (node, selector, {\n    ariaQuerySelector\n  }) {\n    return ariaQuerySelector(node, selector);\n  });\n  return function (_x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nARIAQueryHandler.queryOne = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator(function* (element, selector) {\n    var _b;\n    return (_b = yield AsyncIterableUtil.first(_a.queryAll(element, selector))) !== null && _b !== void 0 ? _b : null;\n  });\n  return function (_x8, _x9) {\n    return _ref3.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["_a","assert","AsyncIterableUtil","QueryHandler","queryAXTree","client","element","accessibleName","role","nodes","send","objectId","id","filter","node","value","KNOWN_ATTRIBUTES","Object","freeze","isKnownAttribute","attribute","includes","normalizeValue","replace","trim","ATTRIBUTE_REGEXP","parseARIASelector","selector","queryOptions","defaultName","_","__","name","ARIAQueryHandler","queryAll","context","executionContext","results","_client","world","_world","map","adoptBackendNode","backendDOMNodeId","querySelector","ariaQuerySelector","queryOne","_b","first"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/AriaQueryHandler.js"],"sourcesContent":["/**\n * Copyright 2020 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { QueryHandler } from './QueryHandler.js';\nconst queryAXTree = async (client, element, accessibleName, role) => {\n    const { nodes } = await client.send('Accessibility.queryAXTree', {\n        objectId: element.id,\n        accessibleName,\n        role,\n    });\n    return nodes.filter((node) => {\n        return !node.role || node.role.value !== 'StaticText';\n    });\n};\nconst KNOWN_ATTRIBUTES = Object.freeze(['name', 'role']);\nconst isKnownAttribute = (attribute) => {\n    return KNOWN_ATTRIBUTES.includes(attribute);\n};\nconst normalizeValue = (value) => {\n    return value.replace(/ +/g, ' ').trim();\n};\n/**\n * The selectors consist of an accessible name to query for and optionally\n * further aria attributes on the form `[<attribute>=<value>]`.\n * Currently, we only support the `name` and `role` attribute.\n * The following examples showcase how the syntax works wrt. querying:\n *\n * - 'title[role=\"heading\"]' queries for elements with name 'title' and role 'heading'.\n * - '[role=\"img\"]' queries for elements with role 'img' and any name.\n * - 'label' queries for elements with name 'label' and any role.\n * - '[name=\"\"][role=\"button\"]' queries for elements with no name and role 'button'.\n */\nconst ATTRIBUTE_REGEXP = /\\[\\s*(?<attribute>\\w+)\\s*=\\s*(?<quote>\"|')(?<value>\\\\.|.*?(?=\\k<quote>))\\k<quote>\\s*\\]/g;\nconst parseARIASelector = (selector) => {\n    const queryOptions = {};\n    const defaultName = selector.replace(ATTRIBUTE_REGEXP, (_, attribute, __, value) => {\n        attribute = attribute.trim();\n        assert(isKnownAttribute(attribute), `Unknown aria attribute \"${attribute}\" in selector`);\n        queryOptions[attribute] = normalizeValue(value);\n        return '';\n    });\n    if (defaultName && !queryOptions.name) {\n        queryOptions.name = normalizeValue(defaultName);\n    }\n    return queryOptions;\n};\n/**\n * @internal\n */\nexport class ARIAQueryHandler extends QueryHandler {\n    static async *queryAll(element, selector) {\n        const context = element.executionContext();\n        const { name, role } = parseARIASelector(selector);\n        const results = await queryAXTree(context._client, element, name, role);\n        const world = context._world;\n        yield* AsyncIterableUtil.map(results, node => {\n            return world.adoptBackendNode(node.backendDOMNodeId);\n        });\n    }\n}\n_a = ARIAQueryHandler;\nARIAQueryHandler.querySelector = async (node, selector, { ariaQuerySelector }) => {\n    return ariaQuerySelector(node, selector);\n};\nARIAQueryHandler.queryOne = async (element, selector) => {\n    var _b;\n    return ((_b = (await AsyncIterableUtil.first(_a.queryAll(element, selector)))) !== null && _b !== void 0 ? _b : null);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}