{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nimport { rename, unlink, mkdtemp } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { Browser as SupportedBrowsers, createProfile } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { rm } from '../util/fs.js';\nimport { ProductLauncher } from './ProductLauncher.js';\n/**\n * @internal\n */\nexport class FirefoxLauncher extends ProductLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'firefox');\n  }\n  /**\n   * @internal\n   */\n  computeLaunchArguments(options = {}) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        ignoreDefaultArgs = false,\n        args = [],\n        executablePath,\n        pipe = false,\n        extraPrefsFirefox = {},\n        debuggingPort = null\n      } = options;\n      const firefoxArguments = [];\n      if (!ignoreDefaultArgs) {\n        firefoxArguments.push(..._this.defaultArgs(options));\n      } else if (Array.isArray(ignoreDefaultArgs)) {\n        firefoxArguments.push(..._this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        }));\n      } else {\n        firefoxArguments.push(...args);\n      }\n      if (!firefoxArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })) {\n        if (pipe) {\n          assert(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');\n        }\n        firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n      }\n      let userDataDir;\n      let isTempUserDataDir = true;\n      // Check for the profile argument, which will always be set even\n      // with a custom directory specified via the userDataDir option.\n      const profileArgIndex = firefoxArguments.findIndex(arg => {\n        return ['-profile', '--profile'].includes(arg);\n      });\n      if (profileArgIndex !== -1) {\n        userDataDir = firefoxArguments[profileArgIndex + 1];\n        if (!userDataDir || !fs.existsSync(userDataDir)) {\n          throw new Error(`Firefox profile not found at '${userDataDir}'`);\n        }\n        // When using a custom Firefox profile it needs to be populated\n        // with required preferences.\n        isTempUserDataDir = false;\n      } else {\n        userDataDir = yield mkdtemp(_this.getProfilePath());\n        firefoxArguments.push('--profile');\n        firefoxArguments.push(userDataDir);\n      }\n      yield createProfile(SupportedBrowsers.FIREFOX, {\n        path: userDataDir,\n        preferences: extraPrefsFirefox\n      });\n      let firefoxExecutable;\n      if (_this.puppeteer._isPuppeteerCore || executablePath) {\n        assert(executablePath, `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``);\n        firefoxExecutable = executablePath;\n      } else {\n        firefoxExecutable = _this.executablePath();\n      }\n      return {\n        isTempUserDataDir,\n        userDataDir,\n        args: firefoxArguments,\n        executablePath: firefoxExecutable\n      };\n    })();\n  }\n  /**\n   * @internal\n   */\n  cleanUserDataDir(userDataDir, opts) {\n    return _asyncToGenerator(function* () {\n      if (opts.isTemp) {\n        try {\n          yield rm(userDataDir);\n        } catch (error) {\n          debugError(error);\n          throw error;\n        }\n      } else {\n        try {\n          // When an existing user profile has been used remove the user\n          // preferences file and restore possibly backuped preferences.\n          yield unlink(path.join(userDataDir, 'user.js'));\n          const prefsBackupPath = path.join(userDataDir, 'prefs.js.puppeteer');\n          if (fs.existsSync(prefsBackupPath)) {\n            const prefsPath = path.join(userDataDir, 'prefs.js');\n            yield unlink(prefsPath);\n            yield rename(prefsBackupPath, prefsPath);\n          }\n        } catch (error) {\n          debugError(error);\n        }\n      }\n    })();\n  }\n  executablePath() {\n    // replace 'latest' placeholder with actual downloaded revision\n    if (this.puppeteer.browserRevision === 'latest') {\n      const browserFetcher = this.puppeteer.createBrowserFetcher({\n        product: this.product,\n        path: this.puppeteer.defaultDownloadPath\n      });\n      const localRevisions = browserFetcher.localRevisions();\n      if (localRevisions[0]) {\n        this.actualBrowserRevision = localRevisions[0];\n      }\n    }\n    return this.resolveExecutablePath();\n  }\n  defaultArgs(options = {}) {\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir = null\n    } = options;\n    const firefoxArguments = ['--no-remote'];\n    switch (os.platform()) {\n      case 'darwin':\n        firefoxArguments.push('--foreground');\n        break;\n      case 'win32':\n        firefoxArguments.push('--wait-for-browser');\n        break;\n    }\n    if (userDataDir) {\n      firefoxArguments.push('--profile');\n      firefoxArguments.push(userDataDir);\n    }\n    if (headless) {\n      firefoxArguments.push('--headless');\n    }\n    if (devtools) {\n      firefoxArguments.push('--devtools');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      firefoxArguments.push('about:blank');\n    }\n    firefoxArguments.push(...args);\n    return firefoxArguments;\n  }\n}","map":{"version":3,"names":["fs","rename","unlink","mkdtemp","os","path","Browser","SupportedBrowsers","createProfile","debugError","assert","rm","ProductLauncher","FirefoxLauncher","constructor","puppeteer","computeLaunchArguments","options","ignoreDefaultArgs","args","executablePath","pipe","extraPrefsFirefox","debuggingPort","firefoxArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","userDataDir","isTempUserDataDir","profileArgIndex","findIndex","existsSync","Error","getProfilePath","FIREFOX","preferences","firefoxExecutable","_isPuppeteerCore","cleanUserDataDir","opts","isTemp","error","join","prefsBackupPath","prefsPath","browserRevision","browserFetcher","createBrowserFetcher","product","defaultDownloadPath","localRevisions","actualBrowserRevision","resolveExecutablePath","devtools","headless","platform","every"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/node/FirefoxLauncher.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nimport { rename, unlink, mkdtemp } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { Browser as SupportedBrowsers, createProfile } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { rm } from '../util/fs.js';\nimport { ProductLauncher } from './ProductLauncher.js';\n/**\n * @internal\n */\nexport class FirefoxLauncher extends ProductLauncher {\n    constructor(puppeteer) {\n        super(puppeteer, 'firefox');\n    }\n    /**\n     * @internal\n     */\n    async computeLaunchArguments(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], executablePath, pipe = false, extraPrefsFirefox = {}, debuggingPort = null, } = options;\n        const firefoxArguments = [];\n        if (!ignoreDefaultArgs) {\n            firefoxArguments.push(...this.defaultArgs(options));\n        }\n        else if (Array.isArray(ignoreDefaultArgs)) {\n            firefoxArguments.push(...this.defaultArgs(options).filter(arg => {\n                return !ignoreDefaultArgs.includes(arg);\n            }));\n        }\n        else {\n            firefoxArguments.push(...args);\n        }\n        if (!firefoxArguments.some(argument => {\n            return argument.startsWith('--remote-debugging-');\n        })) {\n            if (pipe) {\n                assert(debuggingPort === null, 'Browser should be launched with either pipe or debugging port - not both.');\n            }\n            firefoxArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n        }\n        let userDataDir;\n        let isTempUserDataDir = true;\n        // Check for the profile argument, which will always be set even\n        // with a custom directory specified via the userDataDir option.\n        const profileArgIndex = firefoxArguments.findIndex(arg => {\n            return ['-profile', '--profile'].includes(arg);\n        });\n        if (profileArgIndex !== -1) {\n            userDataDir = firefoxArguments[profileArgIndex + 1];\n            if (!userDataDir || !fs.existsSync(userDataDir)) {\n                throw new Error(`Firefox profile not found at '${userDataDir}'`);\n            }\n            // When using a custom Firefox profile it needs to be populated\n            // with required preferences.\n            isTempUserDataDir = false;\n        }\n        else {\n            userDataDir = await mkdtemp(this.getProfilePath());\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(userDataDir);\n        }\n        await createProfile(SupportedBrowsers.FIREFOX, {\n            path: userDataDir,\n            preferences: extraPrefsFirefox,\n        });\n        let firefoxExecutable;\n        if (this.puppeteer._isPuppeteerCore || executablePath) {\n            assert(executablePath, `An \\`executablePath\\` must be specified for \\`puppeteer-core\\``);\n            firefoxExecutable = executablePath;\n        }\n        else {\n            firefoxExecutable = this.executablePath();\n        }\n        return {\n            isTempUserDataDir,\n            userDataDir,\n            args: firefoxArguments,\n            executablePath: firefoxExecutable,\n        };\n    }\n    /**\n     * @internal\n     */\n    async cleanUserDataDir(userDataDir, opts) {\n        if (opts.isTemp) {\n            try {\n                await rm(userDataDir);\n            }\n            catch (error) {\n                debugError(error);\n                throw error;\n            }\n        }\n        else {\n            try {\n                // When an existing user profile has been used remove the user\n                // preferences file and restore possibly backuped preferences.\n                await unlink(path.join(userDataDir, 'user.js'));\n                const prefsBackupPath = path.join(userDataDir, 'prefs.js.puppeteer');\n                if (fs.existsSync(prefsBackupPath)) {\n                    const prefsPath = path.join(userDataDir, 'prefs.js');\n                    await unlink(prefsPath);\n                    await rename(prefsBackupPath, prefsPath);\n                }\n            }\n            catch (error) {\n                debugError(error);\n            }\n        }\n    }\n    executablePath() {\n        // replace 'latest' placeholder with actual downloaded revision\n        if (this.puppeteer.browserRevision === 'latest') {\n            const browserFetcher = this.puppeteer.createBrowserFetcher({\n                product: this.product,\n                path: this.puppeteer.defaultDownloadPath,\n            });\n            const localRevisions = browserFetcher.localRevisions();\n            if (localRevisions[0]) {\n                this.actualBrowserRevision = localRevisions[0];\n            }\n        }\n        return this.resolveExecutablePath();\n    }\n    defaultArgs(options = {}) {\n        const { devtools = false, headless = !devtools, args = [], userDataDir = null, } = options;\n        const firefoxArguments = ['--no-remote'];\n        switch (os.platform()) {\n            case 'darwin':\n                firefoxArguments.push('--foreground');\n                break;\n            case 'win32':\n                firefoxArguments.push('--wait-for-browser');\n                break;\n        }\n        if (userDataDir) {\n            firefoxArguments.push('--profile');\n            firefoxArguments.push(userDataDir);\n        }\n        if (headless) {\n            firefoxArguments.push('--headless');\n        }\n        if (devtools) {\n            firefoxArguments.push('--devtools');\n        }\n        if (args.every(arg => {\n            return arg.startsWith('-');\n        })) {\n            firefoxArguments.push('about:blank');\n        }\n        firefoxArguments.push(...args);\n        return firefoxArguments;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}