{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { mkdtemp } from 'fs/promises';\nimport path from 'path';\nimport { computeSystemExecutablePath, Browser as SupportedBrowsers, ChromeReleaseChannel as BrowsersChromeReleaseChannel } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { rm } from '../util/fs.js';\nimport { ProductLauncher } from './ProductLauncher.js';\n/**\n * @internal\n */\nexport class ChromeLauncher extends ProductLauncher {\n  constructor(puppeteer) {\n    super(puppeteer, 'chrome');\n  }\n  /**\n   * @internal\n   */\n  computeLaunchArguments(options = {}) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        ignoreDefaultArgs = false,\n        args = [],\n        pipe = false,\n        debuggingPort,\n        channel,\n        executablePath\n      } = options;\n      const chromeArguments = [];\n      if (!ignoreDefaultArgs) {\n        chromeArguments.push(..._this.defaultArgs(options));\n      } else if (Array.isArray(ignoreDefaultArgs)) {\n        chromeArguments.push(..._this.defaultArgs(options).filter(arg => {\n          return !ignoreDefaultArgs.includes(arg);\n        }));\n      } else {\n        chromeArguments.push(...args);\n      }\n      if (!chromeArguments.some(argument => {\n        return argument.startsWith('--remote-debugging-');\n      })) {\n        if (pipe) {\n          assert(!debuggingPort, 'Browser should be launched with either pipe or debugging port - not both.');\n          chromeArguments.push('--remote-debugging-pipe');\n        } else {\n          chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n        }\n      }\n      let isTempUserDataDir = false;\n      // Check for the user data dir argument, which will always be set even\n      // with a custom directory specified via the userDataDir option.\n      let userDataDirIndex = chromeArguments.findIndex(arg => {\n        return arg.startsWith('--user-data-dir');\n      });\n      if (userDataDirIndex < 0) {\n        isTempUserDataDir = true;\n        chromeArguments.push(`--user-data-dir=${yield mkdtemp(_this.getProfilePath())}`);\n        userDataDirIndex = chromeArguments.length - 1;\n      }\n      const userDataDir = chromeArguments[userDataDirIndex].split('=', 2)[1];\n      assert(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n      let chromeExecutable = executablePath;\n      if (!chromeExecutable) {\n        assert(channel || !_this.puppeteer._isPuppeteerCore, `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``);\n        chromeExecutable = _this.executablePath(channel);\n      }\n      return {\n        executablePath: chromeExecutable,\n        args: chromeArguments,\n        isTempUserDataDir,\n        userDataDir\n      };\n    })();\n  }\n  /**\n   * @internal\n   */\n  cleanUserDataDir(path, opts) {\n    return _asyncToGenerator(function* () {\n      if (opts.isTemp) {\n        try {\n          yield rm(path);\n        } catch (error) {\n          debugError(error);\n          throw error;\n        }\n      }\n    })();\n  }\n  defaultArgs(options = {}) {\n    // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n    const chromeArguments = ['--allow-pre-commit-input', '--disable-background-networking', '--disable-background-timer-throttling', '--disable-backgrounding-occluded-windows', '--disable-breakpad', '--disable-client-side-phishing-detection', '--disable-component-extensions-with-background-pages', '--disable-component-update', '--disable-default-apps', '--disable-dev-shm-usage', '--disable-extensions',\n    // AcceptCHFrame disabled because of crbug.com/1348106.\n    '--disable-features=Translate,BackForwardCache,AcceptCHFrame,MediaRouter,OptimizationHints', '--disable-hang-monitor', '--disable-ipc-flooding-protection', '--disable-popup-blocking', '--disable-prompt-on-repost', '--disable-renderer-backgrounding', '--disable-sync', '--enable-automation',\n    // TODO(sadym): remove '--enable-blink-features=IdleDetection' once\n    // IdleDetection is turned on by default.\n    '--enable-blink-features=IdleDetection', '--enable-features=NetworkServiceInProcess2', '--export-tagged-pdf', '--force-color-profile=srgb', '--metrics-recording-only', '--no-first-run', '--password-store=basic', '--use-mock-keychain'];\n    const {\n      devtools = false,\n      headless = !devtools,\n      args = [],\n      userDataDir\n    } = options;\n    if (userDataDir) {\n      chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n    }\n    if (devtools) {\n      chromeArguments.push('--auto-open-devtools-for-tabs');\n    }\n    if (headless) {\n      chromeArguments.push(headless === 'new' ? '--headless=new' : '--headless', '--hide-scrollbars', '--mute-audio');\n    }\n    if (args.every(arg => {\n      return arg.startsWith('-');\n    })) {\n      chromeArguments.push('about:blank');\n    }\n    chromeArguments.push(...args);\n    return chromeArguments;\n  }\n  executablePath(channel) {\n    if (channel) {\n      return computeSystemExecutablePath({\n        browser: SupportedBrowsers.CHROME,\n        channel: convertPuppeteerChannelToBrowsersChannel(channel)\n      });\n    } else {\n      return this.resolveExecutablePath();\n    }\n  }\n}\nfunction convertPuppeteerChannelToBrowsersChannel(channel) {\n  switch (channel) {\n    case 'chrome':\n      return BrowsersChromeReleaseChannel.STABLE;\n    case 'chrome-dev':\n      return BrowsersChromeReleaseChannel.DEV;\n    case 'chrome-beta':\n      return BrowsersChromeReleaseChannel.BETA;\n    case 'chrome-canary':\n      return BrowsersChromeReleaseChannel.CANARY;\n  }\n}","map":{"version":3,"names":["mkdtemp","path","computeSystemExecutablePath","Browser","SupportedBrowsers","ChromeReleaseChannel","BrowsersChromeReleaseChannel","debugError","assert","rm","ProductLauncher","ChromeLauncher","constructor","puppeteer","computeLaunchArguments","options","ignoreDefaultArgs","args","pipe","debuggingPort","channel","executablePath","chromeArguments","push","defaultArgs","Array","isArray","filter","arg","includes","some","argument","startsWith","isTempUserDataDir","userDataDirIndex","findIndex","getProfilePath","length","userDataDir","split","chromeExecutable","_isPuppeteerCore","cleanUserDataDir","opts","isTemp","error","devtools","headless","resolve","every","browser","CHROME","convertPuppeteerChannelToBrowsersChannel","resolveExecutablePath","STABLE","DEV","BETA","CANARY"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/node/ChromeLauncher.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { mkdtemp } from 'fs/promises';\nimport path from 'path';\nimport { computeSystemExecutablePath, Browser as SupportedBrowsers, ChromeReleaseChannel as BrowsersChromeReleaseChannel, } from '@puppeteer/browsers';\nimport { debugError } from '../common/util.js';\nimport { assert } from '../util/assert.js';\nimport { rm } from '../util/fs.js';\nimport { ProductLauncher } from './ProductLauncher.js';\n/**\n * @internal\n */\nexport class ChromeLauncher extends ProductLauncher {\n    constructor(puppeteer) {\n        super(puppeteer, 'chrome');\n    }\n    /**\n     * @internal\n     */\n    async computeLaunchArguments(options = {}) {\n        const { ignoreDefaultArgs = false, args = [], pipe = false, debuggingPort, channel, executablePath, } = options;\n        const chromeArguments = [];\n        if (!ignoreDefaultArgs) {\n            chromeArguments.push(...this.defaultArgs(options));\n        }\n        else if (Array.isArray(ignoreDefaultArgs)) {\n            chromeArguments.push(...this.defaultArgs(options).filter(arg => {\n                return !ignoreDefaultArgs.includes(arg);\n            }));\n        }\n        else {\n            chromeArguments.push(...args);\n        }\n        if (!chromeArguments.some(argument => {\n            return argument.startsWith('--remote-debugging-');\n        })) {\n            if (pipe) {\n                assert(!debuggingPort, 'Browser should be launched with either pipe or debugging port - not both.');\n                chromeArguments.push('--remote-debugging-pipe');\n            }\n            else {\n                chromeArguments.push(`--remote-debugging-port=${debuggingPort || 0}`);\n            }\n        }\n        let isTempUserDataDir = false;\n        // Check for the user data dir argument, which will always be set even\n        // with a custom directory specified via the userDataDir option.\n        let userDataDirIndex = chromeArguments.findIndex(arg => {\n            return arg.startsWith('--user-data-dir');\n        });\n        if (userDataDirIndex < 0) {\n            isTempUserDataDir = true;\n            chromeArguments.push(`--user-data-dir=${await mkdtemp(this.getProfilePath())}`);\n            userDataDirIndex = chromeArguments.length - 1;\n        }\n        const userDataDir = chromeArguments[userDataDirIndex].split('=', 2)[1];\n        assert(typeof userDataDir === 'string', '`--user-data-dir` is malformed');\n        let chromeExecutable = executablePath;\n        if (!chromeExecutable) {\n            assert(channel || !this.puppeteer._isPuppeteerCore, `An \\`executablePath\\` or \\`channel\\` must be specified for \\`puppeteer-core\\``);\n            chromeExecutable = this.executablePath(channel);\n        }\n        return {\n            executablePath: chromeExecutable,\n            args: chromeArguments,\n            isTempUserDataDir,\n            userDataDir,\n        };\n    }\n    /**\n     * @internal\n     */\n    async cleanUserDataDir(path, opts) {\n        if (opts.isTemp) {\n            try {\n                await rm(path);\n            }\n            catch (error) {\n                debugError(error);\n                throw error;\n            }\n        }\n    }\n    defaultArgs(options = {}) {\n        // See https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md\n        const chromeArguments = [\n            '--allow-pre-commit-input',\n            '--disable-background-networking',\n            '--disable-background-timer-throttling',\n            '--disable-backgrounding-occluded-windows',\n            '--disable-breakpad',\n            '--disable-client-side-phishing-detection',\n            '--disable-component-extensions-with-background-pages',\n            '--disable-component-update',\n            '--disable-default-apps',\n            '--disable-dev-shm-usage',\n            '--disable-extensions',\n            // AcceptCHFrame disabled because of crbug.com/1348106.\n            '--disable-features=Translate,BackForwardCache,AcceptCHFrame,MediaRouter,OptimizationHints',\n            '--disable-hang-monitor',\n            '--disable-ipc-flooding-protection',\n            '--disable-popup-blocking',\n            '--disable-prompt-on-repost',\n            '--disable-renderer-backgrounding',\n            '--disable-sync',\n            '--enable-automation',\n            // TODO(sadym): remove '--enable-blink-features=IdleDetection' once\n            // IdleDetection is turned on by default.\n            '--enable-blink-features=IdleDetection',\n            '--enable-features=NetworkServiceInProcess2',\n            '--export-tagged-pdf',\n            '--force-color-profile=srgb',\n            '--metrics-recording-only',\n            '--no-first-run',\n            '--password-store=basic',\n            '--use-mock-keychain',\n        ];\n        const { devtools = false, headless = !devtools, args = [], userDataDir, } = options;\n        if (userDataDir) {\n            chromeArguments.push(`--user-data-dir=${path.resolve(userDataDir)}`);\n        }\n        if (devtools) {\n            chromeArguments.push('--auto-open-devtools-for-tabs');\n        }\n        if (headless) {\n            chromeArguments.push(headless === 'new' ? '--headless=new' : '--headless', '--hide-scrollbars', '--mute-audio');\n        }\n        if (args.every(arg => {\n            return arg.startsWith('-');\n        })) {\n            chromeArguments.push('about:blank');\n        }\n        chromeArguments.push(...args);\n        return chromeArguments;\n    }\n    executablePath(channel) {\n        if (channel) {\n            return computeSystemExecutablePath({\n                browser: SupportedBrowsers.CHROME,\n                channel: convertPuppeteerChannelToBrowsersChannel(channel),\n            });\n        }\n        else {\n            return this.resolveExecutablePath();\n        }\n    }\n}\nfunction convertPuppeteerChannelToBrowsersChannel(channel) {\n    switch (channel) {\n        case 'chrome':\n            return BrowsersChromeReleaseChannel.STABLE;\n        case 'chrome-dev':\n            return BrowsersChromeReleaseChannel.DEV;\n        case 'chrome-beta':\n            return BrowsersChromeReleaseChannel.BETA;\n        case 'chrome-canary':\n            return BrowsersChromeReleaseChannel.CANARY;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}