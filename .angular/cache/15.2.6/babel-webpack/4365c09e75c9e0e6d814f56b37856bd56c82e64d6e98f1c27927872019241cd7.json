{"ast":null,"code":"import SpotifyWebApi from 'spotify-web-api-js';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.spotifyApi = new SpotifyWebApi();\n  }\n  login() {\n    const client_id = '933d3430c2e6442eac18add3a796497d';\n    const redirect_uri = 'http://localhost:4200/disk';\n    window.location.href = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=token&show_dialog=true`;\n  }\n  setAccessToken(token) {\n    this.spotifyApi.setAccessToken(token);\n    this.token = token;\n  }\n  getApi() {\n    return this.spotifyApi;\n  }\n  getAccessToken() {\n    return this.token;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,OAAOA,aAAa,MAAM,oBAAoB;;AAK9C,OAAM,MAAOC,WAAW;EAKpBC;IACI,IAAI,CAACC,UAAU,GAAG,IAAIH,aAAa,EAAE;EACzC;EAEAI,KAAK;IACD,MAAMC,SAAS,GAAG,kCAAkC;IACpD,MAAMC,YAAY,GAAG,4BAA4B;IAEjDC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,oDAAoDJ,SAAS,iBAAiBC,YAAY,uCAAuC;EAC5J;EAEAI,cAAc,CAACC,KAAa;IACxB,IAAI,CAACR,UAAU,CAACO,cAAc,CAACC,KAAK,CAAC;IACrC,IAAI,CAACA,KAAK,GAAGA,KAAK;EACtB;EAEAC,MAAM;IACF,OAAO,IAAI,CAACT,UAAU;EAC1B;EAEAU,cAAc;IACV,OAAO,IAAI,CAACF,KAAK;EACrB;;AA3BSV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFR;AAAM","names":["SpotifyWebApi","AuthService","constructor","spotifyApi","login","client_id","redirect_uri","window","location","href","setAccessToken","token","getApi","getAccessToken","factory","providedIn"],"sourceRoot":"","sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n\n    private spotifyApi: SpotifyWebApi.SpotifyWebApiJs;\n    private token: string | undefined;\n\n    constructor() {\n        this.spotifyApi = new SpotifyWebApi();\n    }\n\n    login(): void {\n        const client_id = '933d3430c2e6442eac18add3a796497d';\n        const redirect_uri = 'http://localhost:4200/disk';\n\n        window.location.href = `https://accounts.spotify.com/authorize?client_id=${client_id}&redirect_uri=${redirect_uri}&response_type=token&show_dialog=true`;\n    }\n\n    setAccessToken(token: string): void {\n        this.spotifyApi.setAccessToken(token);\n        this.token = token;\n    }\n\n    getApi(): SpotifyWebApi.SpotifyWebApiJs {\n        return this.spotifyApi;\n    }\n\n    getAccessToken(){\n        return this.token;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}