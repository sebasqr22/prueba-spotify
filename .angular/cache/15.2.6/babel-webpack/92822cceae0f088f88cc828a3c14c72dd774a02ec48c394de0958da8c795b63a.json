{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport assert from 'assert';\nimport { existsSync } from 'fs';\nimport { mkdir, unlink } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { downloadUrls } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { debug } from './debug.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { unpackArchive } from './fileUtil.js';\nimport { downloadFile, headHttpRequest } from './httpUtil.js';\nconst debugInstall = debug('puppeteer:browsers:install');\nconst times = new Map();\nfunction debugTime(label) {\n  times.set(label, process.hrtime());\n}\nfunction debugTimeEnd(label) {\n  const end = process.hrtime();\n  const start = times.get(label);\n  if (!start) {\n    return;\n  }\n  const duration = end[0] * 1000 + end[1] / 1e6 - (start[0] * 1000 + start[1] / 1e6); // calculate duration in milliseconds\n  debugInstall(`Duration for ${label}: ${duration}ms`);\n}\n/**\n * @public\n */\nexport function install(_x) {\n  return _install.apply(this, arguments);\n}\n/**\n * @public\n */\nfunction _install() {\n  _install = _asyncToGenerator(function* (options) {\n    var _a, _b;\n    (_a = options.platform) !== null && _a !== void 0 ? _a : options.platform = detectBrowserPlatform();\n    (_b = options.unpack) !== null && _b !== void 0 ? _b : options.unpack = true;\n    if (!options.platform) {\n      throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n    }\n    const url = getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl);\n    const fileName = url.toString().split('/').pop();\n    assert(fileName, `A malformed download URL was found: ${url}.`);\n    const structure = new Cache(options.cacheDir);\n    const browserRoot = structure.browserRoot(options.browser);\n    const archivePath = path.join(browserRoot, fileName);\n    if (!existsSync(browserRoot)) {\n      yield mkdir(browserRoot, {\n        recursive: true\n      });\n    }\n    if (!options.unpack) {\n      if (existsSync(archivePath)) {\n        return {\n          path: archivePath,\n          browser: options.browser,\n          platform: options.platform,\n          buildId: options.buildId\n        };\n      }\n      debugInstall(`Downloading binary from ${url}`);\n      debugTime('download');\n      yield downloadFile(url, archivePath, options.downloadProgressCallback);\n      debugTimeEnd('download');\n      return {\n        path: archivePath,\n        browser: options.browser,\n        platform: options.platform,\n        buildId: options.buildId\n      };\n    }\n    const outputPath = structure.installationDir(options.browser, options.platform, options.buildId);\n    if (existsSync(outputPath)) {\n      return {\n        path: outputPath,\n        browser: options.browser,\n        platform: options.platform,\n        buildId: options.buildId\n      };\n    }\n    try {\n      debugInstall(`Downloading binary from ${url}`);\n      try {\n        debugTime('download');\n        yield downloadFile(url, archivePath, options.downloadProgressCallback);\n      } finally {\n        debugTimeEnd('download');\n      }\n      debugInstall(`Installing ${archivePath} to ${outputPath}`);\n      try {\n        debugTime('extract');\n        yield unpackArchive(archivePath, outputPath);\n      } finally {\n        debugTimeEnd('extract');\n      }\n    } finally {\n      if (existsSync(archivePath)) {\n        yield unlink(archivePath);\n      }\n    }\n    return {\n      path: outputPath,\n      browser: options.browser,\n      platform: options.platform,\n      buildId: options.buildId\n    };\n  });\n  return _install.apply(this, arguments);\n}\nexport function canDownload(_x2) {\n  return _canDownload.apply(this, arguments);\n}\nfunction _canDownload() {\n  _canDownload = _asyncToGenerator(function* (options) {\n    var _a;\n    (_a = options.platform) !== null && _a !== void 0 ? _a : options.platform = detectBrowserPlatform();\n    if (!options.platform) {\n      throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n    }\n    return yield headHttpRequest(getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl));\n  });\n  return _canDownload.apply(this, arguments);\n}\nfunction getDownloadUrl(browser, platform, buildId, baseUrl) {\n  return new URL(downloadUrls[browser](platform, buildId, baseUrl));\n}","map":{"version":3,"names":["assert","existsSync","mkdir","unlink","os","path","downloadUrls","Cache","debug","detectBrowserPlatform","unpackArchive","downloadFile","headHttpRequest","debugInstall","times","Map","debugTime","label","set","process","hrtime","debugTimeEnd","end","start","get","duration","install","options","_a","_b","platform","unpack","Error","arch","url","getDownloadUrl","browser","buildId","baseUrl","fileName","toString","split","pop","structure","cacheDir","browserRoot","archivePath","join","recursive","downloadProgressCallback","outputPath","installationDir","canDownload","URL"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@puppeteer/browsers/lib/esm/install.js"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport assert from 'assert';\nimport { existsSync } from 'fs';\nimport { mkdir, unlink } from 'fs/promises';\nimport os from 'os';\nimport path from 'path';\nimport { downloadUrls, } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { debug } from './debug.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { unpackArchive } from './fileUtil.js';\nimport { downloadFile, headHttpRequest } from './httpUtil.js';\nconst debugInstall = debug('puppeteer:browsers:install');\nconst times = new Map();\nfunction debugTime(label) {\n    times.set(label, process.hrtime());\n}\nfunction debugTimeEnd(label) {\n    const end = process.hrtime();\n    const start = times.get(label);\n    if (!start) {\n        return;\n    }\n    const duration = end[0] * 1000 + end[1] / 1e6 - (start[0] * 1000 + start[1] / 1e6); // calculate duration in milliseconds\n    debugInstall(`Duration for ${label}: ${duration}ms`);\n}\n/**\n * @public\n */\nexport async function install(options) {\n    var _a, _b;\n    (_a = options.platform) !== null && _a !== void 0 ? _a : (options.platform = detectBrowserPlatform());\n    (_b = options.unpack) !== null && _b !== void 0 ? _b : (options.unpack = true);\n    if (!options.platform) {\n        throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n    }\n    const url = getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl);\n    const fileName = url.toString().split('/').pop();\n    assert(fileName, `A malformed download URL was found: ${url}.`);\n    const structure = new Cache(options.cacheDir);\n    const browserRoot = structure.browserRoot(options.browser);\n    const archivePath = path.join(browserRoot, fileName);\n    if (!existsSync(browserRoot)) {\n        await mkdir(browserRoot, { recursive: true });\n    }\n    if (!options.unpack) {\n        if (existsSync(archivePath)) {\n            return {\n                path: archivePath,\n                browser: options.browser,\n                platform: options.platform,\n                buildId: options.buildId,\n            };\n        }\n        debugInstall(`Downloading binary from ${url}`);\n        debugTime('download');\n        await downloadFile(url, archivePath, options.downloadProgressCallback);\n        debugTimeEnd('download');\n        return {\n            path: archivePath,\n            browser: options.browser,\n            platform: options.platform,\n            buildId: options.buildId,\n        };\n    }\n    const outputPath = structure.installationDir(options.browser, options.platform, options.buildId);\n    if (existsSync(outputPath)) {\n        return {\n            path: outputPath,\n            browser: options.browser,\n            platform: options.platform,\n            buildId: options.buildId,\n        };\n    }\n    try {\n        debugInstall(`Downloading binary from ${url}`);\n        try {\n            debugTime('download');\n            await downloadFile(url, archivePath, options.downloadProgressCallback);\n        }\n        finally {\n            debugTimeEnd('download');\n        }\n        debugInstall(`Installing ${archivePath} to ${outputPath}`);\n        try {\n            debugTime('extract');\n            await unpackArchive(archivePath, outputPath);\n        }\n        finally {\n            debugTimeEnd('extract');\n        }\n    }\n    finally {\n        if (existsSync(archivePath)) {\n            await unlink(archivePath);\n        }\n    }\n    return {\n        path: outputPath,\n        browser: options.browser,\n        platform: options.platform,\n        buildId: options.buildId,\n    };\n}\n/**\n * @public\n */\nexport async function canDownload(options) {\n    var _a;\n    (_a = options.platform) !== null && _a !== void 0 ? _a : (options.platform = detectBrowserPlatform());\n    if (!options.platform) {\n        throw new Error(`Cannot download a binary for the provided platform: ${os.platform()} (${os.arch()})`);\n    }\n    return await headHttpRequest(getDownloadUrl(options.browser, options.platform, options.buildId, options.baseUrl));\n}\nfunction getDownloadUrl(browser, platform, buildId, baseUrl) {\n    return new URL(downloadUrls[browser](platform, buildId, baseUrl));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}