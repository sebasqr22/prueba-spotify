{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _asyncIterator = require(\"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explorer = void 0;\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _cacheWrapper = require(\"./cacheWrapper\");\nvar _ExplorerBase = require(\"./ExplorerBase\");\nvar _getDirectory = require(\"./getDirectory\");\nvar _readFile = require(\"./readFile\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nclass Explorer extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n  search(searchFrom = process.cwd()) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.config.metaConfigFilePath) {\n        const config = yield _this._loadFile(_this.config.metaConfigFilePath, true);\n        if (config && !config.isEmpty) {\n          return config;\n        }\n      }\n      return yield _this.searchFromDirectory(yield (0, _getDirectory.getDirectory)(searchFrom));\n    })();\n  }\n  searchFromDirectory(dir) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const absoluteDir = _path.default.resolve(process.cwd(), dir);\n      const run = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* () {\n          const result = yield _this2.searchDirectory(absoluteDir);\n          const nextDir = _this2.nextDirectoryToSearch(absoluteDir, result);\n          if (nextDir) {\n            return _this2.searchFromDirectory(nextDir);\n          }\n          return yield _this2.config.transform(result);\n        });\n        return function run() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      if (_this2.searchCache) {\n        return (0, _cacheWrapper.cacheWrapper)(_this2.searchCache, absoluteDir, run);\n      }\n      return run();\n    })();\n  }\n  searchDirectory(dir) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(_this3.config.searchPlaces), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const place = _step.value;\n          {\n            const placeResult = yield _this3.loadSearchPlace(dir, place);\n            if (_this3.shouldSearchStopWithResult(placeResult)) {\n              return placeResult;\n            }\n          }\n        } // config not found\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n      return null;\n    })();\n  }\n  loadSearchPlace(dir, place) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const filepath = _path.default.join(dir, place);\n      const fileContents = yield (0, _readFile.readFile)(filepath);\n      return yield _this4.createCosmiconfigResult(filepath, fileContents, false);\n    })();\n  }\n  loadFileContent(filepath, content) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (content === null) {\n        return null;\n      }\n      if (content.trim() === '') {\n        return undefined;\n      }\n      const loader = _this5.getLoaderEntryForFile(filepath);\n      try {\n        return yield loader(filepath, content);\n      } catch (e) {\n        e.filepath = filepath;\n        throw e;\n      }\n    })();\n  }\n  createCosmiconfigResult(filepath, content, forceProp) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const fileContent = yield _this6.loadFileContent(filepath, content);\n      return _this6.loadedContentToCosmiconfigResult(filepath, fileContent, forceProp);\n    })();\n  }\n  load(filepath) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      return _this7._loadFile(filepath, false);\n    })();\n  }\n  _loadFile(filepath, forceProp) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      _this8.validateFilePath(filepath);\n      const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n      const runLoad = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          const fileContents = yield (0, _readFile.readFile)(absoluteFilePath, {\n            throwNotFound: true\n          });\n          const result = yield _this8.createCosmiconfigResult(absoluteFilePath, fileContents, forceProp);\n          return yield _this8.config.transform(result);\n        });\n        return function runLoad() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      if (_this8.loadCache) {\n        return (0, _cacheWrapper.cacheWrapper)(_this8.loadCache, absoluteFilePath, runLoad);\n      }\n      return runLoad();\n    })();\n  }\n}\nexports.Explorer = Explorer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Explorer","_path","_interopRequireDefault","require","_cacheWrapper","_ExplorerBase","_getDirectory","_readFile","obj","__esModule","default","ExplorerBase","constructor","options","search","searchFrom","process","cwd","config","metaConfigFilePath","_loadFile","isEmpty","searchFromDirectory","getDirectory","dir","absoluteDir","resolve","run","result","searchDirectory","nextDir","nextDirectoryToSearch","transform","searchCache","cacheWrapper","searchPlaces","place","placeResult","loadSearchPlace","shouldSearchStopWithResult","filepath","join","fileContents","readFile","createCosmiconfigResult","loadFileContent","content","trim","undefined","loader","getLoaderEntryForFile","e","forceProp","fileContent","loadedContentToCosmiconfigResult","load","validateFilePath","absoluteFilePath","runLoad","throwNotFound","loadCache"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer/node_modules/cosmiconfig/dist/Explorer.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explorer = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _cacheWrapper = require(\"./cacheWrapper\");\n\nvar _ExplorerBase = require(\"./ExplorerBase\");\n\nvar _getDirectory = require(\"./getDirectory\");\n\nvar _readFile = require(\"./readFile\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Explorer extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n\n  async search(searchFrom = process.cwd()) {\n    if (this.config.metaConfigFilePath) {\n      const config = await this._loadFile(this.config.metaConfigFilePath, true);\n\n      if (config && !config.isEmpty) {\n        return config;\n      }\n    }\n\n    return await this.searchFromDirectory(await (0, _getDirectory.getDirectory)(searchFrom));\n  }\n\n  async searchFromDirectory(dir) {\n    const absoluteDir = _path.default.resolve(process.cwd(), dir);\n\n    const run = async () => {\n      const result = await this.searchDirectory(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectory(nextDir);\n      }\n\n      return await this.config.transform(result);\n    };\n\n    if (this.searchCache) {\n      return (0, _cacheWrapper.cacheWrapper)(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  async searchDirectory(dir) {\n    for await (const place of this.config.searchPlaces) {\n      const placeResult = await this.loadSearchPlace(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult)) {\n        return placeResult;\n      }\n    } // config not found\n\n\n    return null;\n  }\n\n  async loadSearchPlace(dir, place) {\n    const filepath = _path.default.join(dir, place);\n\n    const fileContents = await (0, _readFile.readFile)(filepath);\n    return await this.createCosmiconfigResult(filepath, fileContents, false);\n  }\n\n  async loadFileContent(filepath, content) {\n    if (content === null) {\n      return null;\n    }\n\n    if (content.trim() === '') {\n      return undefined;\n    }\n\n    const loader = this.getLoaderEntryForFile(filepath);\n\n    try {\n      return await loader(filepath, content);\n    } catch (e) {\n      e.filepath = filepath;\n      throw e;\n    }\n  }\n\n  async createCosmiconfigResult(filepath, content, forceProp) {\n    const fileContent = await this.loadFileContent(filepath, content);\n    return this.loadedContentToCosmiconfigResult(filepath, fileContent, forceProp);\n  }\n\n  async load(filepath) {\n    return this._loadFile(filepath, false);\n  }\n\n  async _loadFile(filepath, forceProp) {\n    this.validateFilePath(filepath);\n\n    const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n\n    const runLoad = async () => {\n      const fileContents = await (0, _readFile.readFile)(absoluteFilePath, {\n        throwNotFound: true\n      });\n      const result = await this.createCosmiconfigResult(absoluteFilePath, fileContents, forceProp);\n      return await this.config.transform(result);\n    };\n\n    if (this.loadCache) {\n      return (0, _cacheWrapper.cacheWrapper)(this.loadCache, absoluteFilePath, runLoad);\n    }\n\n    return runLoad();\n  }\n\n}\n\nexports.Explorer = Explorer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}