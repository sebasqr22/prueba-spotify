{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CDPElementHandle_instances, _CDPElementHandle_frame, _CDPElementHandle_frameManager_get, _CDPElementHandle_page_get, _CDPElementHandle_checkVisibility, _CDPElementHandle_scrollIntoViewIfNeeded, _CDPElementHandle_getOOPIFOffsets, _CDPElementHandle_getBoxModel, _CDPElementHandle_fromProtocolQuad, _CDPElementHandle_intersectQuadWithViewport;\nimport { ElementHandle } from '../api/ElementHandle.js';\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { getQueryHandlerAndSelector } from './GetQueryHandler.js';\nimport { PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { CDPJSHandle } from './JSHandle.js';\nimport { LazyArg } from './LazyArg.js';\nimport { debugError, isString } from './util.js';\nconst applyOffsetsToQuad = (quad, offsetX, offsetY) => {\n  return quad.map(part => {\n    return {\n      x: part.x + offsetX,\n      y: part.y + offsetY\n    };\n  });\n};\n/**\n * The CDPElementHandle extends ElementHandle now to keep compatibility\n * with `instanceof` because of that we need to have methods for\n * CDPJSHandle to in this implementation as well.\n *\n * @internal\n */\nexport class CDPElementHandle extends ElementHandle {\n  constructor(context, remoteObject, frame) {\n    super(new CDPJSHandle(context, remoteObject));\n    _CDPElementHandle_instances.add(this);\n    _CDPElementHandle_frame.set(this, void 0);\n    __classPrivateFieldSet(this, _CDPElementHandle_frame, frame, \"f\");\n  }\n  /**\n   * @internal\n   */\n  executionContext() {\n    return this.handle.executionContext();\n  }\n  /**\n   * @internal\n   */\n  get client() {\n    return this.handle.client;\n  }\n  remoteObject() {\n    return this.handle.remoteObject();\n  }\n  get frame() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\");\n  }\n  $(selector) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        updatedSelector,\n        QueryHandler\n      } = getQueryHandlerAndSelector(selector);\n      return yield QueryHandler.queryOne(_this, updatedSelector);\n    })();\n  }\n  $$(selector) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        updatedSelector,\n        QueryHandler\n      } = getQueryHandlerAndSelector(selector);\n      return AsyncIterableUtil.collect(QueryHandler.queryAll(_this2, updatedSelector));\n    })();\n  }\n  $eval(selector, pageFunction, ...args) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const elementHandle = yield _this3.$(selector);\n      if (!elementHandle) {\n        throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n      }\n      const result = yield elementHandle.evaluate(pageFunction, ...args);\n      yield elementHandle.dispose();\n      return result;\n    })();\n  }\n  $$eval(selector, pageFunction, ...args) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const results = yield _this4.$$(selector);\n      const elements = yield _this4.evaluateHandle((_, ...elements) => {\n        return elements;\n      }, ...results);\n      const [result] = yield Promise.all([elements.evaluate(pageFunction, ...args), ...results.map(results => {\n        return results.dispose();\n      })]);\n      yield elements.dispose();\n      return result;\n    })();\n  }\n  $x(expression) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (expression.startsWith('//')) {\n        expression = `.${expression}`;\n      }\n      return _this5.$$(`xpath/${expression}`);\n    })();\n  }\n  waitForSelector(selector, options = {}) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        updatedSelector,\n        QueryHandler\n      } = getQueryHandlerAndSelector(selector);\n      return yield QueryHandler.waitFor(_this6, updatedSelector, options);\n    })();\n  }\n  waitForXPath(xpath, options = {}) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (xpath.startsWith('//')) {\n        xpath = `.${xpath}`;\n      }\n      return _this7.waitForSelector(`xpath/${xpath}`, options);\n    })();\n  }\n  isVisible() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this8, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(_this8, true);\n    })();\n  }\n  isHidden() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this9, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(_this9, false);\n    })();\n  }\n  toElement(tagName) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const isMatchingTagName = yield _this10.evaluate((node, tagName) => {\n        return node.nodeName === tagName.toUpperCase();\n      }, tagName);\n      if (!isMatchingTagName) {\n        throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n      }\n      return _this10;\n    })();\n  }\n  contentFrame() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const nodeInfo = yield _this11.client.send('DOM.describeNode', {\n        objectId: _this11.remoteObject().objectId\n      });\n      if (typeof nodeInfo.node.frameId !== 'string') {\n        return null;\n      }\n      return __classPrivateFieldGet(_this11, _CDPElementHandle_instances, \"a\", _CDPElementHandle_frameManager_get).frame(nodeInfo.node.frameId);\n    })();\n  }\n  scrollIntoView() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      yield _this12.assertConnectedElement();\n      try {\n        yield _this12.client.send('DOM.scrollIntoViewIfNeeded', {\n          objectId: _this12.remoteObject().objectId\n        });\n      } catch (error) {\n        debugError(error);\n        // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported\n        yield _this12.evaluate( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (element) {\n            element.scrollIntoView({\n              block: 'center',\n              inline: 'center',\n              // @ts-expect-error Chrome still supports behavior: instant but\n              // it's not in the spec so TS shouts We don't want to make this\n              // breaking change in Puppeteer yet so we'll ignore the line.\n              behavior: 'instant'\n            });\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    })();\n  }\n  clickablePoint(offset) {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      const [result, layoutMetrics] = yield Promise.all([_this13.client.send('DOM.getContentQuads', {\n        objectId: _this13.remoteObject().objectId\n      }).catch(debugError), __classPrivateFieldGet(_this13, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get)._client().send('Page.getLayoutMetrics')]);\n      if (!result || !result.quads.length) {\n        throw new Error('Node is either not clickable or not an HTMLElement');\n      }\n      // Filter out quads that have too small area to click into.\n      // Fallback to `layoutViewport` in case of using Firefox.\n      const {\n        clientWidth,\n        clientHeight\n      } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n      const {\n        offsetX,\n        offsetY\n      } = yield __classPrivateFieldGet(_this13, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(_this13, __classPrivateFieldGet(_this13, _CDPElementHandle_frame, \"f\"));\n      const quads = result.quads.map(quad => {\n        return __classPrivateFieldGet(_this13, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(_this13, quad);\n      }).map(quad => {\n        return applyOffsetsToQuad(quad, offsetX, offsetY);\n      }).map(quad => {\n        return __classPrivateFieldGet(_this13, _CDPElementHandle_instances, \"m\", _CDPElementHandle_intersectQuadWithViewport).call(_this13, quad, clientWidth, clientHeight);\n      }).filter(quad => {\n        return computeQuadArea(quad) > 1;\n      });\n      if (!quads.length) {\n        throw new Error('Node is either not clickable or not an HTMLElement');\n      }\n      const quad = quads[0];\n      if (offset) {\n        // Return the point of the first quad identified by offset.\n        let minX = Number.MAX_SAFE_INTEGER;\n        let minY = Number.MAX_SAFE_INTEGER;\n        for (const point of quad) {\n          if (point.x < minX) {\n            minX = point.x;\n          }\n          if (point.y < minY) {\n            minY = point.y;\n          }\n        }\n        if (minX !== Number.MAX_SAFE_INTEGER && minY !== Number.MAX_SAFE_INTEGER) {\n          return {\n            x: minX + offset.x,\n            y: minY + offset.y\n          };\n        }\n      }\n      // Return the middle point of the first quad.\n      let x = 0;\n      let y = 0;\n      for (const point of quad) {\n        x += point.x;\n        y += point.y;\n      }\n      return {\n        x: x / 4,\n        y: y / 4\n      };\n    })();\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to hover over the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  hover() {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this14, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this14);\n      const {\n        x,\n        y\n      } = yield _this14.clickablePoint();\n      yield __classPrivateFieldGet(_this14, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.move(x, y);\n    })();\n  }\n  /**\n   * This method scrolls element into view if needed, and then\n   * uses {@link Page.mouse} to click in the center of the element.\n   * If the element is detached from DOM, the method throws an error.\n   */\n  click(options = {}) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this15, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this15);\n      const {\n        x,\n        y\n      } = yield _this15.clickablePoint(options.offset);\n      yield __classPrivateFieldGet(_this15, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.click(x, y, options);\n    })();\n  }\n  /**\n   * This method creates and captures a dragevent from the element.\n   */\n  drag(target) {\n    var _this16 = this;\n    return _asyncToGenerator(function* () {\n      assert(__classPrivateFieldGet(_this16, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).isDragInterceptionEnabled(), 'Drag Interception is not enabled!');\n      yield __classPrivateFieldGet(_this16, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this16);\n      const start = yield _this16.clickablePoint();\n      return yield __classPrivateFieldGet(_this16, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drag(start, target);\n    })();\n  }\n  dragEnter(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    var _this17 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this17, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this17);\n      const target = yield _this17.clickablePoint();\n      yield __classPrivateFieldGet(_this17, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragEnter(target, data);\n    })();\n  }\n  dragOver(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    var _this18 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this18, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this18);\n      const target = yield _this18.clickablePoint();\n      yield __classPrivateFieldGet(_this18, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragOver(target, data);\n    })();\n  }\n  drop(data = {\n    items: [],\n    dragOperationsMask: 1\n  }) {\n    var _this19 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this19, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this19);\n      const destination = yield _this19.clickablePoint();\n      yield __classPrivateFieldGet(_this19, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drop(destination, data);\n    })();\n  }\n  dragAndDrop(target, options) {\n    var _this20 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this20, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this20);\n      const startPoint = yield _this20.clickablePoint();\n      const targetPoint = yield target.clickablePoint();\n      yield __classPrivateFieldGet(_this20, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragAndDrop(startPoint, targetPoint, options);\n    })();\n  }\n  select(...values) {\n    var _this21 = this;\n    return _asyncToGenerator(function* () {\n      for (const value of values) {\n        assert(isString(value), 'Values must be strings. Found value \"' + value + '\" of type \"' + typeof value + '\"');\n      }\n      return _this21.evaluate((element, vals) => {\n        const values = new Set(vals);\n        if (!(element instanceof HTMLSelectElement)) {\n          throw new Error('Element is not a <select> element.');\n        }\n        const selectedValues = new Set();\n        if (!element.multiple) {\n          for (const option of element.options) {\n            option.selected = false;\n          }\n          for (const option of element.options) {\n            if (values.has(option.value)) {\n              option.selected = true;\n              selectedValues.add(option.value);\n              break;\n            }\n          }\n        } else {\n          for (const option of element.options) {\n            option.selected = values.has(option.value);\n            if (option.selected) {\n              selectedValues.add(option.value);\n            }\n          }\n        }\n        element.dispatchEvent(new Event('input', {\n          bubbles: true\n        }));\n        element.dispatchEvent(new Event('change', {\n          bubbles: true\n        }));\n        return [...selectedValues.values()];\n      }, values);\n    })();\n  }\n  uploadFile(...filePaths) {\n    var _this22 = this;\n    return _asyncToGenerator(function* () {\n      const isMultiple = yield _this22.evaluate(element => {\n        return element.multiple;\n      });\n      assert(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n      // Locate all files and confirm that they exist.\n      let path;\n      try {\n        path = yield import('path');\n      } catch (error) {\n        if (error instanceof TypeError) {\n          throw new Error(`JSHandle#uploadFile can only be used in Node-like environments.`);\n        }\n        throw error;\n      }\n      const files = filePaths.map(filePath => {\n        if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {\n          return filePath;\n        } else {\n          return path.resolve(filePath);\n        }\n      });\n      const {\n        objectId\n      } = _this22.remoteObject();\n      const {\n        node\n      } = yield _this22.client.send('DOM.describeNode', {\n        objectId\n      });\n      const {\n        backendNodeId\n      } = node;\n      /*  The zero-length array is a special case, it seems that\n           DOM.setFileInputFiles does not actually update the files in that case,\n           so the solution is to eval the element value to a new FileList directly.\n       */\n      if (files.length === 0) {\n        yield _this22.evaluate(element => {\n          element.files = new DataTransfer().files;\n          // Dispatch events for this case because it should behave akin to a user action.\n          element.dispatchEvent(new Event('input', {\n            bubbles: true\n          }));\n          element.dispatchEvent(new Event('change', {\n            bubbles: true\n          }));\n        });\n      } else {\n        yield _this22.client.send('DOM.setFileInputFiles', {\n          objectId,\n          files,\n          backendNodeId\n        });\n      }\n    })();\n  }\n  tap() {\n    var _this23 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this23, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this23);\n      const {\n        x,\n        y\n      } = yield _this23.clickablePoint();\n      yield __classPrivateFieldGet(_this23, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n      yield __classPrivateFieldGet(_this23, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n    })();\n  }\n  touchStart() {\n    var _this24 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this24, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this24);\n      const {\n        x,\n        y\n      } = yield _this24.clickablePoint();\n      yield __classPrivateFieldGet(_this24, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n    })();\n  }\n  touchMove() {\n    var _this25 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this25, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this25);\n      const {\n        x,\n        y\n      } = yield _this25.clickablePoint();\n      yield __classPrivateFieldGet(_this25, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchMove(x, y);\n    })();\n  }\n  touchEnd() {\n    var _this26 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this26, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this26);\n      yield __classPrivateFieldGet(_this26, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n    })();\n  }\n  focus() {\n    var _this27 = this;\n    return _asyncToGenerator(function* () {\n      yield _this27.evaluate(element => {\n        if (!(element instanceof HTMLElement)) {\n          throw new Error('Cannot focus non-HTMLElement');\n        }\n        return element.focus();\n      });\n    })();\n  }\n  type(text, options) {\n    var _this28 = this;\n    return _asyncToGenerator(function* () {\n      yield _this28.focus();\n      yield __classPrivateFieldGet(_this28, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.type(text, options);\n    })();\n  }\n  press(key, options) {\n    var _this29 = this;\n    return _asyncToGenerator(function* () {\n      yield _this29.focus();\n      yield __classPrivateFieldGet(_this29, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.press(key, options);\n    })();\n  }\n  boundingBox() {\n    var _this30 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield __classPrivateFieldGet(_this30, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(_this30);\n      if (!result) {\n        return null;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = yield __classPrivateFieldGet(_this30, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(_this30, __classPrivateFieldGet(_this30, _CDPElementHandle_frame, \"f\"));\n      const quad = result.model.border;\n      const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n      const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n      const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n      const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n      return {\n        x: x + offsetX,\n        y: y + offsetY,\n        width,\n        height\n      };\n    })();\n  }\n  boxModel() {\n    var _this31 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield __classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(_this31);\n      if (!result) {\n        return null;\n      }\n      const {\n        offsetX,\n        offsetY\n      } = yield __classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(_this31, __classPrivateFieldGet(_this31, _CDPElementHandle_frame, \"f\"));\n      const {\n        content,\n        padding,\n        border,\n        margin,\n        width,\n        height\n      } = result.model;\n      return {\n        content: applyOffsetsToQuad(__classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(_this31, content), offsetX, offsetY),\n        padding: applyOffsetsToQuad(__classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(_this31, padding), offsetX, offsetY),\n        border: applyOffsetsToQuad(__classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(_this31, border), offsetX, offsetY),\n        margin: applyOffsetsToQuad(__classPrivateFieldGet(_this31, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(_this31, margin), offsetX, offsetY),\n        width,\n        height\n      };\n    })();\n  }\n  screenshot(options = {}) {\n    var _this32 = this;\n    return _asyncToGenerator(function* () {\n      let needsViewportReset = false;\n      let boundingBox = yield _this32.boundingBox();\n      assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n      const viewport = __classPrivateFieldGet(_this32, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).viewport();\n      if (viewport && (boundingBox.width > viewport.width || boundingBox.height > viewport.height)) {\n        const newViewport = {\n          width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n          height: Math.max(viewport.height, Math.ceil(boundingBox.height))\n        };\n        yield __classPrivateFieldGet(_this32, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(Object.assign({}, viewport, newViewport));\n        needsViewportReset = true;\n      }\n      yield __classPrivateFieldGet(_this32, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(_this32);\n      boundingBox = yield _this32.boundingBox();\n      assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n      assert(boundingBox.width !== 0, 'Node has 0 width.');\n      assert(boundingBox.height !== 0, 'Node has 0 height.');\n      const layoutMetrics = yield _this32.client.send('Page.getLayoutMetrics');\n      // Fallback to `layoutViewport` in case of using Firefox.\n      const {\n        pageX,\n        pageY\n      } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n      const clip = Object.assign({}, boundingBox);\n      clip.x += pageX;\n      clip.y += pageY;\n      const imageData = yield __classPrivateFieldGet(_this32, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).screenshot(Object.assign({}, {\n        clip\n      }, options));\n      if (needsViewportReset && viewport) {\n        yield __classPrivateFieldGet(_this32, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(viewport);\n      }\n      return imageData;\n    })();\n  }\n}\n_CDPElementHandle_frame = new WeakMap(), _CDPElementHandle_instances = new WeakSet(), _CDPElementHandle_frameManager_get = function _CDPElementHandle_frameManager_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\")._frameManager;\n}, _CDPElementHandle_page_get = function _CDPElementHandle_page_get() {\n  return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\").page();\n}, _CDPElementHandle_checkVisibility = /*#__PURE__*/function () {\n  var _CDPElementHandle_checkVisibility2 = _asyncToGenerator(function* (visibility) {\n    const element = yield this.frame.worlds[PUPPETEER_WORLD].adoptHandle(this);\n    try {\n      return yield this.frame.worlds[PUPPETEER_WORLD].evaluate( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (PuppeteerUtil, element, visibility) {\n          return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n        });\n        return function (_x3, _x4, _x5) {\n          return _ref2.apply(this, arguments);\n        };\n      }(), LazyArg.create(context => {\n        return context.puppeteerUtil;\n      }), element, visibility);\n    } finally {\n      yield element.dispose();\n    }\n  });\n  function _CDPElementHandle_checkVisibility(_x2) {\n    return _CDPElementHandle_checkVisibility2.apply(this, arguments);\n  }\n  return _CDPElementHandle_checkVisibility;\n}(), _CDPElementHandle_scrollIntoViewIfNeeded = /*#__PURE__*/function () {\n  var _CDPElementHandle_scrollIntoViewIfNeeded2 = _asyncToGenerator(function* () {\n    if (yield this.isIntersectingViewport({\n      threshold: 1\n    })) {\n      return;\n    }\n    yield this.scrollIntoView();\n  });\n  function _CDPElementHandle_scrollIntoViewIfNeeded() {\n    return _CDPElementHandle_scrollIntoViewIfNeeded2.apply(this, arguments);\n  }\n  return _CDPElementHandle_scrollIntoViewIfNeeded;\n}(), _CDPElementHandle_getOOPIFOffsets = /*#__PURE__*/function () {\n  var _CDPElementHandle_getOOPIFOffsets2 = _asyncToGenerator(function* (frame) {\n    let offsetX = 0;\n    let offsetY = 0;\n    let currentFrame = frame;\n    while (currentFrame && currentFrame.parentFrame()) {\n      const parent = currentFrame.parentFrame();\n      if (!currentFrame.isOOPFrame() || !parent) {\n        currentFrame = parent;\n        continue;\n      }\n      const {\n        backendNodeId\n      } = yield parent._client().send('DOM.getFrameOwner', {\n        frameId: currentFrame._id\n      });\n      const result = yield parent._client().send('DOM.getBoxModel', {\n        backendNodeId: backendNodeId\n      });\n      if (!result) {\n        break;\n      }\n      const contentBoxQuad = result.model.content;\n      const topLeftCorner = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, contentBoxQuad)[0];\n      offsetX += topLeftCorner.x;\n      offsetY += topLeftCorner.y;\n      currentFrame = parent;\n    }\n    return {\n      offsetX,\n      offsetY\n    };\n  });\n  function _CDPElementHandle_getOOPIFOffsets(_x6) {\n    return _CDPElementHandle_getOOPIFOffsets2.apply(this, arguments);\n  }\n  return _CDPElementHandle_getOOPIFOffsets;\n}(), _CDPElementHandle_getBoxModel = function _CDPElementHandle_getBoxModel() {\n  const params = {\n    objectId: this.id\n  };\n  return this.client.send('DOM.getBoxModel', params).catch(error => {\n    return debugError(error);\n  });\n}, _CDPElementHandle_fromProtocolQuad = function _CDPElementHandle_fromProtocolQuad(quad) {\n  return [{\n    x: quad[0],\n    y: quad[1]\n  }, {\n    x: quad[2],\n    y: quad[3]\n  }, {\n    x: quad[4],\n    y: quad[5]\n  }, {\n    x: quad[6],\n    y: quad[7]\n  }];\n}, _CDPElementHandle_intersectQuadWithViewport = function _CDPElementHandle_intersectQuadWithViewport(quad, width, height) {\n  return quad.map(point => {\n    return {\n      x: Math.min(Math.max(point.x, 0), width),\n      y: Math.min(Math.max(point.y, 0), height)\n    };\n  });\n};\nfunction computeQuadArea(quad) {\n  /* Compute sum of all directed areas of adjacent triangles\n     https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n   */\n  let area = 0;\n  for (let i = 0; i < quad.length; ++i) {\n    const p1 = quad[i];\n    const p2 = quad[(i + 1) % quad.length];\n    area += (p1.x * p2.y - p2.x * p1.y) / 2;\n  }\n  return Math.abs(area);\n}","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_CDPElementHandle_instances","_CDPElementHandle_frame","_CDPElementHandle_frameManager_get","_CDPElementHandle_page_get","_CDPElementHandle_checkVisibility","_CDPElementHandle_scrollIntoViewIfNeeded","_CDPElementHandle_getOOPIFOffsets","_CDPElementHandle_getBoxModel","_CDPElementHandle_fromProtocolQuad","_CDPElementHandle_intersectQuadWithViewport","ElementHandle","assert","AsyncIterableUtil","getQueryHandlerAndSelector","PUPPETEER_WORLD","CDPJSHandle","LazyArg","debugError","isString","applyOffsetsToQuad","quad","offsetX","offsetY","map","part","x","y","CDPElementHandle","constructor","context","remoteObject","frame","add","executionContext","handle","client","$","selector","updatedSelector","QueryHandler","queryOne","$$","collect","queryAll","$eval","pageFunction","args","elementHandle","Error","result","evaluate","dispose","$$eval","results","elements","evaluateHandle","_","Promise","all","$x","expression","startsWith","waitForSelector","options","waitFor","waitForXPath","xpath","isVisible","isHidden","toElement","tagName","isMatchingTagName","node","nodeName","toUpperCase","contentFrame","nodeInfo","send","objectId","frameId","scrollIntoView","assertConnectedElement","error","element","block","inline","behavior","clickablePoint","offset","layoutMetrics","catch","_client","quads","length","clientWidth","clientHeight","cssLayoutViewport","layoutViewport","filter","computeQuadArea","minX","Number","MAX_SAFE_INTEGER","minY","point","hover","mouse","move","click","drag","target","isDragInterceptionEnabled","start","dragEnter","data","items","dragOperationsMask","dragOver","drop","destination","dragAndDrop","startPoint","targetPoint","select","values","vals","Set","HTMLSelectElement","selectedValues","multiple","option","selected","dispatchEvent","Event","bubbles","uploadFile","filePaths","isMultiple","path","files","filePath","win32","isAbsolute","posix","resolve","backendNodeId","DataTransfer","tap","touchscreen","touchStart","touchEnd","touchMove","focus","HTMLElement","type","text","keyboard","press","key","boundingBox","model","border","Math","min","width","max","height","boxModel","content","padding","margin","screenshot","needsViewportReset","viewport","newViewport","ceil","setViewport","Object","assign","pageX","pageY","cssVisualViewport","clip","imageData","WeakMap","WeakSet","_frameManager","page","visibility","worlds","adoptHandle","PuppeteerUtil","Boolean","checkVisibility","create","puppeteerUtil","isIntersectingViewport","threshold","currentFrame","parentFrame","parent","isOOPFrame","_id","contentBoxQuad","topLeftCorner","params","id","area","i","p1","p2","abs"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/ElementHandle.js"],"sourcesContent":["/**\n * Copyright 2019 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CDPElementHandle_instances, _CDPElementHandle_frame, _CDPElementHandle_frameManager_get, _CDPElementHandle_page_get, _CDPElementHandle_checkVisibility, _CDPElementHandle_scrollIntoViewIfNeeded, _CDPElementHandle_getOOPIFOffsets, _CDPElementHandle_getBoxModel, _CDPElementHandle_fromProtocolQuad, _CDPElementHandle_intersectQuadWithViewport;\nimport { ElementHandle, } from '../api/ElementHandle.js';\nimport { assert } from '../util/assert.js';\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { getQueryHandlerAndSelector } from './GetQueryHandler.js';\nimport { PUPPETEER_WORLD } from './IsolatedWorlds.js';\nimport { CDPJSHandle } from './JSHandle.js';\nimport { LazyArg } from './LazyArg.js';\nimport { debugError, isString } from './util.js';\nconst applyOffsetsToQuad = (quad, offsetX, offsetY) => {\n    return quad.map(part => {\n        return { x: part.x + offsetX, y: part.y + offsetY };\n    });\n};\n/**\n * The CDPElementHandle extends ElementHandle now to keep compatibility\n * with `instanceof` because of that we need to have methods for\n * CDPJSHandle to in this implementation as well.\n *\n * @internal\n */\nexport class CDPElementHandle extends ElementHandle {\n    constructor(context, remoteObject, frame) {\n        super(new CDPJSHandle(context, remoteObject));\n        _CDPElementHandle_instances.add(this);\n        _CDPElementHandle_frame.set(this, void 0);\n        __classPrivateFieldSet(this, _CDPElementHandle_frame, frame, \"f\");\n    }\n    /**\n     * @internal\n     */\n    executionContext() {\n        return this.handle.executionContext();\n    }\n    /**\n     * @internal\n     */\n    get client() {\n        return this.handle.client;\n    }\n    remoteObject() {\n        return this.handle.remoteObject();\n    }\n    get frame() {\n        return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\");\n    }\n    async $(selector) {\n        const { updatedSelector, QueryHandler } = getQueryHandlerAndSelector(selector);\n        return (await QueryHandler.queryOne(this, updatedSelector));\n    }\n    async $$(selector) {\n        const { updatedSelector, QueryHandler } = getQueryHandlerAndSelector(selector);\n        return AsyncIterableUtil.collect(QueryHandler.queryAll(this, updatedSelector));\n    }\n    async $eval(selector, pageFunction, ...args) {\n        const elementHandle = await this.$(selector);\n        if (!elementHandle) {\n            throw new Error(`Error: failed to find element matching selector \"${selector}\"`);\n        }\n        const result = await elementHandle.evaluate(pageFunction, ...args);\n        await elementHandle.dispose();\n        return result;\n    }\n    async $$eval(selector, pageFunction, ...args) {\n        const results = await this.$$(selector);\n        const elements = await this.evaluateHandle((_, ...elements) => {\n            return elements;\n        }, ...results);\n        const [result] = await Promise.all([\n            elements.evaluate(pageFunction, ...args),\n            ...results.map(results => {\n                return results.dispose();\n            }),\n        ]);\n        await elements.dispose();\n        return result;\n    }\n    async $x(expression) {\n        if (expression.startsWith('//')) {\n            expression = `.${expression}`;\n        }\n        return this.$$(`xpath/${expression}`);\n    }\n    async waitForSelector(selector, options = {}) {\n        const { updatedSelector, QueryHandler } = getQueryHandlerAndSelector(selector);\n        return (await QueryHandler.waitFor(this, updatedSelector, options));\n    }\n    async waitForXPath(xpath, options = {}) {\n        if (xpath.startsWith('//')) {\n            xpath = `.${xpath}`;\n        }\n        return this.waitForSelector(`xpath/${xpath}`, options);\n    }\n    async isVisible() {\n        return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, true);\n    }\n    async isHidden() {\n        return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_checkVisibility).call(this, false);\n    }\n    async toElement(tagName) {\n        const isMatchingTagName = await this.evaluate((node, tagName) => {\n            return node.nodeName === tagName.toUpperCase();\n        }, tagName);\n        if (!isMatchingTagName) {\n            throw new Error(`Element is not a(n) \\`${tagName}\\` element`);\n        }\n        return this;\n    }\n    async contentFrame() {\n        const nodeInfo = await this.client.send('DOM.describeNode', {\n            objectId: this.remoteObject().objectId,\n        });\n        if (typeof nodeInfo.node.frameId !== 'string') {\n            return null;\n        }\n        return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_frameManager_get).frame(nodeInfo.node.frameId);\n    }\n    async scrollIntoView() {\n        await this.assertConnectedElement();\n        try {\n            await this.client.send('DOM.scrollIntoViewIfNeeded', {\n                objectId: this.remoteObject().objectId,\n            });\n        }\n        catch (error) {\n            debugError(error);\n            // Fallback to Element.scrollIntoView if DOM.scrollIntoViewIfNeeded is not supported\n            await this.evaluate(async (element) => {\n                element.scrollIntoView({\n                    block: 'center',\n                    inline: 'center',\n                    // @ts-expect-error Chrome still supports behavior: instant but\n                    // it's not in the spec so TS shouts We don't want to make this\n                    // breaking change in Puppeteer yet so we'll ignore the line.\n                    behavior: 'instant',\n                });\n            });\n        }\n    }\n    async clickablePoint(offset) {\n        const [result, layoutMetrics] = await Promise.all([\n            this.client\n                .send('DOM.getContentQuads', {\n                objectId: this.remoteObject().objectId,\n            })\n                .catch(debugError),\n            __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get)._client().send('Page.getLayoutMetrics'),\n        ]);\n        if (!result || !result.quads.length) {\n            throw new Error('Node is either not clickable or not an HTMLElement');\n        }\n        // Filter out quads that have too small area to click into.\n        // Fallback to `layoutViewport` in case of using Firefox.\n        const { clientWidth, clientHeight } = layoutMetrics.cssLayoutViewport || layoutMetrics.layoutViewport;\n        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n        const quads = result.quads\n            .map(quad => {\n            return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, quad);\n        })\n            .map(quad => {\n            return applyOffsetsToQuad(quad, offsetX, offsetY);\n        })\n            .map(quad => {\n            return __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_intersectQuadWithViewport).call(this, quad, clientWidth, clientHeight);\n        })\n            .filter(quad => {\n            return computeQuadArea(quad) > 1;\n        });\n        if (!quads.length) {\n            throw new Error('Node is either not clickable or not an HTMLElement');\n        }\n        const quad = quads[0];\n        if (offset) {\n            // Return the point of the first quad identified by offset.\n            let minX = Number.MAX_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            for (const point of quad) {\n                if (point.x < minX) {\n                    minX = point.x;\n                }\n                if (point.y < minY) {\n                    minY = point.y;\n                }\n            }\n            if (minX !== Number.MAX_SAFE_INTEGER &&\n                minY !== Number.MAX_SAFE_INTEGER) {\n                return {\n                    x: minX + offset.x,\n                    y: minY + offset.y,\n                };\n            }\n        }\n        // Return the middle point of the first quad.\n        let x = 0;\n        let y = 0;\n        for (const point of quad) {\n            x += point.x;\n            y += point.y;\n        }\n        return {\n            x: x / 4,\n            y: y / 4,\n        };\n    }\n    /**\n     * This method scrolls element into view if needed, and then\n     * uses {@link Page.mouse} to hover over the center of the element.\n     * If the element is detached from DOM, the method throws an error.\n     */\n    async hover() {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const { x, y } = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.move(x, y);\n    }\n    /**\n     * This method scrolls element into view if needed, and then\n     * uses {@link Page.mouse} to click in the center of the element.\n     * If the element is detached from DOM, the method throws an error.\n     */\n    async click(options = {}) {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const { x, y } = await this.clickablePoint(options.offset);\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.click(x, y, options);\n    }\n    /**\n     * This method creates and captures a dragevent from the element.\n     */\n    async drag(target) {\n        assert(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).isDragInterceptionEnabled(), 'Drag Interception is not enabled!');\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const start = await this.clickablePoint();\n        return await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drag(start, target);\n    }\n    async dragEnter(data = { items: [], dragOperationsMask: 1 }) {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const target = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragEnter(target, data);\n    }\n    async dragOver(data = { items: [], dragOperationsMask: 1 }) {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const target = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragOver(target, data);\n    }\n    async drop(data = { items: [], dragOperationsMask: 1 }) {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const destination = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.drop(destination, data);\n    }\n    async dragAndDrop(target, options) {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const startPoint = await this.clickablePoint();\n        const targetPoint = await target.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).mouse.dragAndDrop(startPoint, targetPoint, options);\n    }\n    async select(...values) {\n        for (const value of values) {\n            assert(isString(value), 'Values must be strings. Found value \"' +\n                value +\n                '\" of type \"' +\n                typeof value +\n                '\"');\n        }\n        return this.evaluate((element, vals) => {\n            const values = new Set(vals);\n            if (!(element instanceof HTMLSelectElement)) {\n                throw new Error('Element is not a <select> element.');\n            }\n            const selectedValues = new Set();\n            if (!element.multiple) {\n                for (const option of element.options) {\n                    option.selected = false;\n                }\n                for (const option of element.options) {\n                    if (values.has(option.value)) {\n                        option.selected = true;\n                        selectedValues.add(option.value);\n                        break;\n                    }\n                }\n            }\n            else {\n                for (const option of element.options) {\n                    option.selected = values.has(option.value);\n                    if (option.selected) {\n                        selectedValues.add(option.value);\n                    }\n                }\n            }\n            element.dispatchEvent(new Event('input', { bubbles: true }));\n            element.dispatchEvent(new Event('change', { bubbles: true }));\n            return [...selectedValues.values()];\n        }, values);\n    }\n    async uploadFile(...filePaths) {\n        const isMultiple = await this.evaluate(element => {\n            return element.multiple;\n        });\n        assert(filePaths.length <= 1 || isMultiple, 'Multiple file uploads only work with <input type=file multiple>');\n        // Locate all files and confirm that they exist.\n        let path;\n        try {\n            path = await import('path');\n        }\n        catch (error) {\n            if (error instanceof TypeError) {\n                throw new Error(`JSHandle#uploadFile can only be used in Node-like environments.`);\n            }\n            throw error;\n        }\n        const files = filePaths.map(filePath => {\n            if (path.win32.isAbsolute(filePath) || path.posix.isAbsolute(filePath)) {\n                return filePath;\n            }\n            else {\n                return path.resolve(filePath);\n            }\n        });\n        const { objectId } = this.remoteObject();\n        const { node } = await this.client.send('DOM.describeNode', {\n            objectId,\n        });\n        const { backendNodeId } = node;\n        /*  The zero-length array is a special case, it seems that\n             DOM.setFileInputFiles does not actually update the files in that case,\n             so the solution is to eval the element value to a new FileList directly.\n         */\n        if (files.length === 0) {\n            await this.evaluate(element => {\n                element.files = new DataTransfer().files;\n                // Dispatch events for this case because it should behave akin to a user action.\n                element.dispatchEvent(new Event('input', { bubbles: true }));\n                element.dispatchEvent(new Event('change', { bubbles: true }));\n            });\n        }\n        else {\n            await this.client.send('DOM.setFileInputFiles', {\n                objectId,\n                files,\n                backendNodeId,\n            });\n        }\n    }\n    async tap() {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const { x, y } = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n    }\n    async touchStart() {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const { x, y } = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchStart(x, y);\n    }\n    async touchMove() {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        const { x, y } = await this.clickablePoint();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchMove(x, y);\n    }\n    async touchEnd() {\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).touchscreen.touchEnd();\n    }\n    async focus() {\n        await this.evaluate(element => {\n            if (!(element instanceof HTMLElement)) {\n                throw new Error('Cannot focus non-HTMLElement');\n            }\n            return element.focus();\n        });\n    }\n    async type(text, options) {\n        await this.focus();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.type(text, options);\n    }\n    async press(key, options) {\n        await this.focus();\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).keyboard.press(key, options);\n    }\n    async boundingBox() {\n        const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n        if (!result) {\n            return null;\n        }\n        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n        const quad = result.model.border;\n        const x = Math.min(quad[0], quad[2], quad[4], quad[6]);\n        const y = Math.min(quad[1], quad[3], quad[5], quad[7]);\n        const width = Math.max(quad[0], quad[2], quad[4], quad[6]) - x;\n        const height = Math.max(quad[1], quad[3], quad[5], quad[7]) - y;\n        return { x: x + offsetX, y: y + offsetY, width, height };\n    }\n    async boxModel() {\n        const result = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getBoxModel).call(this);\n        if (!result) {\n            return null;\n        }\n        const { offsetX, offsetY } = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_getOOPIFOffsets).call(this, __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\"));\n        const { content, padding, border, margin, width, height } = result.model;\n        return {\n            content: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, content), offsetX, offsetY),\n            padding: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, padding), offsetX, offsetY),\n            border: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, border), offsetX, offsetY),\n            margin: applyOffsetsToQuad(__classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, margin), offsetX, offsetY),\n            width,\n            height,\n        };\n    }\n    async screenshot(options = {}) {\n        let needsViewportReset = false;\n        let boundingBox = await this.boundingBox();\n        assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n        const viewport = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).viewport();\n        if (viewport &&\n            (boundingBox.width > viewport.width ||\n                boundingBox.height > viewport.height)) {\n            const newViewport = {\n                width: Math.max(viewport.width, Math.ceil(boundingBox.width)),\n                height: Math.max(viewport.height, Math.ceil(boundingBox.height)),\n            };\n            await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(Object.assign({}, viewport, newViewport));\n            needsViewportReset = true;\n        }\n        await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_scrollIntoViewIfNeeded).call(this);\n        boundingBox = await this.boundingBox();\n        assert(boundingBox, 'Node is either not visible or not an HTMLElement');\n        assert(boundingBox.width !== 0, 'Node has 0 width.');\n        assert(boundingBox.height !== 0, 'Node has 0 height.');\n        const layoutMetrics = await this.client.send('Page.getLayoutMetrics');\n        // Fallback to `layoutViewport` in case of using Firefox.\n        const { pageX, pageY } = layoutMetrics.cssVisualViewport || layoutMetrics.layoutViewport;\n        const clip = Object.assign({}, boundingBox);\n        clip.x += pageX;\n        clip.y += pageY;\n        const imageData = await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).screenshot(Object.assign({}, {\n            clip,\n        }, options));\n        if (needsViewportReset && viewport) {\n            await __classPrivateFieldGet(this, _CDPElementHandle_instances, \"a\", _CDPElementHandle_page_get).setViewport(viewport);\n        }\n        return imageData;\n    }\n}\n_CDPElementHandle_frame = new WeakMap(), _CDPElementHandle_instances = new WeakSet(), _CDPElementHandle_frameManager_get = function _CDPElementHandle_frameManager_get() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\")._frameManager;\n}, _CDPElementHandle_page_get = function _CDPElementHandle_page_get() {\n    return __classPrivateFieldGet(this, _CDPElementHandle_frame, \"f\").page();\n}, _CDPElementHandle_checkVisibility = async function _CDPElementHandle_checkVisibility(visibility) {\n    const element = await this.frame.worlds[PUPPETEER_WORLD].adoptHandle(this);\n    try {\n        return await this.frame.worlds[PUPPETEER_WORLD].evaluate(async (PuppeteerUtil, element, visibility) => {\n            return Boolean(PuppeteerUtil.checkVisibility(element, visibility));\n        }, LazyArg.create(context => {\n            return context.puppeteerUtil;\n        }), element, visibility);\n    }\n    finally {\n        await element.dispose();\n    }\n}, _CDPElementHandle_scrollIntoViewIfNeeded = async function _CDPElementHandle_scrollIntoViewIfNeeded() {\n    if (await this.isIntersectingViewport({\n        threshold: 1,\n    })) {\n        return;\n    }\n    await this.scrollIntoView();\n}, _CDPElementHandle_getOOPIFOffsets = async function _CDPElementHandle_getOOPIFOffsets(frame) {\n    let offsetX = 0;\n    let offsetY = 0;\n    let currentFrame = frame;\n    while (currentFrame && currentFrame.parentFrame()) {\n        const parent = currentFrame.parentFrame();\n        if (!currentFrame.isOOPFrame() || !parent) {\n            currentFrame = parent;\n            continue;\n        }\n        const { backendNodeId } = await parent._client().send('DOM.getFrameOwner', {\n            frameId: currentFrame._id,\n        });\n        const result = await parent._client().send('DOM.getBoxModel', {\n            backendNodeId: backendNodeId,\n        });\n        if (!result) {\n            break;\n        }\n        const contentBoxQuad = result.model.content;\n        const topLeftCorner = __classPrivateFieldGet(this, _CDPElementHandle_instances, \"m\", _CDPElementHandle_fromProtocolQuad).call(this, contentBoxQuad)[0];\n        offsetX += topLeftCorner.x;\n        offsetY += topLeftCorner.y;\n        currentFrame = parent;\n    }\n    return { offsetX, offsetY };\n}, _CDPElementHandle_getBoxModel = function _CDPElementHandle_getBoxModel() {\n    const params = {\n        objectId: this.id,\n    };\n    return this.client.send('DOM.getBoxModel', params).catch(error => {\n        return debugError(error);\n    });\n}, _CDPElementHandle_fromProtocolQuad = function _CDPElementHandle_fromProtocolQuad(quad) {\n    return [\n        { x: quad[0], y: quad[1] },\n        { x: quad[2], y: quad[3] },\n        { x: quad[4], y: quad[5] },\n        { x: quad[6], y: quad[7] },\n    ];\n}, _CDPElementHandle_intersectQuadWithViewport = function _CDPElementHandle_intersectQuadWithViewport(quad, width, height) {\n    return quad.map(point => {\n        return {\n            x: Math.min(Math.max(point.x, 0), width),\n            y: Math.min(Math.max(point.y, 0), height),\n        };\n    });\n};\nfunction computeQuadArea(quad) {\n    /* Compute sum of all directed areas of adjacent triangles\n       https://en.wikipedia.org/wiki/Polygon#Simple_polygons\n     */\n    let area = 0;\n    for (let i = 0; i < quad.length; ++i) {\n        const p1 = quad[i];\n        const p2 = quad[(i + 1) % quad.length];\n        area += (p1.x * p2.y - p2.x * p1.y) / 2;\n    }\n    return Math.abs(area);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}