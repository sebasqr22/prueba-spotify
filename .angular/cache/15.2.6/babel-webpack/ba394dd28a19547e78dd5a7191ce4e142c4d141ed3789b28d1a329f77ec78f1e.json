{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Dialog_client, _Dialog_type, _Dialog_message, _Dialog_defaultValue, _Dialog_handled;\nimport { assert } from '../util/assert.js';\n/**\n * Dialog instances are dispatched by the {@link Page} via the `dialog` event.\n *\n * @remarks\n *\n * @example\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   page.on('dialog', async dialog => {\n *     console.log(dialog.message());\n *     await dialog.dismiss();\n *     await browser.close();\n *   });\n *   page.evaluate(() => alert('1'));\n * })();\n * ```\n *\n * @public\n */\nexport class Dialog {\n  /**\n   * @internal\n   */\n  constructor(client, type, message, defaultValue = '') {\n    _Dialog_client.set(this, void 0);\n    _Dialog_type.set(this, void 0);\n    _Dialog_message.set(this, void 0);\n    _Dialog_defaultValue.set(this, void 0);\n    _Dialog_handled.set(this, false);\n    __classPrivateFieldSet(this, _Dialog_client, client, \"f\");\n    __classPrivateFieldSet(this, _Dialog_type, type, \"f\");\n    __classPrivateFieldSet(this, _Dialog_message, message, \"f\");\n    __classPrivateFieldSet(this, _Dialog_defaultValue, defaultValue, \"f\");\n  }\n  /**\n   * The type of the dialog.\n   */\n  type() {\n    return __classPrivateFieldGet(this, _Dialog_type, \"f\");\n  }\n  /**\n   * The message displayed in the dialog.\n   */\n  message() {\n    return __classPrivateFieldGet(this, _Dialog_message, \"f\");\n  }\n  /**\n   * The default value of the prompt, or an empty string if the dialog\n   * is not a `prompt`.\n   */\n  defaultValue() {\n    return __classPrivateFieldGet(this, _Dialog_defaultValue, \"f\");\n  }\n  /**\n   * A promise that resolves when the dialog has been accepted.\n   *\n   * @param promptText - optional text that will be entered in the dialog\n   * prompt. Has no effect if the dialog's type is not `prompt`.\n   *\n   */\n  accept(promptText) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      assert(!__classPrivateFieldGet(_this, _Dialog_handled, \"f\"), 'Cannot accept dialog which is already handled!');\n      __classPrivateFieldSet(_this, _Dialog_handled, true, \"f\");\n      yield __classPrivateFieldGet(_this, _Dialog_client, \"f\").send('Page.handleJavaScriptDialog', {\n        accept: true,\n        promptText: promptText\n      });\n    })();\n  }\n  /**\n   * A promise which will resolve once the dialog has been dismissed\n   */\n  dismiss() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      assert(!__classPrivateFieldGet(_this2, _Dialog_handled, \"f\"), 'Cannot dismiss dialog which is already handled!');\n      __classPrivateFieldSet(_this2, _Dialog_handled, true, \"f\");\n      yield __classPrivateFieldGet(_this2, _Dialog_client, \"f\").send('Page.handleJavaScriptDialog', {\n        accept: false\n      });\n    })();\n  }\n}\n_Dialog_client = new WeakMap(), _Dialog_type = new WeakMap(), _Dialog_message = new WeakMap(), _Dialog_defaultValue = new WeakMap(), _Dialog_handled = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Dialog_client","_Dialog_type","_Dialog_message","_Dialog_defaultValue","_Dialog_handled","assert","Dialog","constructor","client","type","message","defaultValue","accept","promptText","send","dismiss","WeakMap"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/Dialog.js"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Dialog_client, _Dialog_type, _Dialog_message, _Dialog_defaultValue, _Dialog_handled;\nimport { assert } from '../util/assert.js';\n/**\n * Dialog instances are dispatched by the {@link Page} via the `dialog` event.\n *\n * @remarks\n *\n * @example\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   page.on('dialog', async dialog => {\n *     console.log(dialog.message());\n *     await dialog.dismiss();\n *     await browser.close();\n *   });\n *   page.evaluate(() => alert('1'));\n * })();\n * ```\n *\n * @public\n */\nexport class Dialog {\n    /**\n     * @internal\n     */\n    constructor(client, type, message, defaultValue = '') {\n        _Dialog_client.set(this, void 0);\n        _Dialog_type.set(this, void 0);\n        _Dialog_message.set(this, void 0);\n        _Dialog_defaultValue.set(this, void 0);\n        _Dialog_handled.set(this, false);\n        __classPrivateFieldSet(this, _Dialog_client, client, \"f\");\n        __classPrivateFieldSet(this, _Dialog_type, type, \"f\");\n        __classPrivateFieldSet(this, _Dialog_message, message, \"f\");\n        __classPrivateFieldSet(this, _Dialog_defaultValue, defaultValue, \"f\");\n    }\n    /**\n     * The type of the dialog.\n     */\n    type() {\n        return __classPrivateFieldGet(this, _Dialog_type, \"f\");\n    }\n    /**\n     * The message displayed in the dialog.\n     */\n    message() {\n        return __classPrivateFieldGet(this, _Dialog_message, \"f\");\n    }\n    /**\n     * The default value of the prompt, or an empty string if the dialog\n     * is not a `prompt`.\n     */\n    defaultValue() {\n        return __classPrivateFieldGet(this, _Dialog_defaultValue, \"f\");\n    }\n    /**\n     * A promise that resolves when the dialog has been accepted.\n     *\n     * @param promptText - optional text that will be entered in the dialog\n     * prompt. Has no effect if the dialog's type is not `prompt`.\n     *\n     */\n    async accept(promptText) {\n        assert(!__classPrivateFieldGet(this, _Dialog_handled, \"f\"), 'Cannot accept dialog which is already handled!');\n        __classPrivateFieldSet(this, _Dialog_handled, true, \"f\");\n        await __classPrivateFieldGet(this, _Dialog_client, \"f\").send('Page.handleJavaScriptDialog', {\n            accept: true,\n            promptText: promptText,\n        });\n    }\n    /**\n     * A promise which will resolve once the dialog has been dismissed\n     */\n    async dismiss() {\n        assert(!__classPrivateFieldGet(this, _Dialog_handled, \"f\"), 'Cannot dismiss dialog which is already handled!');\n        __classPrivateFieldSet(this, _Dialog_handled, true, \"f\");\n        await __classPrivateFieldGet(this, _Dialog_client, \"f\").send('Page.handleJavaScriptDialog', {\n            accept: false,\n        });\n    }\n}\n_Dialog_client = new WeakMap(), _Dialog_type = new WeakMap(), _Dialog_message = new WeakMap(), _Dialog_defaultValue = new WeakMap(), _Dialog_handled = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}