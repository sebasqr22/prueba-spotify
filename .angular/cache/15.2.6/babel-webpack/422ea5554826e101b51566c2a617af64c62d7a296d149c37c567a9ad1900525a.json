{"ast":null,"code":"/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([['geolocation', 'geolocation'], ['midi', 'midi'], ['notifications', 'notifications'],\n// TODO: push isn't a valid type?\n// ['push', 'push'],\n['camera', 'videoCapture'], ['microphone', 'audioCapture'], ['background-sync', 'backgroundSync'], ['ambient-light-sensor', 'sensors'], ['accelerometer', 'sensors'], ['gyroscope', 'sensors'], ['magnetometer', 'sensors'], ['accessibility-events', 'accessibilityEvents'], ['clipboard-read', 'clipboardReadWrite'], ['clipboard-write', 'clipboardReadWrite'], ['payment-handler', 'paymentHandler'], ['persistent-storage', 'durableStorage'], ['idle-detection', 'idleDetection'],\n// chrome-specific permissions we have.\n['midi-sysex', 'midiSysex']]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n  /**\n   * @internal\n   */\n  constructor() {\n    super();\n  }\n  /**\n   * @internal\n   */\n  _attach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _detach() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  get _targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The spawned browser process. Returns `null` if the browser instance was created with\n   * {@link Puppeteer.connect}.\n   */\n  process() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * @internal\n   */\n  _getIsPageTargetCallback() {\n    throw new Error('Not implemented');\n  }\n  createIncognitoBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns an array of all open browser contexts. In a newly created browser, this will\n   * return a single instance of {@link BrowserContext}.\n   */\n  browserContexts() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Returns the default browser context. The default browser context cannot be closed.\n   */\n  defaultBrowserContext() {\n    throw new Error('Not implemented');\n  }\n  _disposeContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser websocket endpoint which can be used as an argument to\n   * {@link Puppeteer.connect}.\n   *\n   * @returns The Browser websocket url.\n   *\n   * @remarks\n   *\n   * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n   *\n   * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n   * Learn more about the\n   * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n   * the {@link\n   * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n   * | browser endpoint}.\n   */\n  wsEndpoint() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Promise which resolves to a new {@link Page} object. The Page is created in\n   * a default browser context.\n   */\n  newPage() {\n    throw new Error('Not implemented');\n  }\n  _createPageInContext() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * All active targets inside the Browser. In case of multiple browser contexts, returns\n   * an array with all the targets in all browser contexts.\n   */\n  targets() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The target associated with the browser.\n   */\n  target() {\n    throw new Error('Not implemented');\n  }\n  waitForTarget() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * An array of all open pages inside the Browser.\n   *\n   * @remarks\n   *\n   * In case of multiple browser contexts, returns an array with all the pages in all\n   * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n   * here. You can find them using {@link Target.page}.\n   */\n  pages() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * A string representing the browser name and version.\n   *\n   * @remarks\n   *\n   * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n   * non-headless, this is similar to `Chrome/61.0.3153.0`.\n   *\n   * The format of browser.version() might change with future releases of Chromium.\n   */\n  version() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * The browser's original user agent. Pages can override the browser user agent with\n   * {@link Page.setUserAgent}.\n   */\n  userAgent() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n   * itself is considered to be disposed and cannot be used anymore.\n   */\n  close() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n   * After calling `disconnect`, the {@link Browser} object is considered disposed and\n   * cannot be used anymore.\n   */\n  disconnect() {\n    throw new Error('Not implemented');\n  }\n  /**\n   * Indicates that the browser is connected.\n   */\n  isConnected() {\n    throw new Error('Not implemented');\n  }\n}","map":{"version":3,"names":["EventEmitter","WEB_PERMISSION_TO_PROTOCOL_PERMISSION","Map","Browser","constructor","_attach","Error","_detach","_targets","process","_getIsPageTargetCallback","createIncognitoBrowserContext","browserContexts","defaultBrowserContext","_disposeContext","wsEndpoint","newPage","_createPageInContext","targets","target","waitForTarget","pages","version","userAgent","close","disconnect","isConnected"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/api/Browser.js"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../common/EventEmitter.js';\n/**\n * @internal\n */\nexport const WEB_PERMISSION_TO_PROTOCOL_PERMISSION = new Map([\n    ['geolocation', 'geolocation'],\n    ['midi', 'midi'],\n    ['notifications', 'notifications'],\n    // TODO: push isn't a valid type?\n    // ['push', 'push'],\n    ['camera', 'videoCapture'],\n    ['microphone', 'audioCapture'],\n    ['background-sync', 'backgroundSync'],\n    ['ambient-light-sensor', 'sensors'],\n    ['accelerometer', 'sensors'],\n    ['gyroscope', 'sensors'],\n    ['magnetometer', 'sensors'],\n    ['accessibility-events', 'accessibilityEvents'],\n    ['clipboard-read', 'clipboardReadWrite'],\n    ['clipboard-write', 'clipboardReadWrite'],\n    ['payment-handler', 'paymentHandler'],\n    ['persistent-storage', 'durableStorage'],\n    ['idle-detection', 'idleDetection'],\n    // chrome-specific permissions we have.\n    ['midi-sysex', 'midiSysex'],\n]);\n/**\n * A Browser is created when Puppeteer connects to a Chromium instance, either through\n * {@link PuppeteerNode.launch} or {@link Puppeteer.connect}.\n *\n * @remarks\n *\n * The Browser class extends from Puppeteer's {@link EventEmitter} class and will\n * emit various events which are documented in the {@link BrowserEmittedEvents} enum.\n *\n * @example\n * An example of using a {@link Browser} to create a {@link Page}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   const page = await browser.newPage();\n *   await page.goto('https://example.com');\n *   await browser.close();\n * })();\n * ```\n *\n * @example\n * An example of disconnecting from and reconnecting to a {@link Browser}:\n *\n * ```ts\n * import puppeteer from 'puppeteer';\n *\n * (async () => {\n *   const browser = await puppeteer.launch();\n *   // Store the endpoint to be able to reconnect to Chromium\n *   const browserWSEndpoint = browser.wsEndpoint();\n *   // Disconnect puppeteer from Chromium\n *   browser.disconnect();\n *\n *   // Use the endpoint to reestablish a connection\n *   const browser2 = await puppeteer.connect({browserWSEndpoint});\n *   // Close Chromium\n *   await browser2.close();\n * })();\n * ```\n *\n * @public\n */\nexport class Browser extends EventEmitter {\n    /**\n     * @internal\n     */\n    constructor() {\n        super();\n    }\n    /**\n     * @internal\n     */\n    _attach() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * @internal\n     */\n    _detach() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * @internal\n     */\n    get _targets() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * The spawned browser process. Returns `null` if the browser instance was created with\n     * {@link Puppeteer.connect}.\n     */\n    process() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * @internal\n     */\n    _getIsPageTargetCallback() {\n        throw new Error('Not implemented');\n    }\n    createIncognitoBrowserContext() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Returns an array of all open browser contexts. In a newly created browser, this will\n     * return a single instance of {@link BrowserContext}.\n     */\n    browserContexts() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Returns the default browser context. The default browser context cannot be closed.\n     */\n    defaultBrowserContext() {\n        throw new Error('Not implemented');\n    }\n    _disposeContext() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * The browser websocket endpoint which can be used as an argument to\n     * {@link Puppeteer.connect}.\n     *\n     * @returns The Browser websocket url.\n     *\n     * @remarks\n     *\n     * The format is `ws://${host}:${port}/devtools/browser/<id>`.\n     *\n     * You can find the `webSocketDebuggerUrl` from `http://${host}:${port}/json/version`.\n     * Learn more about the\n     * {@link https://chromedevtools.github.io/devtools-protocol | devtools protocol} and\n     * the {@link\n     * https://chromedevtools.github.io/devtools-protocol/#how-do-i-access-the-browser-target\n     * | browser endpoint}.\n     */\n    wsEndpoint() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Promise which resolves to a new {@link Page} object. The Page is created in\n     * a default browser context.\n     */\n    newPage() {\n        throw new Error('Not implemented');\n    }\n    _createPageInContext() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * All active targets inside the Browser. In case of multiple browser contexts, returns\n     * an array with all the targets in all browser contexts.\n     */\n    targets() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * The target associated with the browser.\n     */\n    target() {\n        throw new Error('Not implemented');\n    }\n    waitForTarget() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * An array of all open pages inside the Browser.\n     *\n     * @remarks\n     *\n     * In case of multiple browser contexts, returns an array with all the pages in all\n     * browser contexts. Non-visible pages, such as `\"background_page\"`, will not be listed\n     * here. You can find them using {@link Target.page}.\n     */\n    pages() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * A string representing the browser name and version.\n     *\n     * @remarks\n     *\n     * For headless Chromium, this is similar to `HeadlessChrome/61.0.3153.0`. For\n     * non-headless, this is similar to `Chrome/61.0.3153.0`.\n     *\n     * The format of browser.version() might change with future releases of Chromium.\n     */\n    version() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * The browser's original user agent. Pages can override the browser user agent with\n     * {@link Page.setUserAgent}.\n     */\n    userAgent() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Closes Chromium and all of its pages (if any were opened). The {@link Browser} object\n     * itself is considered to be disposed and cannot be used anymore.\n     */\n    close() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Disconnects Puppeteer from the browser, but leaves the Chromium process running.\n     * After calling `disconnect`, the {@link Browser} object is considered disposed and\n     * cannot be used anymore.\n     */\n    disconnect() {\n        throw new Error('Not implemented');\n    }\n    /**\n     * Indicates that the browser is connected.\n     */\n    isConnected() {\n        throw new Error('Not implemented');\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}