{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CLI_instances, _CLI_cachePath, _CLI_rl, _CLI_defineBrowserParameter, _CLI_definePlatformParameter, _CLI_definePathParameter, _CLI_parseBrowser, _CLI_parseBuildId;\nimport { stdin as input, stdout as output } from 'process';\nimport * as readline from 'readline';\nimport ProgressBar from 'progress';\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs/yargs';\nimport { resolveBuildId, BrowserPlatform } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { install } from './install.js';\nimport { computeExecutablePath, computeSystemExecutablePath, launch } from './launch.js';\n/**\n * @public\n */\nexport class CLI {\n  constructor(cachePath = process.cwd(), rl) {\n    _CLI_instances.add(this);\n    _CLI_cachePath.set(this, void 0);\n    _CLI_rl.set(this, void 0);\n    __classPrivateFieldSet(this, _CLI_cachePath, cachePath, \"f\");\n    __classPrivateFieldSet(this, _CLI_rl, rl, \"f\");\n  }\n  run(argv) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const yargsInstance = yargs(hideBin(argv));\n      yield yargsInstance.scriptName('@puppeteer/browsers').command('install <browser>', 'Download and install the specified browser. If successful, the command outputs the actual browser buildId that was installed and the absolute path to the browser executable (format: <browser>@<buildID> <path>).', yargs => {\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(_this, yargs);\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(_this, yargs);\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_definePathParameter).call(_this, yargs);\n        yargs.option('base-url', {\n          type: 'string',\n          desc: 'Base URL to download from'\n        });\n        yargs.example('$0 install chrome', 'Install the latest available build of the Chrome browser.');\n        yargs.example('$0 install chrome@latest', 'Install the latest available build for the Chrome browser.');\n        yargs.example('$0 install chromium@1083080', 'Install the revision 1083080 of the Chromium browser.');\n        yargs.example('$0 install firefox', 'Install the latest available build of the Firefox browser.');\n        yargs.example('$0 install firefox --platform mac', 'Install the latest Mac (Intel) build of the Firefox browser.');\n        yargs.example('$0 install firefox --path /tmp/my-browser-cache', 'Install to the specified cache directory.');\n      }, /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (argv) {\n          var _a, _b, _c;\n          const args = argv;\n          (_a = args.platform) !== null && _a !== void 0 ? _a : args.platform = detectBrowserPlatform();\n          if (!args.platform) {\n            throw new Error(`Could not resolve the current platform`);\n          }\n          args.browser.buildId = yield resolveBuildId(args.browser.name, args.platform, args.browser.buildId);\n          yield install({\n            browser: args.browser.name,\n            buildId: args.browser.buildId,\n            platform: args.platform,\n            cacheDir: (_b = args.path) !== null && _b !== void 0 ? _b : __classPrivateFieldGet(_this, _CLI_cachePath, \"f\"),\n            downloadProgressCallback: makeProgressCallback(args.browser.name, args.browser.buildId),\n            baseUrl: args.baseUrl\n          });\n          console.log(`${args.browser.name}@${args.browser.buildId} ${computeExecutablePath({\n            browser: args.browser.name,\n            buildId: args.browser.buildId,\n            cacheDir: (_c = args.path) !== null && _c !== void 0 ? _c : __classPrivateFieldGet(_this, _CLI_cachePath, \"f\"),\n            platform: args.platform\n          })}`);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()).command('launch <browser>', 'Launch the specified browser', yargs => {\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(_this, yargs);\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(_this, yargs);\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_definePathParameter).call(_this, yargs);\n        yargs.option('detached', {\n          type: 'boolean',\n          desc: 'Detach the child process.',\n          default: false\n        });\n        yargs.option('system', {\n          type: 'boolean',\n          desc: 'Search for a browser installed on the system instead of the cache folder.',\n          default: false\n        });\n        yargs.example('$0 launch chrome@1083080', 'Launch the Chrome browser identified by the revision 1083080.');\n        yargs.example('$0 launch firefox@112.0a1', 'Launch the Firefox browser identified by the milestone 112.0a1.');\n        yargs.example('$0 launch chrome@1083080 --detached', 'Launch the browser but detach the sub-processes.');\n        yargs.example('$0 launch chrome@canary --system', 'Try to locate the Canary build of Chrome installed on the system and launch it.');\n      }, /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (argv) {\n          var _a;\n          const args = argv;\n          const executablePath = args.system ? computeSystemExecutablePath({\n            browser: args.browser.name,\n            // TODO: throw an error if not a ChromeReleaseChannel is provided.\n            channel: args.browser.buildId,\n            platform: args.platform\n          }) : computeExecutablePath({\n            browser: args.browser.name,\n            buildId: args.browser.buildId,\n            cacheDir: (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(_this, _CLI_cachePath, \"f\"),\n            platform: args.platform\n          });\n          launch({\n            executablePath,\n            detached: args.detached\n          });\n        });\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()).command('clear', 'Removes all installed browsers from the specified cache directory', yargs => {\n        __classPrivateFieldGet(_this, _CLI_instances, \"m\", _CLI_definePathParameter).call(_this, yargs, true);\n      }, /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (argv) {\n          var _a, _b;\n          const args = argv;\n          const cacheDir = (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(_this, _CLI_cachePath, \"f\");\n          const rl = (_b = __classPrivateFieldGet(_this, _CLI_rl, \"f\")) !== null && _b !== void 0 ? _b : readline.createInterface({\n            input,\n            output\n          });\n          rl.question(`Do you want to permanently and recursively delete the content of ${cacheDir} (yes/No)? `, answer => {\n            rl.close();\n            if (!['y', 'yes'].includes(answer.toLowerCase().trim())) {\n              console.log('Cancelled.');\n              return;\n            }\n            const cache = new Cache(cacheDir);\n            cache.clear();\n            console.log(`${cacheDir} cleared.`);\n          });\n        });\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).demandCommand(1).help().wrap(Math.min(120, yargsInstance.terminalWidth())).parse();\n    })();\n  }\n}\n_CLI_cachePath = new WeakMap(), _CLI_rl = new WeakMap(), _CLI_instances = new WeakSet(), _CLI_defineBrowserParameter = function _CLI_defineBrowserParameter(yargs) {\n  yargs.positional('browser', {\n    description: 'Which browser to install <browser>[@<buildId|latest>]. `latest` will try to find the latest available build. `buildId` is a browser-specific identifier such as a version or a revision.',\n    type: 'string',\n    coerce: opt => {\n      return {\n        name: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBrowser).call(this, opt),\n        buildId: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBuildId).call(this, opt)\n      };\n    }\n  });\n}, _CLI_definePlatformParameter = function _CLI_definePlatformParameter(yargs) {\n  yargs.option('platform', {\n    type: 'string',\n    desc: 'Platform that the binary needs to be compatible with.',\n    choices: Object.values(BrowserPlatform),\n    defaultDescription: 'Auto-detected'\n  });\n}, _CLI_definePathParameter = function _CLI_definePathParameter(yargs, required = false) {\n  yargs.option('path', {\n    type: 'string',\n    desc: 'Path to the root folder for the browser downloads and installation. The installation folder structure is compatible with the cache structure used by Puppeteer.',\n    defaultDescription: 'Current working directory',\n    ...(required ? {} : {\n      default: process.cwd()\n    })\n  });\n  if (required) {\n    yargs.demandOption('path');\n  }\n}, _CLI_parseBrowser = function _CLI_parseBrowser(version) {\n  return version.split('@').shift();\n}, _CLI_parseBuildId = function _CLI_parseBuildId(version) {\n  var _a;\n  return (_a = version.split('@').pop()) !== null && _a !== void 0 ? _a : 'latest';\n};\n/**\n * @public\n */\nexport function makeProgressCallback(browser, buildId) {\n  let progressBar;\n  let lastDownloadedBytes = 0;\n  return (downloadedBytes, totalBytes) => {\n    if (!progressBar) {\n      progressBar = new ProgressBar(`Downloading ${browser} r${buildId} - ${toMegabytes(totalBytes)} [:bar] :percent :etas `, {\n        complete: '=',\n        incomplete: ' ',\n        width: 20,\n        total: totalBytes\n      });\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\nfunction toMegabytes(bytes) {\n  const mb = bytes / 1000 / 1000;\n  return `${Math.round(mb * 10) / 10} MB`;\n}","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_CLI_instances","_CLI_cachePath","_CLI_rl","_CLI_defineBrowserParameter","_CLI_definePlatformParameter","_CLI_definePathParameter","_CLI_parseBrowser","_CLI_parseBuildId","stdin","input","stdout","output","readline","ProgressBar","hideBin","yargs","resolveBuildId","BrowserPlatform","Cache","detectBrowserPlatform","install","computeExecutablePath","computeSystemExecutablePath","launch","CLI","constructor","cachePath","process","cwd","rl","add","run","argv","yargsInstance","scriptName","command","option","type","desc","example","_a","_b","_c","args","platform","Error","browser","buildId","name","cacheDir","path","downloadProgressCallback","makeProgressCallback","baseUrl","console","log","default","executablePath","system","channel","detached","createInterface","question","answer","close","includes","toLowerCase","trim","cache","clear","demandCommand","help","wrap","Math","min","terminalWidth","parse","WeakMap","WeakSet","positional","description","coerce","opt","choices","Object","values","defaultDescription","required","demandOption","version","split","shift","pop","progressBar","lastDownloadedBytes","downloadedBytes","totalBytes","toMegabytes","complete","incomplete","width","total","delta","tick","bytes","mb","round"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@puppeteer/browsers/lib/esm/CLI.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _CLI_instances, _CLI_cachePath, _CLI_rl, _CLI_defineBrowserParameter, _CLI_definePlatformParameter, _CLI_definePathParameter, _CLI_parseBrowser, _CLI_parseBuildId;\nimport { stdin as input, stdout as output } from 'process';\nimport * as readline from 'readline';\nimport ProgressBar from 'progress';\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs/yargs';\nimport { resolveBuildId, BrowserPlatform, } from './browser-data/browser-data.js';\nimport { Cache } from './Cache.js';\nimport { detectBrowserPlatform } from './detectPlatform.js';\nimport { install } from './install.js';\nimport { computeExecutablePath, computeSystemExecutablePath, launch, } from './launch.js';\n/**\n * @public\n */\nexport class CLI {\n    constructor(cachePath = process.cwd(), rl) {\n        _CLI_instances.add(this);\n        _CLI_cachePath.set(this, void 0);\n        _CLI_rl.set(this, void 0);\n        __classPrivateFieldSet(this, _CLI_cachePath, cachePath, \"f\");\n        __classPrivateFieldSet(this, _CLI_rl, rl, \"f\");\n    }\n    async run(argv) {\n        const yargsInstance = yargs(hideBin(argv));\n        await yargsInstance\n            .scriptName('@puppeteer/browsers')\n            .command('install <browser>', 'Download and install the specified browser. If successful, the command outputs the actual browser buildId that was installed and the absolute path to the browser executable (format: <browser>@<buildID> <path>).', yargs => {\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(this, yargs);\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(this, yargs);\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs);\n            yargs.option('base-url', {\n                type: 'string',\n                desc: 'Base URL to download from',\n            });\n            yargs.example('$0 install chrome', 'Install the latest available build of the Chrome browser.');\n            yargs.example('$0 install chrome@latest', 'Install the latest available build for the Chrome browser.');\n            yargs.example('$0 install chromium@1083080', 'Install the revision 1083080 of the Chromium browser.');\n            yargs.example('$0 install firefox', 'Install the latest available build of the Firefox browser.');\n            yargs.example('$0 install firefox --platform mac', 'Install the latest Mac (Intel) build of the Firefox browser.');\n            yargs.example('$0 install firefox --path /tmp/my-browser-cache', 'Install to the specified cache directory.');\n        }, async (argv) => {\n            var _a, _b, _c;\n            const args = argv;\n            (_a = args.platform) !== null && _a !== void 0 ? _a : (args.platform = detectBrowserPlatform());\n            if (!args.platform) {\n                throw new Error(`Could not resolve the current platform`);\n            }\n            args.browser.buildId = await resolveBuildId(args.browser.name, args.platform, args.browser.buildId);\n            await install({\n                browser: args.browser.name,\n                buildId: args.browser.buildId,\n                platform: args.platform,\n                cacheDir: (_b = args.path) !== null && _b !== void 0 ? _b : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n                downloadProgressCallback: makeProgressCallback(args.browser.name, args.browser.buildId),\n                baseUrl: args.baseUrl,\n            });\n            console.log(`${args.browser.name}@${args.browser.buildId} ${computeExecutablePath({\n                browser: args.browser.name,\n                buildId: args.browser.buildId,\n                cacheDir: (_c = args.path) !== null && _c !== void 0 ? _c : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n                platform: args.platform,\n            })}`);\n        })\n            .command('launch <browser>', 'Launch the specified browser', yargs => {\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_defineBrowserParameter).call(this, yargs);\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePlatformParameter).call(this, yargs);\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs);\n            yargs.option('detached', {\n                type: 'boolean',\n                desc: 'Detach the child process.',\n                default: false,\n            });\n            yargs.option('system', {\n                type: 'boolean',\n                desc: 'Search for a browser installed on the system instead of the cache folder.',\n                default: false,\n            });\n            yargs.example('$0 launch chrome@1083080', 'Launch the Chrome browser identified by the revision 1083080.');\n            yargs.example('$0 launch firefox@112.0a1', 'Launch the Firefox browser identified by the milestone 112.0a1.');\n            yargs.example('$0 launch chrome@1083080 --detached', 'Launch the browser but detach the sub-processes.');\n            yargs.example('$0 launch chrome@canary --system', 'Try to locate the Canary build of Chrome installed on the system and launch it.');\n        }, async (argv) => {\n            var _a;\n            const args = argv;\n            const executablePath = args.system\n                ? computeSystemExecutablePath({\n                    browser: args.browser.name,\n                    // TODO: throw an error if not a ChromeReleaseChannel is provided.\n                    channel: args.browser.buildId,\n                    platform: args.platform,\n                })\n                : computeExecutablePath({\n                    browser: args.browser.name,\n                    buildId: args.browser.buildId,\n                    cacheDir: (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(this, _CLI_cachePath, \"f\"),\n                    platform: args.platform,\n                });\n            launch({\n                executablePath,\n                detached: args.detached,\n            });\n        })\n            .command('clear', 'Removes all installed browsers from the specified cache directory', yargs => {\n            __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_definePathParameter).call(this, yargs, true);\n        }, async (argv) => {\n            var _a, _b;\n            const args = argv;\n            const cacheDir = (_a = args.path) !== null && _a !== void 0 ? _a : __classPrivateFieldGet(this, _CLI_cachePath, \"f\");\n            const rl = (_b = __classPrivateFieldGet(this, _CLI_rl, \"f\")) !== null && _b !== void 0 ? _b : readline.createInterface({ input, output });\n            rl.question(`Do you want to permanently and recursively delete the content of ${cacheDir} (yes/No)? `, answer => {\n                rl.close();\n                if (!['y', 'yes'].includes(answer.toLowerCase().trim())) {\n                    console.log('Cancelled.');\n                    return;\n                }\n                const cache = new Cache(cacheDir);\n                cache.clear();\n                console.log(`${cacheDir} cleared.`);\n            });\n        })\n            .demandCommand(1)\n            .help()\n            .wrap(Math.min(120, yargsInstance.terminalWidth()))\n            .parse();\n    }\n}\n_CLI_cachePath = new WeakMap(), _CLI_rl = new WeakMap(), _CLI_instances = new WeakSet(), _CLI_defineBrowserParameter = function _CLI_defineBrowserParameter(yargs) {\n    yargs.positional('browser', {\n        description: 'Which browser to install <browser>[@<buildId|latest>]. `latest` will try to find the latest available build. `buildId` is a browser-specific identifier such as a version or a revision.',\n        type: 'string',\n        coerce: (opt) => {\n            return {\n                name: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBrowser).call(this, opt),\n                buildId: __classPrivateFieldGet(this, _CLI_instances, \"m\", _CLI_parseBuildId).call(this, opt),\n            };\n        },\n    });\n}, _CLI_definePlatformParameter = function _CLI_definePlatformParameter(yargs) {\n    yargs.option('platform', {\n        type: 'string',\n        desc: 'Platform that the binary needs to be compatible with.',\n        choices: Object.values(BrowserPlatform),\n        defaultDescription: 'Auto-detected',\n    });\n}, _CLI_definePathParameter = function _CLI_definePathParameter(yargs, required = false) {\n    yargs.option('path', {\n        type: 'string',\n        desc: 'Path to the root folder for the browser downloads and installation. The installation folder structure is compatible with the cache structure used by Puppeteer.',\n        defaultDescription: 'Current working directory',\n        ...(required ? {} : { default: process.cwd() }),\n    });\n    if (required) {\n        yargs.demandOption('path');\n    }\n}, _CLI_parseBrowser = function _CLI_parseBrowser(version) {\n    return version.split('@').shift();\n}, _CLI_parseBuildId = function _CLI_parseBuildId(version) {\n    var _a;\n    return (_a = version.split('@').pop()) !== null && _a !== void 0 ? _a : 'latest';\n};\n/**\n * @public\n */\nexport function makeProgressCallback(browser, buildId) {\n    let progressBar;\n    let lastDownloadedBytes = 0;\n    return (downloadedBytes, totalBytes) => {\n        if (!progressBar) {\n            progressBar = new ProgressBar(`Downloading ${browser} r${buildId} - ${toMegabytes(totalBytes)} [:bar] :percent :etas `, {\n                complete: '=',\n                incomplete: ' ',\n                width: 20,\n                total: totalBytes,\n            });\n        }\n        const delta = downloadedBytes - lastDownloadedBytes;\n        lastDownloadedBytes = downloadedBytes;\n        progressBar.tick(delta);\n    };\n}\nfunction toMegabytes(bytes) {\n    const mb = bytes / 1000 / 1000;\n    return `${Math.round(mb * 10) / 10} MB`;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}