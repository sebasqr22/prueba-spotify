{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _ExecutionContext_instances, _ExecutionContext_puppeteerUtil, _ExecutionContext_installGlobalBinding, _ExecutionContext_evaluate;\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { stringifyFunction } from '../util/Function.js';\nimport { ARIAQueryHandler } from './AriaQueryHandler.js';\nimport { Binding } from './Binding.js';\nimport { CDPElementHandle } from './ElementHandle.js';\nimport { CDPJSHandle } from './JSHandle.js';\nimport { LazyArg } from './LazyArg.js';\nimport { scriptInjector } from './ScriptInjector.js';\nimport { createJSHandle, getExceptionMessage, isString, valueFromRemoteObject } from './util.js';\n/**\n * @public\n */\nexport const EVALUATION_SCRIPT_URL = 'pptr://__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n/**\n * Represents a context for JavaScript execution.\n *\n * @example\n * A {@link Page} can have several execution contexts:\n *\n * - Each {@link Frame} of a {@link Page | page} has a \"default\" execution\n *   context that is always created after frame is attached to DOM. This context\n *   is returned by the {@link Frame.executionContext} method.\n * - Each {@link https://developer.chrome.com/extensions | Chrome extensions}\n *   creates additional execution contexts to isolate their code.\n *\n * @remarks\n * By definition, each context is isolated from one another, however they are\n * all able to manipulate non-JavaScript resources (such as DOM).\n *\n * @remarks\n * Besides pages, execution contexts can be found in\n * {@link WebWorker | workers}.\n *\n * @internal\n */\nexport class ExecutionContext {\n  constructor(client, contextPayload, world) {\n    _ExecutionContext_instances.add(this);\n    _ExecutionContext_puppeteerUtil.set(this, void 0);\n    this._client = client;\n    this._world = world;\n    this._contextId = contextPayload.id;\n    if (contextPayload.name) {\n      this._contextName = contextPayload.name;\n    }\n  }\n  get puppeteerUtil() {\n    scriptInjector.inject(script => {\n      if (__classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\")) {\n        __classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\").then(handle => {\n          handle.dispose();\n        });\n      }\n      __classPrivateFieldSet(this, _ExecutionContext_puppeteerUtil, Promise.all([__classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_installGlobalBinding).call(this, new Binding('__ariaQuerySelector', ARIAQueryHandler.queryOne)), __classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_installGlobalBinding).call(this, new Binding('__ariaQuerySelectorAll', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (element, selector) {\n          const results = ARIAQueryHandler.queryAll(element, selector);\n          return element.executionContext().evaluateHandle((...elements) => {\n            return elements;\n          }, ...(yield AsyncIterableUtil.collect(results)));\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()))]).then(() => {\n        return this.evaluateHandle(script);\n      }), \"f\");\n    }, !__classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\"));\n    return __classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\");\n  }\n  /**\n   * Evaluates the given function.\n   *\n   * @example\n   *\n   * ```ts\n   * const executionContext = await page.mainFrame().executionContext();\n   * const result = await executionContext.evaluate(() => Promise.resolve(8 * 7))* ;\n   * console.log(result); // prints \"56\"\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function:\n   *\n   * ```ts\n   * console.log(await executionContext.evaluate('1 + 2')); // prints \"3\"\n   * ```\n   *\n   * @example\n   * Handles can also be passed as `args`. They resolve to their referenced object:\n   *\n   * ```ts\n   * const oneHandle = await executionContext.evaluateHandle(() => 1);\n   * const twoHandle = await executionContext.evaluateHandle(() => 2);\n   * const result = await executionContext.evaluate(\n   *   (a, b) => a + b,\n   *   oneHandle,\n   *   twoHandle\n   * );\n   * await oneHandle.dispose();\n   * await twoHandle.dispose();\n   * console.log(result); // prints '3'.\n   * ```\n   *\n   * @param pageFunction - The function to evaluate.\n   * @param args - Additional arguments to pass into the function.\n   * @returns The result of evaluating the function. If the result is an object,\n   * a vanilla object containing the serializable properties of the result is\n   * returned.\n   */\n  evaluate(pageFunction, ...args) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return yield __classPrivateFieldGet(_this, _ExecutionContext_instances, \"m\", _ExecutionContext_evaluate).call(_this, true, pageFunction, ...args);\n    })();\n  }\n  /**\n   * Evaluates the given function.\n   *\n   * Unlike {@link ExecutionContext.evaluate | evaluate}, this method returns a\n   * handle to the result of the function.\n   *\n   * This method may be better suited if the object cannot be serialized (e.g.\n   * `Map`) and requires further manipulation.\n   *\n   * @example\n   *\n   * ```ts\n   * const context = await page.mainFrame().executionContext();\n   * const handle: JSHandle<typeof globalThis> = await context.evaluateHandle(\n   *   () => Promise.resolve(self)\n   * );\n   * ```\n   *\n   * @example\n   * A string can also be passed in instead of a function.\n   *\n   * ```ts\n   * const handle: JSHandle<number> = await context.evaluateHandle('1 + 2');\n   * ```\n   *\n   * @example\n   * Handles can also be passed as `args`. They resolve to their referenced object:\n   *\n   * ```ts\n   * const bodyHandle: ElementHandle<HTMLBodyElement> =\n   *   await context.evaluateHandle(() => {\n   *     return document.body;\n   *   });\n   * const stringHandle: JSHandle<string> = await context.evaluateHandle(\n   *   body => body.innerHTML,\n   *   body\n   * );\n   * console.log(await stringHandle.jsonValue()); // prints body's innerHTML\n   * // Always dispose your garbage! :)\n   * await bodyHandle.dispose();\n   * await stringHandle.dispose();\n   * ```\n   *\n   * @param pageFunction - The function to evaluate.\n   * @param args - Additional arguments to pass into the function.\n   * @returns A {@link JSHandle | handle} to the result of evaluating the\n   * function. If the result is a `Node`, then this will return an\n   * {@link ElementHandle | element handle}.\n   */\n  evaluateHandle(pageFunction, ...args) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return __classPrivateFieldGet(_this2, _ExecutionContext_instances, \"m\", _ExecutionContext_evaluate).call(_this2, false, pageFunction, ...args);\n    })();\n  }\n}\n_ExecutionContext_puppeteerUtil = new WeakMap(), _ExecutionContext_instances = new WeakSet(), _ExecutionContext_installGlobalBinding = /*#__PURE__*/function () {\n  var _ExecutionContext_installGlobalBinding2 = _asyncToGenerator(function* (binding) {\n    try {\n      if (this._world) {\n        this._world._bindings.set(binding.name, binding);\n        yield this._world._addBindingToContext(this, binding.name);\n      }\n    } catch {\n      // If the binding cannot be added, then either the browser doesn't support\n      // bindings (e.g. Firefox) or the context is broken. Either breakage is\n      // okay, so we ignore the error.\n    }\n  });\n  function _ExecutionContext_installGlobalBinding(_x3) {\n    return _ExecutionContext_installGlobalBinding2.apply(this, arguments);\n  }\n  return _ExecutionContext_installGlobalBinding;\n}(), _ExecutionContext_evaluate = /*#__PURE__*/function () {\n  var _ExecutionContext_evaluate2 = _asyncToGenerator(function* (returnByValue, pageFunction, ...args) {\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n    if (isString(pageFunction)) {\n      const contextId = this._contextId;\n      const expression = pageFunction;\n      const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression) ? expression : expression + '\\n' + suffix;\n      const {\n        exceptionDetails,\n        result: remoteObject\n      } = yield this._client.send('Runtime.evaluate', {\n        expression: expressionWithSourceUrl,\n        contextId,\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      }).catch(rewriteError);\n      if (exceptionDetails) {\n        throw new Error('Evaluation failed: ' + getExceptionMessage(exceptionDetails));\n      }\n      return returnByValue ? valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n    }\n    let callFunctionOnPromise;\n    try {\n      callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n        functionDeclaration: `${stringifyFunction(pageFunction)}\\n${suffix}\\n`,\n        executionContextId: this._contextId,\n        arguments: yield Promise.all(args.map(convertArgument.bind(this))),\n        returnByValue,\n        awaitPromise: true,\n        userGesture: true\n      });\n    } catch (error) {\n      if (error instanceof TypeError && error.message.startsWith('Converting circular structure to JSON')) {\n        error.message += ' Recursive objects are not allowed.';\n      }\n      throw error;\n    }\n    const {\n      exceptionDetails,\n      result: remoteObject\n    } = yield callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails) {\n      throw new Error('Evaluation failed: ' + getExceptionMessage(exceptionDetails));\n    }\n    return returnByValue ? valueFromRemoteObject(remoteObject) : createJSHandle(this, remoteObject);\n    function convertArgument(_x6) {\n      return _convertArgument.apply(this, arguments);\n    }\n    function _convertArgument() {\n      _convertArgument = _asyncToGenerator(function* (arg) {\n        if (arg instanceof LazyArg) {\n          arg = yield arg.get(this);\n        }\n        if (typeof arg === 'bigint') {\n          // eslint-disable-line valid-typeof\n          return {\n            unserializableValue: `${arg.toString()}n`\n          };\n        }\n        if (Object.is(arg, -0)) {\n          return {\n            unserializableValue: '-0'\n          };\n        }\n        if (Object.is(arg, Infinity)) {\n          return {\n            unserializableValue: 'Infinity'\n          };\n        }\n        if (Object.is(arg, -Infinity)) {\n          return {\n            unserializableValue: '-Infinity'\n          };\n        }\n        if (Object.is(arg, NaN)) {\n          return {\n            unserializableValue: 'NaN'\n          };\n        }\n        const objectHandle = arg && (arg instanceof CDPJSHandle || arg instanceof CDPElementHandle) ? arg : null;\n        if (objectHandle) {\n          if (objectHandle.executionContext() !== this) {\n            throw new Error('JSHandles can be evaluated only in the context they were created!');\n          }\n          if (objectHandle.disposed) {\n            throw new Error('JSHandle is disposed!');\n          }\n          if (objectHandle.remoteObject().unserializableValue) {\n            return {\n              unserializableValue: objectHandle.remoteObject().unserializableValue\n            };\n          }\n          if (!objectHandle.remoteObject().objectId) {\n            return {\n              value: objectHandle.remoteObject().value\n            };\n          }\n          return {\n            objectId: objectHandle.remoteObject().objectId\n          };\n        }\n        return {\n          value: arg\n        };\n      });\n      return _convertArgument.apply(this, arguments);\n    }\n  });\n  function _ExecutionContext_evaluate(_x4, _x5) {\n    return _ExecutionContext_evaluate2.apply(this, arguments);\n  }\n  return _ExecutionContext_evaluate;\n}();\nconst rewriteError = error => {\n  if (error.message.includes('Object reference chain is too long')) {\n    return {\n      result: {\n        type: 'undefined'\n      }\n    };\n  }\n  if (error.message.includes(\"Object couldn't be returned by value\")) {\n    return {\n      result: {\n        type: 'undefined'\n      }\n    };\n  }\n  if (error.message.endsWith('Cannot find context with specified id') || error.message.endsWith('Inspected target navigated or closed')) {\n    throw new Error('Execution context was destroyed, most likely because of a navigation.');\n  }\n  throw error;\n};","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","__classPrivateFieldSet","set","_ExecutionContext_instances","_ExecutionContext_puppeteerUtil","_ExecutionContext_installGlobalBinding","_ExecutionContext_evaluate","AsyncIterableUtil","stringifyFunction","ARIAQueryHandler","Binding","CDPElementHandle","CDPJSHandle","LazyArg","scriptInjector","createJSHandle","getExceptionMessage","isString","valueFromRemoteObject","EVALUATION_SCRIPT_URL","SOURCE_URL_REGEX","ExecutionContext","constructor","client","contextPayload","world","add","_client","_world","_contextId","id","name","_contextName","puppeteerUtil","inject","script","then","handle","dispose","Promise","all","queryOne","element","selector","results","queryAll","executionContext","evaluateHandle","elements","collect","evaluate","pageFunction","args","WeakMap","WeakSet","binding","_bindings","_addBindingToContext","returnByValue","suffix","contextId","expression","expressionWithSourceUrl","test","exceptionDetails","result","remoteObject","send","awaitPromise","userGesture","catch","rewriteError","Error","callFunctionOnPromise","functionDeclaration","executionContextId","arguments","map","convertArgument","bind","error","message","startsWith","arg","unserializableValue","toString","Object","is","Infinity","NaN","objectHandle","disposed","objectId","includes","type","endsWith"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/ExecutionContext.js"],"sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ExecutionContext_instances, _ExecutionContext_puppeteerUtil, _ExecutionContext_installGlobalBinding, _ExecutionContext_evaluate;\nimport { AsyncIterableUtil } from '../util/AsyncIterableUtil.js';\nimport { stringifyFunction } from '../util/Function.js';\nimport { ARIAQueryHandler } from './AriaQueryHandler.js';\nimport { Binding } from './Binding.js';\nimport { CDPElementHandle } from './ElementHandle.js';\nimport { CDPJSHandle } from './JSHandle.js';\nimport { LazyArg } from './LazyArg.js';\nimport { scriptInjector } from './ScriptInjector.js';\nimport { createJSHandle, getExceptionMessage, isString, valueFromRemoteObject, } from './util.js';\n/**\n * @public\n */\nexport const EVALUATION_SCRIPT_URL = 'pptr://__puppeteer_evaluation_script__';\nconst SOURCE_URL_REGEX = /^[\\040\\t]*\\/\\/[@#] sourceURL=\\s*(\\S*?)\\s*$/m;\n/**\n * Represents a context for JavaScript execution.\n *\n * @example\n * A {@link Page} can have several execution contexts:\n *\n * - Each {@link Frame} of a {@link Page | page} has a \"default\" execution\n *   context that is always created after frame is attached to DOM. This context\n *   is returned by the {@link Frame.executionContext} method.\n * - Each {@link https://developer.chrome.com/extensions | Chrome extensions}\n *   creates additional execution contexts to isolate their code.\n *\n * @remarks\n * By definition, each context is isolated from one another, however they are\n * all able to manipulate non-JavaScript resources (such as DOM).\n *\n * @remarks\n * Besides pages, execution contexts can be found in\n * {@link WebWorker | workers}.\n *\n * @internal\n */\nexport class ExecutionContext {\n    constructor(client, contextPayload, world) {\n        _ExecutionContext_instances.add(this);\n        _ExecutionContext_puppeteerUtil.set(this, void 0);\n        this._client = client;\n        this._world = world;\n        this._contextId = contextPayload.id;\n        if (contextPayload.name) {\n            this._contextName = contextPayload.name;\n        }\n    }\n    get puppeteerUtil() {\n        scriptInjector.inject(script => {\n            if (__classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\")) {\n                __classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\").then(handle => {\n                    handle.dispose();\n                });\n            }\n            __classPrivateFieldSet(this, _ExecutionContext_puppeteerUtil, Promise.all([\n                __classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_installGlobalBinding).call(this, new Binding('__ariaQuerySelector', ARIAQueryHandler.queryOne)),\n                __classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_installGlobalBinding).call(this, new Binding('__ariaQuerySelectorAll', (async (element, selector) => {\n                    const results = ARIAQueryHandler.queryAll(element, selector);\n                    return element.executionContext().evaluateHandle((...elements) => {\n                        return elements;\n                    }, ...(await AsyncIterableUtil.collect(results)));\n                }))),\n            ]).then(() => {\n                return this.evaluateHandle(script);\n            }), \"f\");\n        }, !__classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\"));\n        return __classPrivateFieldGet(this, _ExecutionContext_puppeteerUtil, \"f\");\n    }\n    /**\n     * Evaluates the given function.\n     *\n     * @example\n     *\n     * ```ts\n     * const executionContext = await page.mainFrame().executionContext();\n     * const result = await executionContext.evaluate(() => Promise.resolve(8 * 7))* ;\n     * console.log(result); // prints \"56\"\n     * ```\n     *\n     * @example\n     * A string can also be passed in instead of a function:\n     *\n     * ```ts\n     * console.log(await executionContext.evaluate('1 + 2')); // prints \"3\"\n     * ```\n     *\n     * @example\n     * Handles can also be passed as `args`. They resolve to their referenced object:\n     *\n     * ```ts\n     * const oneHandle = await executionContext.evaluateHandle(() => 1);\n     * const twoHandle = await executionContext.evaluateHandle(() => 2);\n     * const result = await executionContext.evaluate(\n     *   (a, b) => a + b,\n     *   oneHandle,\n     *   twoHandle\n     * );\n     * await oneHandle.dispose();\n     * await twoHandle.dispose();\n     * console.log(result); // prints '3'.\n     * ```\n     *\n     * @param pageFunction - The function to evaluate.\n     * @param args - Additional arguments to pass into the function.\n     * @returns The result of evaluating the function. If the result is an object,\n     * a vanilla object containing the serializable properties of the result is\n     * returned.\n     */\n    async evaluate(pageFunction, ...args) {\n        return await __classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_evaluate).call(this, true, pageFunction, ...args);\n    }\n    /**\n     * Evaluates the given function.\n     *\n     * Unlike {@link ExecutionContext.evaluate | evaluate}, this method returns a\n     * handle to the result of the function.\n     *\n     * This method may be better suited if the object cannot be serialized (e.g.\n     * `Map`) and requires further manipulation.\n     *\n     * @example\n     *\n     * ```ts\n     * const context = await page.mainFrame().executionContext();\n     * const handle: JSHandle<typeof globalThis> = await context.evaluateHandle(\n     *   () => Promise.resolve(self)\n     * );\n     * ```\n     *\n     * @example\n     * A string can also be passed in instead of a function.\n     *\n     * ```ts\n     * const handle: JSHandle<number> = await context.evaluateHandle('1 + 2');\n     * ```\n     *\n     * @example\n     * Handles can also be passed as `args`. They resolve to their referenced object:\n     *\n     * ```ts\n     * const bodyHandle: ElementHandle<HTMLBodyElement> =\n     *   await context.evaluateHandle(() => {\n     *     return document.body;\n     *   });\n     * const stringHandle: JSHandle<string> = await context.evaluateHandle(\n     *   body => body.innerHTML,\n     *   body\n     * );\n     * console.log(await stringHandle.jsonValue()); // prints body's innerHTML\n     * // Always dispose your garbage! :)\n     * await bodyHandle.dispose();\n     * await stringHandle.dispose();\n     * ```\n     *\n     * @param pageFunction - The function to evaluate.\n     * @param args - Additional arguments to pass into the function.\n     * @returns A {@link JSHandle | handle} to the result of evaluating the\n     * function. If the result is a `Node`, then this will return an\n     * {@link ElementHandle | element handle}.\n     */\n    async evaluateHandle(pageFunction, ...args) {\n        return __classPrivateFieldGet(this, _ExecutionContext_instances, \"m\", _ExecutionContext_evaluate).call(this, false, pageFunction, ...args);\n    }\n}\n_ExecutionContext_puppeteerUtil = new WeakMap(), _ExecutionContext_instances = new WeakSet(), _ExecutionContext_installGlobalBinding = async function _ExecutionContext_installGlobalBinding(binding) {\n    try {\n        if (this._world) {\n            this._world._bindings.set(binding.name, binding);\n            await this._world._addBindingToContext(this, binding.name);\n        }\n    }\n    catch {\n        // If the binding cannot be added, then either the browser doesn't support\n        // bindings (e.g. Firefox) or the context is broken. Either breakage is\n        // okay, so we ignore the error.\n    }\n}, _ExecutionContext_evaluate = async function _ExecutionContext_evaluate(returnByValue, pageFunction, ...args) {\n    const suffix = `//# sourceURL=${EVALUATION_SCRIPT_URL}`;\n    if (isString(pageFunction)) {\n        const contextId = this._contextId;\n        const expression = pageFunction;\n        const expressionWithSourceUrl = SOURCE_URL_REGEX.test(expression)\n            ? expression\n            : expression + '\\n' + suffix;\n        const { exceptionDetails, result: remoteObject } = await this._client\n            .send('Runtime.evaluate', {\n            expression: expressionWithSourceUrl,\n            contextId,\n            returnByValue,\n            awaitPromise: true,\n            userGesture: true,\n        })\n            .catch(rewriteError);\n        if (exceptionDetails) {\n            throw new Error('Evaluation failed: ' + getExceptionMessage(exceptionDetails));\n        }\n        return returnByValue\n            ? valueFromRemoteObject(remoteObject)\n            : createJSHandle(this, remoteObject);\n    }\n    let callFunctionOnPromise;\n    try {\n        callFunctionOnPromise = this._client.send('Runtime.callFunctionOn', {\n            functionDeclaration: `${stringifyFunction(pageFunction)}\\n${suffix}\\n`,\n            executionContextId: this._contextId,\n            arguments: await Promise.all(args.map(convertArgument.bind(this))),\n            returnByValue,\n            awaitPromise: true,\n            userGesture: true,\n        });\n    }\n    catch (error) {\n        if (error instanceof TypeError &&\n            error.message.startsWith('Converting circular structure to JSON')) {\n            error.message += ' Recursive objects are not allowed.';\n        }\n        throw error;\n    }\n    const { exceptionDetails, result: remoteObject } = await callFunctionOnPromise.catch(rewriteError);\n    if (exceptionDetails) {\n        throw new Error('Evaluation failed: ' + getExceptionMessage(exceptionDetails));\n    }\n    return returnByValue\n        ? valueFromRemoteObject(remoteObject)\n        : createJSHandle(this, remoteObject);\n    async function convertArgument(arg) {\n        if (arg instanceof LazyArg) {\n            arg = await arg.get(this);\n        }\n        if (typeof arg === 'bigint') {\n            // eslint-disable-line valid-typeof\n            return { unserializableValue: `${arg.toString()}n` };\n        }\n        if (Object.is(arg, -0)) {\n            return { unserializableValue: '-0' };\n        }\n        if (Object.is(arg, Infinity)) {\n            return { unserializableValue: 'Infinity' };\n        }\n        if (Object.is(arg, -Infinity)) {\n            return { unserializableValue: '-Infinity' };\n        }\n        if (Object.is(arg, NaN)) {\n            return { unserializableValue: 'NaN' };\n        }\n        const objectHandle = arg && (arg instanceof CDPJSHandle || arg instanceof CDPElementHandle)\n            ? arg\n            : null;\n        if (objectHandle) {\n            if (objectHandle.executionContext() !== this) {\n                throw new Error('JSHandles can be evaluated only in the context they were created!');\n            }\n            if (objectHandle.disposed) {\n                throw new Error('JSHandle is disposed!');\n            }\n            if (objectHandle.remoteObject().unserializableValue) {\n                return {\n                    unserializableValue: objectHandle.remoteObject().unserializableValue,\n                };\n            }\n            if (!objectHandle.remoteObject().objectId) {\n                return { value: objectHandle.remoteObject().value };\n            }\n            return { objectId: objectHandle.remoteObject().objectId };\n        }\n        return { value: arg };\n    }\n};\nconst rewriteError = (error) => {\n    if (error.message.includes('Object reference chain is too long')) {\n        return { result: { type: 'undefined' } };\n    }\n    if (error.message.includes(\"Object couldn't be returned by value\")) {\n        return { result: { type: 'undefined' } };\n    }\n    if (error.message.endsWith('Cannot find context with specified id') ||\n        error.message.endsWith('Inspected target navigated or closed')) {\n        throw new Error('Execution context was destroyed, most likely because of a navigation.');\n    }\n    throw error;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}