{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nimport path from 'path';\nimport { httpRequest } from '../httpUtil.js';\nimport { BrowserPlatform } from './types.js';\nfunction archive(platform, buildId) {\n  switch (platform) {\n    case BrowserPlatform.LINUX:\n      return `firefox-${buildId}.en-US.${platform}-x86_64.tar.bz2`;\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return `firefox-${buildId}.en-US.mac.dmg`;\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return `firefox-${buildId}.en-US.${platform}.zip`;\n  }\n}\nexport function resolveDownloadUrl(platform, buildId, baseUrl = 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central') {\n  return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexport function resolveDownloadPath(platform, buildId) {\n  return [archive(platform, buildId)];\n}\nexport function relativeExecutablePath(platform, _buildId) {\n  switch (platform) {\n    case BrowserPlatform.MAC_ARM:\n    case BrowserPlatform.MAC:\n      return path.join('Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n    case BrowserPlatform.LINUX:\n      return path.join('firefox', 'firefox');\n    case BrowserPlatform.WIN32:\n    case BrowserPlatform.WIN64:\n      return path.join('firefox', 'firefox.exe');\n  }\n}\nexport function resolveBuildId() {\n  return _resolveBuildId.apply(this, arguments);\n}\nfunction _resolveBuildId() {\n  _resolveBuildId = _asyncToGenerator(function* (channel = 'FIREFOX_NIGHTLY') {\n    return new Promise((resolve, reject) => {\n      const request = httpRequest(new URL('https://product-details.mozilla.org/1.0/firefox_versions.json'), 'GET', response => {\n        let data = '';\n        if (response.statusCode && response.statusCode >= 400) {\n          return reject(new Error(`Got status code ${response.statusCode}`));\n        }\n        response.on('data', chunk => {\n          data += chunk;\n        });\n        response.on('end', () => {\n          try {\n            const versions = JSON.parse(data);\n            return resolve(versions[channel]);\n          } catch {\n            return reject(new Error('Firefox version not found'));\n          }\n        });\n      }, false);\n      request.on('error', err => {\n        reject(err);\n      });\n    });\n  });\n  return _resolveBuildId.apply(this, arguments);\n}\nexport function createProfile(_x) {\n  return _createProfile.apply(this, arguments);\n}\nfunction _createProfile() {\n  _createProfile = _asyncToGenerator(function* (options) {\n    if (!fs.existsSync(options.path)) {\n      yield fs.promises.mkdir(options.path, {\n        recursive: true\n      });\n    }\n    yield writePreferences({\n      preferences: {\n        ...defaultProfilePreferences(options.preferences),\n        ...options.preferences\n      },\n      path: options.path\n    });\n  });\n  return _createProfile.apply(this, arguments);\n}\nfunction defaultProfilePreferences(extraPrefs) {\n  const server = 'dummy.test';\n  const defaultPrefs = {\n    // Make sure Shield doesn't hit the network.\n    'app.normandy.api_url': '',\n    // Disable Firefox old build background check\n    'app.update.checkInstallTime': false,\n    // Disable automatically upgrading Firefox\n    'app.update.disabledForTesting': true,\n    // Increase the APZ content response timeout to 1 minute\n    'apz.content_response_timeout': 60000,\n    // Prevent various error message on the console\n    // jest-puppeteer asserts that no error message is emitted by the console\n    'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n    // Enable the dump function: which sends messages to the system\n    // console\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n    'browser.dom.window.dump.enabled': true,\n    // Disable topstories\n    'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n    // Always display a blank page\n    'browser.newtabpage.enabled': false,\n    // Background thumbnails in particular cause grief: and disabling\n    // thumbnails in general cannot hurt\n    'browser.pagethumbnails.capturing_disabled': true,\n    // Disable safebrowsing components.\n    'browser.safebrowsing.blockedURIs.enabled': false,\n    'browser.safebrowsing.downloads.enabled': false,\n    'browser.safebrowsing.malware.enabled': false,\n    'browser.safebrowsing.passwords.enabled': false,\n    'browser.safebrowsing.phishing.enabled': false,\n    // Disable updates to search engines.\n    'browser.search.update': false,\n    // Do not restore the last open set of tabs if the browser has crashed\n    'browser.sessionstore.resume_from_crash': false,\n    // Skip check for default browser on startup\n    'browser.shell.checkDefaultBrowser': false,\n    // Disable newtabpage\n    'browser.startup.homepage': 'about:blank',\n    // Do not redirect user when a milstone upgrade of Firefox is detected\n    'browser.startup.homepage_override.mstone': 'ignore',\n    // Start with a blank page about:blank\n    'browser.startup.page': 0,\n    // Do not allow background tabs to be zombified on Android: otherwise for\n    // tests that open additional tabs: the test harness tab itself might get\n    // unloaded\n    'browser.tabs.disableBackgroundZombification': false,\n    // Do not warn when closing all other open tabs\n    'browser.tabs.warnOnCloseOtherTabs': false,\n    // Do not warn when multiple tabs will be opened\n    'browser.tabs.warnOnOpen': false,\n    // Disable the UI tour.\n    'browser.uitour.enabled': false,\n    // Turn off search suggestions in the location bar so as not to trigger\n    // network connections.\n    'browser.urlbar.suggest.searches': false,\n    // Disable first run splash page on Windows 10\n    'browser.usedOnWindows10.introURL': '',\n    // Do not warn on quitting Firefox\n    'browser.warnOnQuit': false,\n    // Defensively disable data reporting systems\n    'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n    'datareporting.healthreport.logging.consoleEnabled': false,\n    'datareporting.healthreport.service.enabled': false,\n    'datareporting.healthreport.service.firstRun': false,\n    'datareporting.healthreport.uploadEnabled': false,\n    // Do not show datareporting policy notifications which can interfere with tests\n    'datareporting.policy.dataSubmissionEnabled': false,\n    'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n    // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n    // This doesn't affect Puppeteer but spams console (Bug 1424372)\n    'devtools.jsonview.enabled': false,\n    // Disable popup-blocker\n    'dom.disable_open_during_load': false,\n    // Enable the support for File object creation in the content process\n    // Required for |Page.setFileInputFiles| protocol method.\n    'dom.file.createInChild': true,\n    // Disable the ProcessHangMonitor\n    'dom.ipc.reportProcessHangs': false,\n    // Disable slow script dialogues\n    'dom.max_chrome_script_run_time': 0,\n    'dom.max_script_run_time': 0,\n    // Only load extensions from the application and user profile\n    // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n    'extensions.autoDisableScopes': 0,\n    'extensions.enabledScopes': 5,\n    // Disable metadata caching for installed add-ons by default\n    'extensions.getAddons.cache.enabled': false,\n    // Disable installing any distribution extensions or add-ons.\n    'extensions.installDistroAddons': false,\n    // Disabled screenshots extension\n    'extensions.screenshots.disabled': true,\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.enabled': false,\n    // Turn off extension updates so they do not bother tests\n    'extensions.update.notifyUser': false,\n    // Make sure opening about:addons will not hit the network\n    'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n    // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n    'fission.bfcacheInParent': false,\n    // Force all web content to use a single content process\n    'fission.webContentIsolationStrategy': 0,\n    // Allow the application to have focus even it runs in the background\n    'focusmanager.testmode': true,\n    // Disable useragent updates\n    'general.useragent.updates.enabled': false,\n    // Always use network provider for geolocation tests so we bypass the\n    // macOS dialog raised by the corelocation provider\n    'geo.provider.testing': true,\n    // Do not scan Wifi\n    'geo.wifi.scan': false,\n    // No hang monitor\n    'hangmonitor.timeout': 0,\n    // Show chrome errors and warnings in the error console\n    'javascript.options.showInConsole': true,\n    // Disable download and usage of OpenH264: and Widevine plugins\n    'media.gmp-manager.updateEnabled': false,\n    // Prevent various error message on the console\n    // jest-puppeteer asserts that no error message is emitted by the console\n    'network.cookie.cookieBehavior': 0,\n    // Disable experimental feature that is only available in Nightly\n    'network.cookie.sameSite.laxByDefault': false,\n    // Do not prompt for temporary redirects\n    'network.http.prompt-temp-redirect': false,\n    // Disable speculative connections so they are not reported as leaking\n    // when they are hanging around\n    'network.http.speculative-parallel-limit': 0,\n    // Do not automatically switch between offline and online\n    'network.manage-offline-status': false,\n    // Make sure SNTP requests do not hit the network\n    'network.sntp.pools': server,\n    // Disable Flash.\n    'plugin.state.flash': 0,\n    'privacy.trackingprotection.enabled': false,\n    // Can be removed once Firefox 89 is no longer supported\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n    'remote.enabled': true,\n    // Don't do network connections for mitm priming\n    'security.certerrors.mitm.priming.enabled': false,\n    // Local documents have access to all other local documents,\n    // including directory listings\n    'security.fileuri.strict_origin_policy': false,\n    // Do not wait for the notification button security delay\n    'security.notification_enable_delay': 0,\n    // Ensure blocklist updates do not hit the network\n    'services.settings.server': `http://${server}/dummy/blocklist/`,\n    // Do not automatically fill sign-in forms with known usernames and\n    // passwords\n    'signon.autofillForms': false,\n    // Disable password capture, so that tests that include forms are not\n    // influenced by the presence of the persistent doorhanger notification\n    'signon.rememberSignons': false,\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url': 'about:blank',\n    // Disable first-run welcome page\n    'startup.homepage_welcome_url.additional': '',\n    // Disable browser animations (tabs, fullscreen, sliding alerts)\n    'toolkit.cosmeticAnimations.enabled': false,\n    // Prevent starting into safe mode after application crashes\n    'toolkit.startup.max_resumed_crashes': -1\n  };\n  return Object.assign(defaultPrefs, extraPrefs);\n}\n/**\n * Populates the user.js file with custom preferences as needed to allow\n * Firefox's CDP support to properly function. These preferences will be\n * automatically copied over to prefs.js during startup of Firefox. To be\n * able to restore the original values of preferences a backup of prefs.js\n * will be created.\n *\n * @param prefs - List of preferences to add.\n * @param profilePath - Firefox profile to write the preferences to.\n */\nfunction writePreferences(_x2) {\n  return _writePreferences.apply(this, arguments);\n}\nfunction _writePreferences() {\n  _writePreferences = _asyncToGenerator(function* (options) {\n    const lines = Object.entries(options.preferences).map(([key, value]) => {\n      return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n    });\n    yield fs.promises.writeFile(path.join(options.path, 'user.js'), lines.join('\\n'));\n    // Create a backup of the preferences file if it already exitsts.\n    const prefsPath = path.join(options.path, 'prefs.js');\n    if (fs.existsSync(prefsPath)) {\n      const prefsBackupPath = path.join(options.path, 'prefs.js.puppeteer');\n      yield fs.promises.copyFile(prefsPath, prefsBackupPath);\n    }\n  });\n  return _writePreferences.apply(this, arguments);\n}","map":{"version":3,"names":["fs","path","httpRequest","BrowserPlatform","archive","platform","buildId","LINUX","MAC_ARM","MAC","WIN32","WIN64","resolveDownloadUrl","baseUrl","resolveDownloadPath","join","relativeExecutablePath","_buildId","resolveBuildId","channel","Promise","resolve","reject","request","URL","response","data","statusCode","Error","on","chunk","versions","JSON","parse","err","createProfile","options","existsSync","promises","mkdir","recursive","writePreferences","preferences","defaultProfilePreferences","extraPrefs","server","defaultPrefs","Object","assign","lines","entries","map","key","value","stringify","writeFile","prefsPath","prefsBackupPath","copyFile"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@puppeteer/browsers/lib/esm/browser-data/firefox.js"],"sourcesContent":["/**\n * Copyright 2023 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from 'fs';\nimport path from 'path';\nimport { httpRequest } from '../httpUtil.js';\nimport { BrowserPlatform } from './types.js';\nfunction archive(platform, buildId) {\n    switch (platform) {\n        case BrowserPlatform.LINUX:\n            return `firefox-${buildId}.en-US.${platform}-x86_64.tar.bz2`;\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n            return `firefox-${buildId}.en-US.mac.dmg`;\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n            return `firefox-${buildId}.en-US.${platform}.zip`;\n    }\n}\nexport function resolveDownloadUrl(platform, buildId, baseUrl = 'https://archive.mozilla.org/pub/firefox/nightly/latest-mozilla-central') {\n    return `${baseUrl}/${resolveDownloadPath(platform, buildId).join('/')}`;\n}\nexport function resolveDownloadPath(platform, buildId) {\n    return [archive(platform, buildId)];\n}\nexport function relativeExecutablePath(platform, _buildId) {\n    switch (platform) {\n        case BrowserPlatform.MAC_ARM:\n        case BrowserPlatform.MAC:\n            return path.join('Firefox Nightly.app', 'Contents', 'MacOS', 'firefox');\n        case BrowserPlatform.LINUX:\n            return path.join('firefox', 'firefox');\n        case BrowserPlatform.WIN32:\n        case BrowserPlatform.WIN64:\n            return path.join('firefox', 'firefox.exe');\n    }\n}\nexport async function resolveBuildId(channel = 'FIREFOX_NIGHTLY') {\n    return new Promise((resolve, reject) => {\n        const request = httpRequest(new URL('https://product-details.mozilla.org/1.0/firefox_versions.json'), 'GET', response => {\n            let data = '';\n            if (response.statusCode && response.statusCode >= 400) {\n                return reject(new Error(`Got status code ${response.statusCode}`));\n            }\n            response.on('data', chunk => {\n                data += chunk;\n            });\n            response.on('end', () => {\n                try {\n                    const versions = JSON.parse(data);\n                    return resolve(versions[channel]);\n                }\n                catch {\n                    return reject(new Error('Firefox version not found'));\n                }\n            });\n        }, false);\n        request.on('error', err => {\n            reject(err);\n        });\n    });\n}\nexport async function createProfile(options) {\n    if (!fs.existsSync(options.path)) {\n        await fs.promises.mkdir(options.path, {\n            recursive: true,\n        });\n    }\n    await writePreferences({\n        preferences: {\n            ...defaultProfilePreferences(options.preferences),\n            ...options.preferences,\n        },\n        path: options.path,\n    });\n}\nfunction defaultProfilePreferences(extraPrefs) {\n    const server = 'dummy.test';\n    const defaultPrefs = {\n        // Make sure Shield doesn't hit the network.\n        'app.normandy.api_url': '',\n        // Disable Firefox old build background check\n        'app.update.checkInstallTime': false,\n        // Disable automatically upgrading Firefox\n        'app.update.disabledForTesting': true,\n        // Increase the APZ content response timeout to 1 minute\n        'apz.content_response_timeout': 60000,\n        // Prevent various error message on the console\n        // jest-puppeteer asserts that no error message is emitted by the console\n        'browser.contentblocking.features.standard': '-tp,tpPrivate,cookieBehavior0,-cm,-fp',\n        // Enable the dump function: which sends messages to the system\n        // console\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1543115\n        'browser.dom.window.dump.enabled': true,\n        // Disable topstories\n        'browser.newtabpage.activity-stream.feeds.system.topstories': false,\n        // Always display a blank page\n        'browser.newtabpage.enabled': false,\n        // Background thumbnails in particular cause grief: and disabling\n        // thumbnails in general cannot hurt\n        'browser.pagethumbnails.capturing_disabled': true,\n        // Disable safebrowsing components.\n        'browser.safebrowsing.blockedURIs.enabled': false,\n        'browser.safebrowsing.downloads.enabled': false,\n        'browser.safebrowsing.malware.enabled': false,\n        'browser.safebrowsing.passwords.enabled': false,\n        'browser.safebrowsing.phishing.enabled': false,\n        // Disable updates to search engines.\n        'browser.search.update': false,\n        // Do not restore the last open set of tabs if the browser has crashed\n        'browser.sessionstore.resume_from_crash': false,\n        // Skip check for default browser on startup\n        'browser.shell.checkDefaultBrowser': false,\n        // Disable newtabpage\n        'browser.startup.homepage': 'about:blank',\n        // Do not redirect user when a milstone upgrade of Firefox is detected\n        'browser.startup.homepage_override.mstone': 'ignore',\n        // Start with a blank page about:blank\n        'browser.startup.page': 0,\n        // Do not allow background tabs to be zombified on Android: otherwise for\n        // tests that open additional tabs: the test harness tab itself might get\n        // unloaded\n        'browser.tabs.disableBackgroundZombification': false,\n        // Do not warn when closing all other open tabs\n        'browser.tabs.warnOnCloseOtherTabs': false,\n        // Do not warn when multiple tabs will be opened\n        'browser.tabs.warnOnOpen': false,\n        // Disable the UI tour.\n        'browser.uitour.enabled': false,\n        // Turn off search suggestions in the location bar so as not to trigger\n        // network connections.\n        'browser.urlbar.suggest.searches': false,\n        // Disable first run splash page on Windows 10\n        'browser.usedOnWindows10.introURL': '',\n        // Do not warn on quitting Firefox\n        'browser.warnOnQuit': false,\n        // Defensively disable data reporting systems\n        'datareporting.healthreport.documentServerURI': `http://${server}/dummy/healthreport/`,\n        'datareporting.healthreport.logging.consoleEnabled': false,\n        'datareporting.healthreport.service.enabled': false,\n        'datareporting.healthreport.service.firstRun': false,\n        'datareporting.healthreport.uploadEnabled': false,\n        // Do not show datareporting policy notifications which can interfere with tests\n        'datareporting.policy.dataSubmissionEnabled': false,\n        'datareporting.policy.dataSubmissionPolicyBypassNotification': true,\n        // DevTools JSONViewer sometimes fails to load dependencies with its require.js.\n        // This doesn't affect Puppeteer but spams console (Bug 1424372)\n        'devtools.jsonview.enabled': false,\n        // Disable popup-blocker\n        'dom.disable_open_during_load': false,\n        // Enable the support for File object creation in the content process\n        // Required for |Page.setFileInputFiles| protocol method.\n        'dom.file.createInChild': true,\n        // Disable the ProcessHangMonitor\n        'dom.ipc.reportProcessHangs': false,\n        // Disable slow script dialogues\n        'dom.max_chrome_script_run_time': 0,\n        'dom.max_script_run_time': 0,\n        // Only load extensions from the application and user profile\n        // AddonManager.SCOPE_PROFILE + AddonManager.SCOPE_APPLICATION\n        'extensions.autoDisableScopes': 0,\n        'extensions.enabledScopes': 5,\n        // Disable metadata caching for installed add-ons by default\n        'extensions.getAddons.cache.enabled': false,\n        // Disable installing any distribution extensions or add-ons.\n        'extensions.installDistroAddons': false,\n        // Disabled screenshots extension\n        'extensions.screenshots.disabled': true,\n        // Turn off extension updates so they do not bother tests\n        'extensions.update.enabled': false,\n        // Turn off extension updates so they do not bother tests\n        'extensions.update.notifyUser': false,\n        // Make sure opening about:addons will not hit the network\n        'extensions.webservice.discoverURL': `http://${server}/dummy/discoveryURL`,\n        // Temporarily force disable BFCache in parent (https://bit.ly/bug-1732263)\n        'fission.bfcacheInParent': false,\n        // Force all web content to use a single content process\n        'fission.webContentIsolationStrategy': 0,\n        // Allow the application to have focus even it runs in the background\n        'focusmanager.testmode': true,\n        // Disable useragent updates\n        'general.useragent.updates.enabled': false,\n        // Always use network provider for geolocation tests so we bypass the\n        // macOS dialog raised by the corelocation provider\n        'geo.provider.testing': true,\n        // Do not scan Wifi\n        'geo.wifi.scan': false,\n        // No hang monitor\n        'hangmonitor.timeout': 0,\n        // Show chrome errors and warnings in the error console\n        'javascript.options.showInConsole': true,\n        // Disable download and usage of OpenH264: and Widevine plugins\n        'media.gmp-manager.updateEnabled': false,\n        // Prevent various error message on the console\n        // jest-puppeteer asserts that no error message is emitted by the console\n        'network.cookie.cookieBehavior': 0,\n        // Disable experimental feature that is only available in Nightly\n        'network.cookie.sameSite.laxByDefault': false,\n        // Do not prompt for temporary redirects\n        'network.http.prompt-temp-redirect': false,\n        // Disable speculative connections so they are not reported as leaking\n        // when they are hanging around\n        'network.http.speculative-parallel-limit': 0,\n        // Do not automatically switch between offline and online\n        'network.manage-offline-status': false,\n        // Make sure SNTP requests do not hit the network\n        'network.sntp.pools': server,\n        // Disable Flash.\n        'plugin.state.flash': 0,\n        'privacy.trackingprotection.enabled': false,\n        // Can be removed once Firefox 89 is no longer supported\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1710839\n        'remote.enabled': true,\n        // Don't do network connections for mitm priming\n        'security.certerrors.mitm.priming.enabled': false,\n        // Local documents have access to all other local documents,\n        // including directory listings\n        'security.fileuri.strict_origin_policy': false,\n        // Do not wait for the notification button security delay\n        'security.notification_enable_delay': 0,\n        // Ensure blocklist updates do not hit the network\n        'services.settings.server': `http://${server}/dummy/blocklist/`,\n        // Do not automatically fill sign-in forms with known usernames and\n        // passwords\n        'signon.autofillForms': false,\n        // Disable password capture, so that tests that include forms are not\n        // influenced by the presence of the persistent doorhanger notification\n        'signon.rememberSignons': false,\n        // Disable first-run welcome page\n        'startup.homepage_welcome_url': 'about:blank',\n        // Disable first-run welcome page\n        'startup.homepage_welcome_url.additional': '',\n        // Disable browser animations (tabs, fullscreen, sliding alerts)\n        'toolkit.cosmeticAnimations.enabled': false,\n        // Prevent starting into safe mode after application crashes\n        'toolkit.startup.max_resumed_crashes': -1,\n    };\n    return Object.assign(defaultPrefs, extraPrefs);\n}\n/**\n * Populates the user.js file with custom preferences as needed to allow\n * Firefox's CDP support to properly function. These preferences will be\n * automatically copied over to prefs.js during startup of Firefox. To be\n * able to restore the original values of preferences a backup of prefs.js\n * will be created.\n *\n * @param prefs - List of preferences to add.\n * @param profilePath - Firefox profile to write the preferences to.\n */\nasync function writePreferences(options) {\n    const lines = Object.entries(options.preferences).map(([key, value]) => {\n        return `user_pref(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n    });\n    await fs.promises.writeFile(path.join(options.path, 'user.js'), lines.join('\\n'));\n    // Create a backup of the preferences file if it already exitsts.\n    const prefsPath = path.join(options.path, 'prefs.js');\n    if (fs.existsSync(prefsPath)) {\n        const prefsBackupPath = path.join(options.path, 'prefs.js.puppeteer');\n        await fs.promises.copyFile(prefsPath, prefsBackupPath);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}