{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DeviceRequestPrompt_instances, _DeviceRequestPrompt_client, _DeviceRequestPrompt_timeoutSettings, _DeviceRequestPrompt_id, _DeviceRequestPrompt_handled, _DeviceRequestPrompt_updateDevicesHandle, _DeviceRequestPrompt_waitForDevicePromises, _DeviceRequestPrompt_updateDevices, _DeviceRequestPromptManager_instances, _DeviceRequestPromptManager_client, _DeviceRequestPromptManager_timeoutSettings, _DeviceRequestPromptManager_deviceRequestPromptPromises, _DeviceRequestPromptManager_onDeviceRequestPrompted;\nimport { assert } from '../util/assert.js';\nimport { createDeferredPromise } from '../util/DeferredPromise.js';\n/**\n * Device in a request prompt.\n *\n * @public\n */\nexport class DeviceRequestPromptDevice {\n  /**\n   * @internal\n   */\n  constructor(id, name) {\n    this.id = id;\n    this.name = name;\n  }\n}\n/**\n * Device request prompts let you respond to the page requesting for a device\n * through an API like WebBluetooth.\n *\n * @remarks\n * `DeviceRequestPrompt` instances are returned via the\n * {@link Page.waitForDevicePrompt} method.\n *\n * @example\n *\n * ```ts\n * const [deviceRequest] = Promise.all([\n *   page.waitForDevicePrompt(),\n *   page.click('#connect-bluetooth'),\n * ]);\n * await devicePrompt.select(\n *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n * );\n * ```\n *\n * @public\n */\nexport class DeviceRequestPrompt {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings, firstEvent) {\n    _DeviceRequestPrompt_instances.add(this);\n    _DeviceRequestPrompt_client.set(this, void 0);\n    _DeviceRequestPrompt_timeoutSettings.set(this, void 0);\n    _DeviceRequestPrompt_id.set(this, void 0);\n    _DeviceRequestPrompt_handled.set(this, false);\n    _DeviceRequestPrompt_updateDevicesHandle.set(this, __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).bind(this));\n    _DeviceRequestPrompt_waitForDevicePromises.set(this, new Set());\n    /**\n     * Current list of selectable devices.\n     */\n    this.devices = [];\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_client, client, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_timeoutSettings, timeoutSettings, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPrompt_id, firstEvent.id, \"f\");\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('Target.detachedFromTarget', () => {\n      __classPrivateFieldSet(this, _DeviceRequestPrompt_client, null, \"f\");\n    });\n    __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).call(this, firstEvent);\n  }\n  /**\n   * Resolve to the first device in the prompt matching a filter.\n   */\n  waitForDevice(filter, options = {}) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      for (const device of _this.devices) {\n        if (filter(device)) {\n          return device;\n        }\n      }\n      const {\n        timeout = __classPrivateFieldGet(_this, _DeviceRequestPrompt_timeoutSettings, \"f\").timeout()\n      } = options;\n      const promise = createDeferredPromise({\n        message: `Waiting for \\`DeviceRequestPromptDevice\\` failed: ${timeout}ms exceeded`,\n        timeout\n      });\n      const handle = {\n        filter,\n        promise\n      };\n      __classPrivateFieldGet(_this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").add(handle);\n      try {\n        return yield promise;\n      } finally {\n        __classPrivateFieldGet(_this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").delete(handle);\n      }\n    })();\n  }\n  /**\n   * Select a device in the prompt's list.\n   */\n  select(device) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      assert(__classPrivateFieldGet(_this2, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot select device through detached session!');\n      assert(_this2.devices.includes(device), 'Cannot select unknown device!');\n      assert(!__classPrivateFieldGet(_this2, _DeviceRequestPrompt_handled, \"f\"), 'Cannot select DeviceRequestPrompt which is already handled!');\n      __classPrivateFieldGet(_this2, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(_this2, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n      __classPrivateFieldSet(_this2, _DeviceRequestPrompt_handled, true, \"f\");\n      return __classPrivateFieldGet(_this2, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.selectPrompt', {\n        id: __classPrivateFieldGet(_this2, _DeviceRequestPrompt_id, \"f\"),\n        deviceId: device.id\n      });\n    })();\n  }\n  /**\n   * Cancel the prompt.\n   */\n  cancel() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      assert(__classPrivateFieldGet(_this3, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot cancel prompt through detached session!');\n      assert(!__classPrivateFieldGet(_this3, _DeviceRequestPrompt_handled, \"f\"), 'Cannot cancel DeviceRequestPrompt which is already handled!');\n      __classPrivateFieldGet(_this3, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(_this3, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n      __classPrivateFieldSet(_this3, _DeviceRequestPrompt_handled, true, \"f\");\n      return __classPrivateFieldGet(_this3, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.cancelPrompt', {\n        id: __classPrivateFieldGet(_this3, _DeviceRequestPrompt_id, \"f\")\n      });\n    })();\n  }\n}\n_DeviceRequestPrompt_client = new WeakMap(), _DeviceRequestPrompt_timeoutSettings = new WeakMap(), _DeviceRequestPrompt_id = new WeakMap(), _DeviceRequestPrompt_handled = new WeakMap(), _DeviceRequestPrompt_updateDevicesHandle = new WeakMap(), _DeviceRequestPrompt_waitForDevicePromises = new WeakMap(), _DeviceRequestPrompt_instances = new WeakSet(), _DeviceRequestPrompt_updateDevices = function _DeviceRequestPrompt_updateDevices(event) {\n  if (event.id !== __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\")) {\n    return;\n  }\n  for (const rawDevice of event.devices) {\n    if (this.devices.some(device => {\n      return device.id === rawDevice.id;\n    })) {\n      continue;\n    }\n    const newDevice = new DeviceRequestPromptDevice(rawDevice.id, rawDevice.name);\n    this.devices.push(newDevice);\n    for (const waitForDevicePromise of __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\")) {\n      if (waitForDevicePromise.filter(newDevice)) {\n        waitForDevicePromise.promise.resolve(newDevice);\n      }\n    }\n  }\n};\n/**\n * @internal\n */\nexport class DeviceRequestPromptManager {\n  /**\n   * @internal\n   */\n  constructor(client, timeoutSettings) {\n    _DeviceRequestPromptManager_instances.add(this);\n    _DeviceRequestPromptManager_client.set(this, void 0);\n    _DeviceRequestPromptManager_timeoutSettings.set(this, void 0);\n    _DeviceRequestPromptManager_deviceRequestPromptPromises.set(this, new Set());\n    __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, client, \"f\");\n    __classPrivateFieldSet(this, _DeviceRequestPromptManager_timeoutSettings, timeoutSettings, \"f\");\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('DeviceAccess.deviceRequestPrompted', event => {\n      __classPrivateFieldGet(this, _DeviceRequestPromptManager_instances, \"m\", _DeviceRequestPromptManager_onDeviceRequestPrompted).call(this, event);\n    });\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('Target.detachedFromTarget', () => {\n      __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, null, \"f\");\n    });\n  }\n  /**\n   * Wait for device prompt created by an action like calling WebBluetooth's\n   * requestDevice.\n   */\n  waitForDevicePrompt(options = {}) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      assert(__classPrivateFieldGet(_this4, _DeviceRequestPromptManager_client, \"f\") !== null, 'Cannot wait for device prompt through detached session!');\n      const needsEnable = __classPrivateFieldGet(_this4, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size === 0;\n      let enablePromise;\n      if (needsEnable) {\n        enablePromise = __classPrivateFieldGet(_this4, _DeviceRequestPromptManager_client, \"f\").send('DeviceAccess.enable');\n      }\n      const {\n        timeout = __classPrivateFieldGet(_this4, _DeviceRequestPromptManager_timeoutSettings, \"f\").timeout()\n      } = options;\n      const promise = createDeferredPromise({\n        message: `Waiting for \\`DeviceRequestPrompt\\` failed: ${timeout}ms exceeded`,\n        timeout\n      });\n      __classPrivateFieldGet(_this4, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").add(promise);\n      try {\n        const [result] = yield Promise.all([promise, enablePromise]);\n        return result;\n      } finally {\n        __classPrivateFieldGet(_this4, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").delete(promise);\n      }\n    })();\n  }\n}\n_DeviceRequestPromptManager_client = new WeakMap(), _DeviceRequestPromptManager_timeoutSettings = new WeakMap(), _DeviceRequestPromptManager_deviceRequestPromptPromises = new WeakMap(), _DeviceRequestPromptManager_instances = new WeakSet(), _DeviceRequestPromptManager_onDeviceRequestPrompted = function _DeviceRequestPromptManager_onDeviceRequestPrompted(event) {\n  if (!__classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size) {\n    return;\n  }\n  assert(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\") !== null);\n  const devicePrompt = new DeviceRequestPrompt(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\"), __classPrivateFieldGet(this, _DeviceRequestPromptManager_timeoutSettings, \"f\"), event);\n  for (const promise of __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\")) {\n    promise.resolve(devicePrompt);\n  }\n  __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").clear();\n};","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_DeviceRequestPrompt_instances","_DeviceRequestPrompt_client","_DeviceRequestPrompt_timeoutSettings","_DeviceRequestPrompt_id","_DeviceRequestPrompt_handled","_DeviceRequestPrompt_updateDevicesHandle","_DeviceRequestPrompt_waitForDevicePromises","_DeviceRequestPrompt_updateDevices","_DeviceRequestPromptManager_instances","_DeviceRequestPromptManager_client","_DeviceRequestPromptManager_timeoutSettings","_DeviceRequestPromptManager_deviceRequestPromptPromises","_DeviceRequestPromptManager_onDeviceRequestPrompted","assert","createDeferredPromise","DeviceRequestPromptDevice","constructor","id","name","DeviceRequestPrompt","client","timeoutSettings","firstEvent","add","bind","Set","devices","on","waitForDevice","filter","options","device","timeout","promise","message","handle","delete","select","includes","off","send","deviceId","cancel","WeakMap","WeakSet","event","rawDevice","some","newDevice","push","waitForDevicePromise","resolve","DeviceRequestPromptManager","waitForDevicePrompt","needsEnable","size","enablePromise","result","Promise","all","devicePrompt","clear"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/DeviceRequestPrompt.js"],"sourcesContent":["/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _DeviceRequestPrompt_instances, _DeviceRequestPrompt_client, _DeviceRequestPrompt_timeoutSettings, _DeviceRequestPrompt_id, _DeviceRequestPrompt_handled, _DeviceRequestPrompt_updateDevicesHandle, _DeviceRequestPrompt_waitForDevicePromises, _DeviceRequestPrompt_updateDevices, _DeviceRequestPromptManager_instances, _DeviceRequestPromptManager_client, _DeviceRequestPromptManager_timeoutSettings, _DeviceRequestPromptManager_deviceRequestPromptPromises, _DeviceRequestPromptManager_onDeviceRequestPrompted;\nimport { assert } from '../util/assert.js';\nimport { createDeferredPromise, } from '../util/DeferredPromise.js';\n/**\n * Device in a request prompt.\n *\n * @public\n */\nexport class DeviceRequestPromptDevice {\n    /**\n     * @internal\n     */\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}\n/**\n * Device request prompts let you respond to the page requesting for a device\n * through an API like WebBluetooth.\n *\n * @remarks\n * `DeviceRequestPrompt` instances are returned via the\n * {@link Page.waitForDevicePrompt} method.\n *\n * @example\n *\n * ```ts\n * const [deviceRequest] = Promise.all([\n *   page.waitForDevicePrompt(),\n *   page.click('#connect-bluetooth'),\n * ]);\n * await devicePrompt.select(\n *   await devicePrompt.waitForDevice(({name}) => name.includes('My Device'))\n * );\n * ```\n *\n * @public\n */\nexport class DeviceRequestPrompt {\n    /**\n     * @internal\n     */\n    constructor(client, timeoutSettings, firstEvent) {\n        _DeviceRequestPrompt_instances.add(this);\n        _DeviceRequestPrompt_client.set(this, void 0);\n        _DeviceRequestPrompt_timeoutSettings.set(this, void 0);\n        _DeviceRequestPrompt_id.set(this, void 0);\n        _DeviceRequestPrompt_handled.set(this, false);\n        _DeviceRequestPrompt_updateDevicesHandle.set(this, __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).bind(this));\n        _DeviceRequestPrompt_waitForDevicePromises.set(this, new Set());\n        /**\n         * Current list of selectable devices.\n         */\n        this.devices = [];\n        __classPrivateFieldSet(this, _DeviceRequestPrompt_client, client, \"f\");\n        __classPrivateFieldSet(this, _DeviceRequestPrompt_timeoutSettings, timeoutSettings, \"f\");\n        __classPrivateFieldSet(this, _DeviceRequestPrompt_id, firstEvent.id, \"f\");\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").on('Target.detachedFromTarget', () => {\n            __classPrivateFieldSet(this, _DeviceRequestPrompt_client, null, \"f\");\n        });\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_instances, \"m\", _DeviceRequestPrompt_updateDevices).call(this, firstEvent);\n    }\n    /**\n     * Resolve to the first device in the prompt matching a filter.\n     */\n    async waitForDevice(filter, options = {}) {\n        for (const device of this.devices) {\n            if (filter(device)) {\n                return device;\n            }\n        }\n        const { timeout = __classPrivateFieldGet(this, _DeviceRequestPrompt_timeoutSettings, \"f\").timeout() } = options;\n        const promise = createDeferredPromise({\n            message: `Waiting for \\`DeviceRequestPromptDevice\\` failed: ${timeout}ms exceeded`,\n            timeout,\n        });\n        const handle = { filter, promise };\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").add(handle);\n        try {\n            return await promise;\n        }\n        finally {\n            __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\").delete(handle);\n        }\n    }\n    /**\n     * Select a device in the prompt's list.\n     */\n    async select(device) {\n        assert(__classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot select device through detached session!');\n        assert(this.devices.includes(device), 'Cannot select unknown device!');\n        assert(!__classPrivateFieldGet(this, _DeviceRequestPrompt_handled, \"f\"), 'Cannot select DeviceRequestPrompt which is already handled!');\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n        __classPrivateFieldSet(this, _DeviceRequestPrompt_handled, true, \"f\");\n        return __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.selectPrompt', {\n            id: __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\"),\n            deviceId: device.id,\n        });\n    }\n    /**\n     * Cancel the prompt.\n     */\n    async cancel() {\n        assert(__classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\") !== null, 'Cannot cancel prompt through detached session!');\n        assert(!__classPrivateFieldGet(this, _DeviceRequestPrompt_handled, \"f\"), 'Cannot cancel DeviceRequestPrompt which is already handled!');\n        __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").off('DeviceAccess.deviceRequestPrompted', __classPrivateFieldGet(this, _DeviceRequestPrompt_updateDevicesHandle, \"f\"));\n        __classPrivateFieldSet(this, _DeviceRequestPrompt_handled, true, \"f\");\n        return __classPrivateFieldGet(this, _DeviceRequestPrompt_client, \"f\").send('DeviceAccess.cancelPrompt', { id: __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\") });\n    }\n}\n_DeviceRequestPrompt_client = new WeakMap(), _DeviceRequestPrompt_timeoutSettings = new WeakMap(), _DeviceRequestPrompt_id = new WeakMap(), _DeviceRequestPrompt_handled = new WeakMap(), _DeviceRequestPrompt_updateDevicesHandle = new WeakMap(), _DeviceRequestPrompt_waitForDevicePromises = new WeakMap(), _DeviceRequestPrompt_instances = new WeakSet(), _DeviceRequestPrompt_updateDevices = function _DeviceRequestPrompt_updateDevices(event) {\n    if (event.id !== __classPrivateFieldGet(this, _DeviceRequestPrompt_id, \"f\")) {\n        return;\n    }\n    for (const rawDevice of event.devices) {\n        if (this.devices.some(device => {\n            return device.id === rawDevice.id;\n        })) {\n            continue;\n        }\n        const newDevice = new DeviceRequestPromptDevice(rawDevice.id, rawDevice.name);\n        this.devices.push(newDevice);\n        for (const waitForDevicePromise of __classPrivateFieldGet(this, _DeviceRequestPrompt_waitForDevicePromises, \"f\")) {\n            if (waitForDevicePromise.filter(newDevice)) {\n                waitForDevicePromise.promise.resolve(newDevice);\n            }\n        }\n    }\n};\n/**\n * @internal\n */\nexport class DeviceRequestPromptManager {\n    /**\n     * @internal\n     */\n    constructor(client, timeoutSettings) {\n        _DeviceRequestPromptManager_instances.add(this);\n        _DeviceRequestPromptManager_client.set(this, void 0);\n        _DeviceRequestPromptManager_timeoutSettings.set(this, void 0);\n        _DeviceRequestPromptManager_deviceRequestPromptPromises.set(this, new Set());\n        __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, client, \"f\");\n        __classPrivateFieldSet(this, _DeviceRequestPromptManager_timeoutSettings, timeoutSettings, \"f\");\n        __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('DeviceAccess.deviceRequestPrompted', event => {\n            __classPrivateFieldGet(this, _DeviceRequestPromptManager_instances, \"m\", _DeviceRequestPromptManager_onDeviceRequestPrompted).call(this, event);\n        });\n        __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").on('Target.detachedFromTarget', () => {\n            __classPrivateFieldSet(this, _DeviceRequestPromptManager_client, null, \"f\");\n        });\n    }\n    /**\n     * Wait for device prompt created by an action like calling WebBluetooth's\n     * requestDevice.\n     */\n    async waitForDevicePrompt(options = {}) {\n        assert(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\") !== null, 'Cannot wait for device prompt through detached session!');\n        const needsEnable = __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size === 0;\n        let enablePromise;\n        if (needsEnable) {\n            enablePromise = __classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\").send('DeviceAccess.enable');\n        }\n        const { timeout = __classPrivateFieldGet(this, _DeviceRequestPromptManager_timeoutSettings, \"f\").timeout() } = options;\n        const promise = createDeferredPromise({\n            message: `Waiting for \\`DeviceRequestPrompt\\` failed: ${timeout}ms exceeded`,\n            timeout,\n        });\n        __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").add(promise);\n        try {\n            const [result] = await Promise.all([promise, enablePromise]);\n            return result;\n        }\n        finally {\n            __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").delete(promise);\n        }\n    }\n}\n_DeviceRequestPromptManager_client = new WeakMap(), _DeviceRequestPromptManager_timeoutSettings = new WeakMap(), _DeviceRequestPromptManager_deviceRequestPromptPromises = new WeakMap(), _DeviceRequestPromptManager_instances = new WeakSet(), _DeviceRequestPromptManager_onDeviceRequestPrompted = function _DeviceRequestPromptManager_onDeviceRequestPrompted(event) {\n    if (!__classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").size) {\n        return;\n    }\n    assert(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\") !== null);\n    const devicePrompt = new DeviceRequestPrompt(__classPrivateFieldGet(this, _DeviceRequestPromptManager_client, \"f\"), __classPrivateFieldGet(this, _DeviceRequestPromptManager_timeoutSettings, \"f\"), event);\n    for (const promise of __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\")) {\n        promise.resolve(devicePrompt);\n    }\n    __classPrivateFieldGet(this, _DeviceRequestPromptManager_deviceRequestPromptPromises, \"f\").clear();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}