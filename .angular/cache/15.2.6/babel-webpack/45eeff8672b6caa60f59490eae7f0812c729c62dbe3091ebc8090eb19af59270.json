{"ast":null,"code":"import _asyncToGenerator from \"/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FirefoxTargetManager_instances, _FirefoxTargetManager_connection, _FirefoxTargetManager_discoveredTargetsByTargetId, _FirefoxTargetManager_availableTargetsByTargetId, _FirefoxTargetManager_availableTargetsBySessionId, _FirefoxTargetManager_ignoredTargets, _FirefoxTargetManager_targetFilterCallback, _FirefoxTargetManager_targetFactory, _FirefoxTargetManager_targetInterceptors, _FirefoxTargetManager_attachedToTargetListenersBySession, _FirefoxTargetManager_initializeCallback, _FirefoxTargetManager_initializePromise, _FirefoxTargetManager_targetsIdsForInit, _FirefoxTargetManager_onSessionDetached, _FirefoxTargetManager_onTargetCreated, _FirefoxTargetManager_onTargetDestroyed, _FirefoxTargetManager_onAttachedToTarget, _FirefoxTargetManager_finishInitializationIfReady;\nimport { assert } from '../util/assert.js';\nimport { Connection } from './Connection.js';\nimport { EventEmitter } from './EventEmitter.js';\n/**\n * FirefoxTargetManager implements target management using\n * `Target.setDiscoverTargets` without using auto-attach. It, therefore, creates\n * targets that lazily establish their CDP sessions.\n *\n * Although the approach is potentially flaky, there is no other way for Firefox\n * because Firefox's CDP implementation does not support auto-attach.\n *\n * Firefox does not support targetInfoChanged and detachedFromTarget events:\n *\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1610855\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1636979\n *   @internal\n */\nexport class FirefoxTargetManager extends EventEmitter {\n  constructor(connection, targetFactory, targetFilterCallback) {\n    var _this;\n    super();\n    _this = this;\n    _FirefoxTargetManager_instances.add(this);\n    _FirefoxTargetManager_connection.set(this, void 0);\n    /**\n     * Keeps track of the following events: 'Target.targetCreated',\n     * 'Target.targetDestroyed'.\n     *\n     * A target becomes discovered when 'Target.targetCreated' is received.\n     * A target is removed from this map once 'Target.targetDestroyed' is\n     * received.\n     *\n     * `targetFilterCallback` has no effect on this map.\n     */\n    _FirefoxTargetManager_discoveredTargetsByTargetId.set(this, new Map());\n    /**\n     * Keeps track of targets that were created via 'Target.targetCreated'\n     * and which one are not filtered out by `targetFilterCallback`.\n     *\n     * The target is removed from here once it's been destroyed.\n     */\n    _FirefoxTargetManager_availableTargetsByTargetId.set(this, new Map());\n    /**\n     * Tracks which sessions attach to which target.\n     */\n    _FirefoxTargetManager_availableTargetsBySessionId.set(this, new Map());\n    /**\n     * If a target was filtered out by `targetFilterCallback`, we still receive\n     * events about it from CDP, but we don't forward them to the rest of Puppeteer.\n     */\n    _FirefoxTargetManager_ignoredTargets.set(this, new Set());\n    _FirefoxTargetManager_targetFilterCallback.set(this, void 0);\n    _FirefoxTargetManager_targetFactory.set(this, void 0);\n    _FirefoxTargetManager_targetInterceptors.set(this, new WeakMap());\n    _FirefoxTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());\n    _FirefoxTargetManager_initializeCallback.set(this, () => {});\n    _FirefoxTargetManager_initializePromise.set(this, new Promise(resolve => {\n      __classPrivateFieldSet(this, _FirefoxTargetManager_initializeCallback, resolve, \"f\");\n    }));\n    _FirefoxTargetManager_targetsIdsForInit.set(this, new Set());\n    _FirefoxTargetManager_onSessionDetached.set(this, session => {\n      this.removeSessionListeners(session);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").delete(session);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").delete(session.id());\n    });\n    _FirefoxTargetManager_onTargetCreated.set(this, /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (event) {\n        if (__classPrivateFieldGet(_this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").has(event.targetInfo.targetId)) {\n          return;\n        }\n        __classPrivateFieldGet(_this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").set(event.targetInfo.targetId, event.targetInfo);\n        if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {\n          const target = __classPrivateFieldGet(_this, _FirefoxTargetManager_targetFactory, \"f\").call(_this, event.targetInfo, undefined);\n          __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n          __classPrivateFieldGet(_this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(_this, target._targetId);\n          return;\n        }\n        if (__classPrivateFieldGet(_this, _FirefoxTargetManager_targetFilterCallback, \"f\") && !__classPrivateFieldGet(_this, _FirefoxTargetManager_targetFilterCallback, \"f\").call(_this, event.targetInfo)) {\n          __classPrivateFieldGet(_this, _FirefoxTargetManager_ignoredTargets, \"f\").add(event.targetInfo.targetId);\n          __classPrivateFieldGet(_this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(_this, event.targetInfo.targetId);\n          return;\n        }\n        const target = __classPrivateFieldGet(_this, _FirefoxTargetManager_targetFactory, \"f\").call(_this, event.targetInfo, undefined);\n        __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n        _this.emit(\"targetAvailable\" /* TargetManagerEmittedEvents.TargetAvailable */, target);\n        __classPrivateFieldGet(_this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(_this, target._targetId);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    _FirefoxTargetManager_onTargetDestroyed.set(this, event => {\n      __classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").delete(event.targetId);\n      __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetId);\n      const target = __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(event.targetId);\n      if (target) {\n        this.emit(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, target);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").delete(event.targetId);\n      }\n    });\n    _FirefoxTargetManager_onAttachedToTarget.set(this, /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (parentSession, event) {\n        const targetInfo = event.targetInfo;\n        const session = __classPrivateFieldGet(_this, _FirefoxTargetManager_connection, \"f\").session(event.sessionId);\n        if (!session) {\n          throw new Error(`Session ${event.sessionId} was not created.`);\n        }\n        const target = __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId);\n        assert(target, `Target ${targetInfo.targetId} is missing`);\n        _this.setupAttachmentListeners(session);\n        __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").set(session.id(), __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId));\n        for (const hook of __classPrivateFieldGet(_this, _FirefoxTargetManager_targetInterceptors, \"f\").get(parentSession) || []) {\n          if (!(parentSession instanceof Connection)) {\n            assert(__classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").has(parentSession.id()));\n          }\n          yield hook(target, parentSession instanceof Connection ? null : __classPrivateFieldGet(_this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").get(parentSession.id()));\n        }\n      });\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n    __classPrivateFieldSet(this, _FirefoxTargetManager_connection, connection, \"f\");\n    __classPrivateFieldSet(this, _FirefoxTargetManager_targetFilterCallback, targetFilterCallback, \"f\");\n    __classPrivateFieldSet(this, _FirefoxTargetManager_targetFactory, targetFactory, \"f\");\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('sessiondetached', __classPrivateFieldGet(this, _FirefoxTargetManager_onSessionDetached, \"f\"));\n    this.setupAttachmentListeners(__classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\"));\n  }\n  addTargetInterceptor(client, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n    interceptors.push(interceptor);\n    __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors);\n  }\n  removeTargetInterceptor(client, interceptor) {\n    const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n    __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors.filter(currentInterceptor => {\n      return currentInterceptor !== interceptor;\n    }));\n  }\n  setupAttachmentListeners(session) {\n    const listener = event => {\n      return __classPrivateFieldGet(this, _FirefoxTargetManager_onAttachedToTarget, \"f\").call(this, session, event);\n    };\n    assert(!__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").set(session, listener);\n    session.on('Target.attachedToTarget', listener);\n  }\n  removeSessionListeners(session) {\n    if (__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session)) {\n      session.off('Target.attachedToTarget', __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").get(session));\n      __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").delete(session);\n    }\n  }\n  getAvailableTargets() {\n    return __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\");\n  }\n  dispose() {\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n    __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n  }\n  initialize() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield __classPrivateFieldGet(_this2, _FirefoxTargetManager_connection, \"f\").send('Target.setDiscoverTargets', {\n        discover: true,\n        filter: [{}]\n      });\n      __classPrivateFieldSet(_this2, _FirefoxTargetManager_targetsIdsForInit, new Set(__classPrivateFieldGet(_this2, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").keys()), \"f\");\n      yield __classPrivateFieldGet(_this2, _FirefoxTargetManager_initializePromise, \"f\");\n    })();\n  }\n}\n_FirefoxTargetManager_connection = new WeakMap(), _FirefoxTargetManager_discoveredTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsBySessionId = new WeakMap(), _FirefoxTargetManager_ignoredTargets = new WeakMap(), _FirefoxTargetManager_targetFilterCallback = new WeakMap(), _FirefoxTargetManager_targetFactory = new WeakMap(), _FirefoxTargetManager_targetInterceptors = new WeakMap(), _FirefoxTargetManager_attachedToTargetListenersBySession = new WeakMap(), _FirefoxTargetManager_initializeCallback = new WeakMap(), _FirefoxTargetManager_initializePromise = new WeakMap(), _FirefoxTargetManager_targetsIdsForInit = new WeakMap(), _FirefoxTargetManager_onSessionDetached = new WeakMap(), _FirefoxTargetManager_onTargetCreated = new WeakMap(), _FirefoxTargetManager_onTargetDestroyed = new WeakMap(), _FirefoxTargetManager_onAttachedToTarget = new WeakMap(), _FirefoxTargetManager_instances = new WeakSet(), _FirefoxTargetManager_finishInitializationIfReady = function _FirefoxTargetManager_finishInitializationIfReady(targetId) {\n  __classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").delete(targetId);\n  if (__classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").size === 0) {\n    __classPrivateFieldGet(this, _FirefoxTargetManager_initializeCallback, \"f\").call(this);\n  }\n};","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_FirefoxTargetManager_instances","_FirefoxTargetManager_connection","_FirefoxTargetManager_discoveredTargetsByTargetId","_FirefoxTargetManager_availableTargetsByTargetId","_FirefoxTargetManager_availableTargetsBySessionId","_FirefoxTargetManager_ignoredTargets","_FirefoxTargetManager_targetFilterCallback","_FirefoxTargetManager_targetFactory","_FirefoxTargetManager_targetInterceptors","_FirefoxTargetManager_attachedToTargetListenersBySession","_FirefoxTargetManager_initializeCallback","_FirefoxTargetManager_initializePromise","_FirefoxTargetManager_targetsIdsForInit","_FirefoxTargetManager_onSessionDetached","_FirefoxTargetManager_onTargetCreated","_FirefoxTargetManager_onTargetDestroyed","_FirefoxTargetManager_onAttachedToTarget","_FirefoxTargetManager_finishInitializationIfReady","assert","Connection","EventEmitter","FirefoxTargetManager","constructor","connection","targetFactory","targetFilterCallback","add","Map","Set","WeakMap","Promise","resolve","session","removeSessionListeners","delete","id","event","targetInfo","targetId","type","attached","target","undefined","_targetId","emit","parentSession","sessionId","Error","setupAttachmentListeners","hook","on","addTargetInterceptor","client","interceptor","interceptors","push","removeTargetInterceptor","filter","currentInterceptor","listener","off","getAvailableTargets","dispose","initialize","send","discover","keys","WeakSet","size"],"sources":["/Users/sebastianqr.2208/Desktop/Status Tech/prueba-spotify/node_modules/puppeteer-core/lib/esm/puppeteer/common/FirefoxTargetManager.js"],"sourcesContent":["/**\n * Copyright 2022 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _FirefoxTargetManager_instances, _FirefoxTargetManager_connection, _FirefoxTargetManager_discoveredTargetsByTargetId, _FirefoxTargetManager_availableTargetsByTargetId, _FirefoxTargetManager_availableTargetsBySessionId, _FirefoxTargetManager_ignoredTargets, _FirefoxTargetManager_targetFilterCallback, _FirefoxTargetManager_targetFactory, _FirefoxTargetManager_targetInterceptors, _FirefoxTargetManager_attachedToTargetListenersBySession, _FirefoxTargetManager_initializeCallback, _FirefoxTargetManager_initializePromise, _FirefoxTargetManager_targetsIdsForInit, _FirefoxTargetManager_onSessionDetached, _FirefoxTargetManager_onTargetCreated, _FirefoxTargetManager_onTargetDestroyed, _FirefoxTargetManager_onAttachedToTarget, _FirefoxTargetManager_finishInitializationIfReady;\nimport { assert } from '../util/assert.js';\nimport { Connection } from './Connection.js';\nimport { EventEmitter } from './EventEmitter.js';\n/**\n * FirefoxTargetManager implements target management using\n * `Target.setDiscoverTargets` without using auto-attach. It, therefore, creates\n * targets that lazily establish their CDP sessions.\n *\n * Although the approach is potentially flaky, there is no other way for Firefox\n * because Firefox's CDP implementation does not support auto-attach.\n *\n * Firefox does not support targetInfoChanged and detachedFromTarget events:\n *\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1610855\n * - https://bugzilla.mozilla.org/show_bug.cgi?id=1636979\n *   @internal\n */\nexport class FirefoxTargetManager extends EventEmitter {\n    constructor(connection, targetFactory, targetFilterCallback) {\n        super();\n        _FirefoxTargetManager_instances.add(this);\n        _FirefoxTargetManager_connection.set(this, void 0);\n        /**\n         * Keeps track of the following events: 'Target.targetCreated',\n         * 'Target.targetDestroyed'.\n         *\n         * A target becomes discovered when 'Target.targetCreated' is received.\n         * A target is removed from this map once 'Target.targetDestroyed' is\n         * received.\n         *\n         * `targetFilterCallback` has no effect on this map.\n         */\n        _FirefoxTargetManager_discoveredTargetsByTargetId.set(this, new Map());\n        /**\n         * Keeps track of targets that were created via 'Target.targetCreated'\n         * and which one are not filtered out by `targetFilterCallback`.\n         *\n         * The target is removed from here once it's been destroyed.\n         */\n        _FirefoxTargetManager_availableTargetsByTargetId.set(this, new Map());\n        /**\n         * Tracks which sessions attach to which target.\n         */\n        _FirefoxTargetManager_availableTargetsBySessionId.set(this, new Map());\n        /**\n         * If a target was filtered out by `targetFilterCallback`, we still receive\n         * events about it from CDP, but we don't forward them to the rest of Puppeteer.\n         */\n        _FirefoxTargetManager_ignoredTargets.set(this, new Set());\n        _FirefoxTargetManager_targetFilterCallback.set(this, void 0);\n        _FirefoxTargetManager_targetFactory.set(this, void 0);\n        _FirefoxTargetManager_targetInterceptors.set(this, new WeakMap());\n        _FirefoxTargetManager_attachedToTargetListenersBySession.set(this, new WeakMap());\n        _FirefoxTargetManager_initializeCallback.set(this, () => { });\n        _FirefoxTargetManager_initializePromise.set(this, new Promise(resolve => {\n            __classPrivateFieldSet(this, _FirefoxTargetManager_initializeCallback, resolve, \"f\");\n        }));\n        _FirefoxTargetManager_targetsIdsForInit.set(this, new Set());\n        _FirefoxTargetManager_onSessionDetached.set(this, (session) => {\n            this.removeSessionListeners(session);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").delete(session);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").delete(session.id());\n        });\n        _FirefoxTargetManager_onTargetCreated.set(this, async (event) => {\n            if (__classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").has(event.targetInfo.targetId)) {\n                return;\n            }\n            __classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").set(event.targetInfo.targetId, event.targetInfo);\n            if (event.targetInfo.type === 'browser' && event.targetInfo.attached) {\n                const target = __classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, \"f\").call(this, event.targetInfo, undefined);\n                __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n                __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);\n                return;\n            }\n            if (__classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, \"f\") &&\n                !__classPrivateFieldGet(this, _FirefoxTargetManager_targetFilterCallback, \"f\").call(this, event.targetInfo)) {\n                __classPrivateFieldGet(this, _FirefoxTargetManager_ignoredTargets, \"f\").add(event.targetInfo.targetId);\n                __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetInfo.targetId);\n                return;\n            }\n            const target = __classPrivateFieldGet(this, _FirefoxTargetManager_targetFactory, \"f\").call(this, event.targetInfo, undefined);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").set(event.targetInfo.targetId, target);\n            this.emit(\"targetAvailable\" /* TargetManagerEmittedEvents.TargetAvailable */, target);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, target._targetId);\n        });\n        _FirefoxTargetManager_onTargetDestroyed.set(this, (event) => {\n            __classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").delete(event.targetId);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_instances, \"m\", _FirefoxTargetManager_finishInitializationIfReady).call(this, event.targetId);\n            const target = __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(event.targetId);\n            if (target) {\n                this.emit(\"targetGone\" /* TargetManagerEmittedEvents.TargetGone */, target);\n                __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").delete(event.targetId);\n            }\n        });\n        _FirefoxTargetManager_onAttachedToTarget.set(this, async (parentSession, event) => {\n            const targetInfo = event.targetInfo;\n            const session = __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").session(event.sessionId);\n            if (!session) {\n                throw new Error(`Session ${event.sessionId} was not created.`);\n            }\n            const target = __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId);\n            assert(target, `Target ${targetInfo.targetId} is missing`);\n            this.setupAttachmentListeners(session);\n            __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").set(session.id(), __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\").get(targetInfo.targetId));\n            for (const hook of __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(parentSession) || []) {\n                if (!(parentSession instanceof Connection)) {\n                    assert(__classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").has(parentSession.id()));\n                }\n                await hook(target, parentSession instanceof Connection\n                    ? null\n                    : __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsBySessionId, \"f\").get(parentSession.id()));\n            }\n        });\n        __classPrivateFieldSet(this, _FirefoxTargetManager_connection, connection, \"f\");\n        __classPrivateFieldSet(this, _FirefoxTargetManager_targetFilterCallback, targetFilterCallback, \"f\");\n        __classPrivateFieldSet(this, _FirefoxTargetManager_targetFactory, targetFactory, \"f\");\n        __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n        __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n        __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").on('sessiondetached', __classPrivateFieldGet(this, _FirefoxTargetManager_onSessionDetached, \"f\"));\n        this.setupAttachmentListeners(__classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\"));\n    }\n    addTargetInterceptor(client, interceptor) {\n        const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n        interceptors.push(interceptor);\n        __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors);\n    }\n    removeTargetInterceptor(client, interceptor) {\n        const interceptors = __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").get(client) || [];\n        __classPrivateFieldGet(this, _FirefoxTargetManager_targetInterceptors, \"f\").set(client, interceptors.filter(currentInterceptor => {\n            return currentInterceptor !== interceptor;\n        }));\n    }\n    setupAttachmentListeners(session) {\n        const listener = (event) => {\n            return __classPrivateFieldGet(this, _FirefoxTargetManager_onAttachedToTarget, \"f\").call(this, session, event);\n        };\n        assert(!__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session));\n        __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").set(session, listener);\n        session.on('Target.attachedToTarget', listener);\n    }\n    removeSessionListeners(session) {\n        if (__classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").has(session)) {\n            session.off('Target.attachedToTarget', __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").get(session));\n            __classPrivateFieldGet(this, _FirefoxTargetManager_attachedToTargetListenersBySession, \"f\").delete(session);\n        }\n    }\n    getAvailableTargets() {\n        return __classPrivateFieldGet(this, _FirefoxTargetManager_availableTargetsByTargetId, \"f\");\n    }\n    dispose() {\n        __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetCreated', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetCreated, \"f\"));\n        __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").off('Target.targetDestroyed', __classPrivateFieldGet(this, _FirefoxTargetManager_onTargetDestroyed, \"f\"));\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _FirefoxTargetManager_connection, \"f\").send('Target.setDiscoverTargets', {\n            discover: true,\n            filter: [{}],\n        });\n        __classPrivateFieldSet(this, _FirefoxTargetManager_targetsIdsForInit, new Set(__classPrivateFieldGet(this, _FirefoxTargetManager_discoveredTargetsByTargetId, \"f\").keys()), \"f\");\n        await __classPrivateFieldGet(this, _FirefoxTargetManager_initializePromise, \"f\");\n    }\n}\n_FirefoxTargetManager_connection = new WeakMap(), _FirefoxTargetManager_discoveredTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsByTargetId = new WeakMap(), _FirefoxTargetManager_availableTargetsBySessionId = new WeakMap(), _FirefoxTargetManager_ignoredTargets = new WeakMap(), _FirefoxTargetManager_targetFilterCallback = new WeakMap(), _FirefoxTargetManager_targetFactory = new WeakMap(), _FirefoxTargetManager_targetInterceptors = new WeakMap(), _FirefoxTargetManager_attachedToTargetListenersBySession = new WeakMap(), _FirefoxTargetManager_initializeCallback = new WeakMap(), _FirefoxTargetManager_initializePromise = new WeakMap(), _FirefoxTargetManager_targetsIdsForInit = new WeakMap(), _FirefoxTargetManager_onSessionDetached = new WeakMap(), _FirefoxTargetManager_onTargetCreated = new WeakMap(), _FirefoxTargetManager_onTargetDestroyed = new WeakMap(), _FirefoxTargetManager_onAttachedToTarget = new WeakMap(), _FirefoxTargetManager_instances = new WeakSet(), _FirefoxTargetManager_finishInitializationIfReady = function _FirefoxTargetManager_finishInitializationIfReady(targetId) {\n    __classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").delete(targetId);\n    if (__classPrivateFieldGet(this, _FirefoxTargetManager_targetsIdsForInit, \"f\").size === 0) {\n        __classPrivateFieldGet(this, _FirefoxTargetManager_initializeCallback, \"f\").call(this);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}